
Level_meter_mega88.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000010a  00800100  00001c68  00001d1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c68  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003b  0080020a  0080020a  00001e26  2**0
                  ALLOC
  3 .eeprom       00000008  00810000  00810000  00001e26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000030  00000000  00000000  00001e2e  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001e60  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000180  00000000  00000000  00001e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002758  00000000  00000000  0000201c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000076c  00000000  00000000  00004774  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000139b  00000000  00000000  00004ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003e0  00000000  00000000  0000627c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000050a  00000000  00000000  0000665c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001a76  00000000  00000000  00006b66  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000168  00000000  00000000  000085dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b6 c0       	rjmp	.+364    	; 0x16e <__ctors_end>
       2:	d0 c0       	rjmp	.+416    	; 0x1a4 <__bad_interrupt>
       4:	cf c0       	rjmp	.+414    	; 0x1a4 <__bad_interrupt>
       6:	80 c8       	rjmp	.-3840   	; 0xfffff108 <__eeprom_end+0xff7ef100>
       8:	75 c8       	rjmp	.-3862   	; 0xfffff0f4 <__eeprom_end+0xff7ef0ec>
       a:	cc c0       	rjmp	.+408    	; 0x1a4 <__bad_interrupt>
       c:	cb c0       	rjmp	.+406    	; 0x1a4 <__bad_interrupt>
       e:	ca c0       	rjmp	.+404    	; 0x1a4 <__bad_interrupt>
      10:	c9 c0       	rjmp	.+402    	; 0x1a4 <__bad_interrupt>
      12:	c8 c0       	rjmp	.+400    	; 0x1a4 <__bad_interrupt>
      14:	c7 c0       	rjmp	.+398    	; 0x1a4 <__bad_interrupt>
      16:	c6 c0       	rjmp	.+396    	; 0x1a4 <__bad_interrupt>
      18:	c5 c0       	rjmp	.+394    	; 0x1a4 <__bad_interrupt>
      1a:	c4 c0       	rjmp	.+392    	; 0x1a4 <__bad_interrupt>
      1c:	c3 c0       	rjmp	.+390    	; 0x1a4 <__bad_interrupt>
      1e:	c2 c0       	rjmp	.+388    	; 0x1a4 <__bad_interrupt>
      20:	c1 c0       	rjmp	.+386    	; 0x1a4 <__bad_interrupt>
      22:	c0 c0       	rjmp	.+384    	; 0x1a4 <__bad_interrupt>
      24:	bf c0       	rjmp	.+382    	; 0x1a4 <__bad_interrupt>
      26:	be c0       	rjmp	.+380    	; 0x1a4 <__bad_interrupt>
      28:	bd c0       	rjmp	.+378    	; 0x1a4 <__bad_interrupt>
      2a:	bc c0       	rjmp	.+376    	; 0x1a4 <__bad_interrupt>
      2c:	bb c0       	rjmp	.+374    	; 0x1a4 <__bad_interrupt>
      2e:	ba c0       	rjmp	.+372    	; 0x1a4 <__bad_interrupt>
      30:	b9 c0       	rjmp	.+370    	; 0x1a4 <__bad_interrupt>
      32:	b8 c0       	rjmp	.+368    	; 0x1a4 <__bad_interrupt>

00000034 <__trampolines_end>:
      34:	00 40       	sbci	r16, 0x00	; 0
      36:	7a 10       	cpse	r7, r10
      38:	f3 5a       	subi	r31, 0xA3	; 163
      3a:	00 a0       	ldd	r0, Z+32	; 0x20
      3c:	72 4e       	sbci	r23, 0xE2	; 226
      3e:	18 09       	sbc	r17, r8
      40:	00 10       	cpse	r0, r0
      42:	a5 d4       	rcall	.+2378   	; 0x98e <main+0xd0>
      44:	e8 00       	.word	0x00e8	; ????
      46:	00 e8       	ldi	r16, 0x80	; 128
      48:	76 48       	sbci	r23, 0x86	; 134
      4a:	17 00       	.word	0x0017	; ????
      4c:	00 e4       	ldi	r16, 0x40	; 64
      4e:	0b 54       	subi	r16, 0x4B	; 75
      50:	02 00       	.word	0x0002	; ????
      52:	00 ca       	rjmp	.-3072   	; 0xfffff454 <__eeprom_end+0xff7ef44c>
      54:	9a 3b       	cpi	r25, 0xBA	; 186
      56:	00 00       	nop
      58:	00 e1       	ldi	r16, 0x10	; 16
      5a:	f5 05       	cpc	r31, r5
      5c:	00 00       	nop
      5e:	80 96       	adiw	r24, 0x20	; 32
      60:	98 00       	.word	0x0098	; ????
      62:	00 00       	nop
      64:	40 42       	sbci	r20, 0x20	; 32
      66:	0f 00       	.word	0x000f	; ????
      68:	00 00       	nop
      6a:	a0 86       	std	Z+8, r10	; 0x08
      6c:	01 00       	.word	0x0001	; ????
      6e:	00 00       	nop
      70:	10 27       	eor	r17, r16
      72:	00 00       	nop
      74:	00 00       	nop
      76:	e8 03       	fmulsu	r22, r16
      78:	00 00       	nop
      7a:	00 00       	nop
      7c:	64 00       	.word	0x0064	; ????
      7e:	00 00       	nop
      80:	00 00       	nop
      82:	0a 00       	.word	0x000a	; ????
      84:	00 00       	nop
      86:	00 00       	nop
      88:	01 00       	.word	0x0001	; ????
      8a:	00 00       	nop
      8c:	00 00       	nop
      8e:	2c 76       	andi	r18, 0x6C	; 108
      90:	d8 88       	ldd	r13, Y+16	; 0x10
      92:	dc 67       	ori	r29, 0x7C	; 124
      94:	4f 08       	sbc	r4, r15
      96:	23 df       	rcall	.-442    	; 0xfffffede <__eeprom_end+0xff7efed6>
      98:	c1 df       	rcall	.-126    	; 0x1c <__zero_reg__+0x1b>
      9a:	ae 59       	subi	r26, 0x9E	; 158
      9c:	e1 b1       	in	r30, 0x01	; 1
      9e:	b7 96       	adiw	r30, 0x27	; 39
      a0:	e5 e3       	ldi	r30, 0x35	; 53
      a2:	e4 53       	subi	r30, 0x34	; 52
      a4:	c6 3a       	cpi	r28, 0xA6	; 166
      a6:	e6 51       	subi	r30, 0x16	; 22
      a8:	99 76       	andi	r25, 0x69	; 105
      aa:	96 e8       	ldi	r25, 0x86	; 134
      ac:	e6 c2       	rjmp	.+1484   	; 0x67a <set_Cartesian_dimensions+0x42>
      ae:	84 26       	eor	r8, r20
      b0:	eb 89       	ldd	r30, Y+19	; 0x13
      b2:	8c 9b       	sbis	0x11, 4	; 17
      b4:	62 ed       	ldi	r22, 0xD2	; 210
      b6:	40 7c       	andi	r20, 0xC0	; 192
      b8:	6f fc       	.word	0xfc6f	; ????
      ba:	ef bc       	out	0x2f, r14	; 47
      bc:	9c 9f       	mul	r25, r28
      be:	40 f2       	brcs	.-112    	; 0x50 <__SREG__+0x11>
      c0:	ba a5       	ldd	r27, Y+42	; 0x2a
      c2:	6f a5       	ldd	r22, Y+47	; 0x2f
      c4:	f4 90       	lpm	r15, Z
      c6:	05 5a       	subi	r16, 0xA5	; 165
      c8:	2a f7       	brpl	.-54     	; 0x94 <__SREG__+0x55>
      ca:	5c 93       	st	X, r21
      cc:	6b 6c       	ori	r22, 0xCB	; 203
      ce:	f9 67       	ori	r31, 0x79	; 121
      d0:	6d c1       	rjmp	.+730    	; 0x3ac <LCDdefinechar+0x3a>
      d2:	1b fc       	.word	0xfc1b	; ????
      d4:	e0 e4       	ldi	r30, 0x40	; 64
      d6:	0d 47       	sbci	r16, 0x7D	; 125
      d8:	fe f5       	brtc	.+126    	; 0x158 <LcdCustomChar+0x2a>
      da:	20 e6       	ldi	r18, 0x60	; 96
      dc:	b5 00       	.word	0x00b5	; ????
      de:	d0 ed       	ldi	r29, 0xD0	; 208
      e0:	90 2e       	mov	r9, r16
      e2:	03 00       	.word	0x0003	; ????
      e4:	94 35       	cpi	r25, 0x54	; 84
      e6:	77 05       	cpc	r23, r7
      e8:	00 80       	ld	r0, Z
      ea:	84 1e       	adc	r8, r20
      ec:	08 00       	.word	0x0008	; ????
      ee:	00 20       	and	r0, r0
      f0:	4e 0a       	sbc	r4, r30
      f2:	00 00       	nop
      f4:	00 c8       	rjmp	.-4096   	; 0xfffff0f6 <__eeprom_end+0xff7ef0ee>
      f6:	0c 33       	cpi	r16, 0x3C	; 60
      f8:	33 33       	cpi	r19, 0x33	; 51
      fa:	33 0f       	add	r19, r19
      fc:	98 6e       	ori	r25, 0xE8	; 232
      fe:	12 83       	std	Z+2, r17	; 0x02
     100:	11 41       	sbci	r17, 0x11	; 17
     102:	ef 8d       	ldd	r30, Y+31	; 0x1f
     104:	21 14       	cp	r2, r1
     106:	89 3b       	cpi	r24, 0xB9	; 185
     108:	e6 55       	subi	r30, 0x56	; 86
     10a:	16 cf       	rjmp	.-468    	; 0xffffff38 <__eeprom_end+0xff7eff30>
     10c:	fe e6       	ldi	r31, 0x6E	; 110
     10e:	db 18       	sub	r13, r11
     110:	d1 84       	ldd	r13, Z+9	; 0x09
     112:	4b 38       	cpi	r20, 0x8B	; 139
     114:	1b f7       	brvc	.-58     	; 0xdc <__SREG__+0x9d>
     116:	7c 1d       	adc	r23, r12
     118:	90 1d       	adc	r25, r0
     11a:	a4 bb       	out	0x14, r26	; 20
     11c:	e4 24       	eor	r14, r4
     11e:	20 32       	cpi	r18, 0x20	; 32
     120:	84 72       	andi	r24, 0x24	; 36
     122:	5e 22       	and	r5, r30
     124:	81 00       	.word	0x0081	; ????
     126:	c9 f1       	breq	.+114    	; 0x19a <.do_clear_bss_start>
     128:	24 ec       	ldi	r18, 0xC4	; 196
     12a:	a1 e5       	ldi	r26, 0x51	; 81
     12c:	3d 27       	eor	r19, r29

0000012e <LcdCustomChar>:
     12e:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
     13e:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
     14e:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
     15e:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

0000016e <__ctors_end>:
     16e:	11 24       	eor	r1, r1
     170:	1f be       	out	0x3f, r1	; 63
     172:	cf ef       	ldi	r28, 0xFF	; 255
     174:	d4 e0       	ldi	r29, 0x04	; 4
     176:	de bf       	out	0x3e, r29	; 62
     178:	cd bf       	out	0x3d, r28	; 61

0000017a <__do_copy_data>:
     17a:	12 e0       	ldi	r17, 0x02	; 2
     17c:	a0 e0       	ldi	r26, 0x00	; 0
     17e:	b1 e0       	ldi	r27, 0x01	; 1
     180:	e8 e6       	ldi	r30, 0x68	; 104
     182:	fc e1       	ldi	r31, 0x1C	; 28
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x10>
     186:	05 90       	lpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	aa 30       	cpi	r26, 0x0A	; 10
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0xc>

00000190 <__do_clear_bss>:
     190:	22 e0       	ldi	r18, 0x02	; 2
     192:	aa e0       	ldi	r26, 0x0A	; 10
     194:	b2 e0       	ldi	r27, 0x02	; 2
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	a5 34       	cpi	r26, 0x45	; 69
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	8e d3       	rcall	.+1820   	; 0x8be <main>
     1a2:	60 cd       	rjmp	.-1344   	; 0xfffffc64 <__eeprom_end+0xff7efc5c>

000001a4 <__bad_interrupt>:
     1a4:	2d cf       	rjmp	.-422    	; 0x0 <__vectors>

000001a6 <Average>:

#include "average.h"

void Average(float *M) {
     1a6:	8f 92       	push	r8
     1a8:	9f 92       	push	r9
     1aa:	af 92       	push	r10
     1ac:	bf 92       	push	r11
     1ae:	ef 92       	push	r14
     1b0:	ff 92       	push	r15
     1b2:	0f 93       	push	r16
     1b4:	1f 93       	push	r17
     1b6:	cf 93       	push	r28
     1b8:	7c 01       	movw	r14, r24
	static uint8_t index = 0;
	static float sum = 0;
	static uint8_t count = 0;

	// keep sum updated to improve speed.
	sum -= LM[index];
     1ba:	c0 91 33 02 	lds	r28, 0x0233	; 0x800233 <index.1605>
     1be:	84 e0       	ldi	r24, 0x04	; 4
     1c0:	c8 9f       	mul	r28, r24
     1c2:	80 01       	movw	r16, r0
     1c4:	11 24       	eor	r1, r1
     1c6:	05 5f       	subi	r16, 0xF5	; 245
     1c8:	1d 4f       	sbci	r17, 0xFD	; 253
     1ca:	f8 01       	movw	r30, r16
     1cc:	20 81       	ld	r18, Z
     1ce:	31 81       	ldd	r19, Z+1	; 0x01
     1d0:	42 81       	ldd	r20, Z+2	; 0x02
     1d2:	53 81       	ldd	r21, Z+3	; 0x03
     1d4:	60 91 34 02 	lds	r22, 0x0234	; 0x800234 <sum.1606>
     1d8:	70 91 35 02 	lds	r23, 0x0235	; 0x800235 <sum.1606+0x1>
     1dc:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <sum.1606+0x2>
     1e0:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <sum.1606+0x3>
     1e4:	0c d8       	rcall	.-4072   	; 0xfffff1fe <__eeprom_end+0xff7ef1f6>
	LM[index] = *M;
     1e6:	f7 01       	movw	r30, r14
     1e8:	20 81       	ld	r18, Z
     1ea:	31 81       	ldd	r19, Z+1	; 0x01
     1ec:	42 81       	ldd	r20, Z+2	; 0x02
     1ee:	53 81       	ldd	r21, Z+3	; 0x03
     1f0:	f8 01       	movw	r30, r16
     1f2:	20 83       	st	Z, r18
     1f4:	31 83       	std	Z+1, r19	; 0x01
     1f6:	42 83       	std	Z+2, r20	; 0x02
     1f8:	53 83       	std	Z+3, r21	; 0x03
	sum += LM[index];
     1fa:	02 d8       	rcall	.-4092   	; 0xfffff200 <__eeprom_end+0xff7ef1f8>
     1fc:	4b 01       	movw	r8, r22
     1fe:	5c 01       	movw	r10, r24
     200:	60 93 34 02 	sts	0x0234, r22	; 0x800234 <sum.1606>
     204:	70 93 35 02 	sts	0x0235, r23	; 0x800235 <sum.1606+0x1>
     208:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <sum.1606+0x2>
     20c:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <sum.1606+0x3>
	index++;
	index = index % LM_SIZE;
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	8c 0f       	add	r24, r28
     214:	6a e0       	ldi	r22, 0x0A	; 10
     216:	09 da       	rcall	.-3054   	; 0xfffff62a <__eeprom_end+0xff7ef622>
     218:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <index.1605>
	if (count < LM_SIZE) count++;
     21c:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <__data_end>
     220:	8a 30       	cpi	r24, 0x0A	; 10
     222:	18 f4       	brcc	.+6      	; 0x22a <Average+0x84>
     224:	8f 5f       	subi	r24, 0xFF	; 255
     226:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <__data_end>
	*M=sum / count;
     22a:	60 91 0a 02 	lds	r22, 0x020A	; 0x80020a <__data_end>
     22e:	70 e0       	ldi	r23, 0x00	; 0
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	e3 d8       	rcall	.-3642   	; 0xfffff3fc <__eeprom_end+0xff7ef3f4>
     236:	9b 01       	movw	r18, r22
     238:	ac 01       	movw	r20, r24
     23a:	c5 01       	movw	r24, r10
     23c:	b4 01       	movw	r22, r8
     23e:	48 d8       	rcall	.-3952   	; 0xfffff2d0 <__eeprom_end+0xff7ef2c8>
     240:	f7 01       	movw	r30, r14
     242:	60 83       	st	Z, r22
     244:	71 83       	std	Z+1, r23	; 0x01
     246:	82 83       	std	Z+2, r24	; 0x02
     248:	93 83       	std	Z+3, r25	; 0x03
	//return sum / count;
}
     24a:	cf 91       	pop	r28
     24c:	1f 91       	pop	r17
     24e:	0f 91       	pop	r16
     250:	ff 90       	pop	r15
     252:	ef 90       	pop	r14
     254:	bf 90       	pop	r11
     256:	af 90       	pop	r10
     258:	9f 90       	pop	r9
     25a:	8f 90       	pop	r8
     25c:	08 95       	ret

0000025e <LCDsendChar>:
{
	for (uint8_t i=0;i<n;i++)
	{
		LCDsendCommand(0x14);
	}
}
     25e:	9b b1       	in	r25, 0x0b	; 11
     260:	90 78       	andi	r25, 0x80	; 128
     262:	28 2f       	mov	r18, r24
     264:	20 7f       	andi	r18, 0xF0	; 240
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	35 95       	asr	r19
     26a:	27 95       	ror	r18
     26c:	2b b9       	out	0x0b, r18	; 11
     26e:	2b b1       	in	r18, 0x0b	; 11
     270:	29 2b       	or	r18, r25
     272:	2b b9       	out	0x0b, r18	; 11
     274:	58 9a       	sbi	0x0b, 0	; 11
     276:	5a 9a       	sbi	0x0b, 2	; 11
     278:	e7 ee       	ldi	r30, 0xE7	; 231
     27a:	f3 e0       	ldi	r31, 0x03	; 3
     27c:	31 97       	sbiw	r30, 0x01	; 1
     27e:	f1 f7       	brne	.-4      	; 0x27c <LCDsendChar+0x1e>
     280:	00 c0       	rjmp	.+0      	; 0x282 <LCDsendChar+0x24>
     282:	00 00       	nop
     284:	5a 98       	cbi	0x0b, 2	; 11
     286:	58 98       	cbi	0x0b, 0	; 11
     288:	e7 ee       	ldi	r30, 0xE7	; 231
     28a:	f3 e0       	ldi	r31, 0x03	; 3
     28c:	31 97       	sbiw	r30, 0x01	; 1
     28e:	f1 f7       	brne	.-4      	; 0x28c <LCDsendChar+0x2e>
     290:	00 c0       	rjmp	.+0      	; 0x292 <LCDsendChar+0x34>
     292:	00 00       	nop
     294:	8f 70       	andi	r24, 0x0F	; 15
     296:	88 0f       	add	r24, r24
     298:	88 0f       	add	r24, r24
     29a:	88 0f       	add	r24, r24
     29c:	8b b9       	out	0x0b, r24	; 11
     29e:	8b b1       	in	r24, 0x0b	; 11
     2a0:	98 2b       	or	r25, r24
     2a2:	9b b9       	out	0x0b, r25	; 11
     2a4:	58 9a       	sbi	0x0b, 0	; 11
     2a6:	5a 9a       	sbi	0x0b, 2	; 11
     2a8:	87 ee       	ldi	r24, 0xE7	; 231
     2aa:	93 e0       	ldi	r25, 0x03	; 3
     2ac:	01 97       	sbiw	r24, 0x01	; 1
     2ae:	f1 f7       	brne	.-4      	; 0x2ac <LCDsendChar+0x4e>
     2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <LCDsendChar+0x54>
     2b2:	00 00       	nop
     2b4:	5a 98       	cbi	0x0b, 2	; 11
     2b6:	58 98       	cbi	0x0b, 0	; 11
     2b8:	e7 ee       	ldi	r30, 0xE7	; 231
     2ba:	f3 e0       	ldi	r31, 0x03	; 3
     2bc:	31 97       	sbiw	r30, 0x01	; 1
     2be:	f1 f7       	brne	.-4      	; 0x2bc <LCDsendChar+0x5e>
     2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <LCDsendChar+0x64>
     2c2:	00 00       	nop
     2c4:	08 95       	ret

000002c6 <LCDsendCommand>:
     2c6:	9b b1       	in	r25, 0x0b	; 11
     2c8:	90 78       	andi	r25, 0x80	; 128
     2ca:	28 2f       	mov	r18, r24
     2cc:	20 7f       	andi	r18, 0xF0	; 240
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	35 95       	asr	r19
     2d2:	27 95       	ror	r18
     2d4:	2b b9       	out	0x0b, r18	; 11
     2d6:	2b b1       	in	r18, 0x0b	; 11
     2d8:	29 2b       	or	r18, r25
     2da:	2b b9       	out	0x0b, r18	; 11
     2dc:	5a 9a       	sbi	0x0b, 2	; 11
     2de:	e7 ee       	ldi	r30, 0xE7	; 231
     2e0:	f3 e0       	ldi	r31, 0x03	; 3
     2e2:	31 97       	sbiw	r30, 0x01	; 1
     2e4:	f1 f7       	brne	.-4      	; 0x2e2 <LCDsendCommand+0x1c>
     2e6:	00 c0       	rjmp	.+0      	; 0x2e8 <LCDsendCommand+0x22>
     2e8:	00 00       	nop
     2ea:	5a 98       	cbi	0x0b, 2	; 11
     2ec:	e7 ee       	ldi	r30, 0xE7	; 231
     2ee:	f3 e0       	ldi	r31, 0x03	; 3
     2f0:	31 97       	sbiw	r30, 0x01	; 1
     2f2:	f1 f7       	brne	.-4      	; 0x2f0 <LCDsendCommand+0x2a>
     2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <LCDsendCommand+0x30>
     2f6:	00 00       	nop
     2f8:	8f 70       	andi	r24, 0x0F	; 15
     2fa:	88 0f       	add	r24, r24
     2fc:	88 0f       	add	r24, r24
     2fe:	88 0f       	add	r24, r24
     300:	8b b9       	out	0x0b, r24	; 11
     302:	8b b1       	in	r24, 0x0b	; 11
     304:	98 2b       	or	r25, r24
     306:	9b b9       	out	0x0b, r25	; 11
     308:	5a 9a       	sbi	0x0b, 2	; 11
     30a:	87 ee       	ldi	r24, 0xE7	; 231
     30c:	93 e0       	ldi	r25, 0x03	; 3
     30e:	01 97       	sbiw	r24, 0x01	; 1
     310:	f1 f7       	brne	.-4      	; 0x30e <LCDsendCommand+0x48>
     312:	00 c0       	rjmp	.+0      	; 0x314 <LCDsendCommand+0x4e>
     314:	00 00       	nop
     316:	5a 98       	cbi	0x0b, 2	; 11
     318:	e7 ee       	ldi	r30, 0xE7	; 231
     31a:	f3 e0       	ldi	r31, 0x03	; 3
     31c:	31 97       	sbiw	r30, 0x01	; 1
     31e:	f1 f7       	brne	.-4      	; 0x31c <LCDsendCommand+0x56>
     320:	00 c0       	rjmp	.+0      	; 0x322 <LCDsendCommand+0x5c>
     322:	00 00       	nop
     324:	08 95       	ret

00000326 <LCDclr>:
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	ce cf       	rjmp	.-100    	; 0x2c6 <LCDsendCommand>

0000032a <LCDhome>:
     32a:	82 e0       	ldi	r24, 0x02	; 2
     32c:	cc cf       	rjmp	.-104    	; 0x2c6 <LCDsendCommand>

0000032e <LCDstring>:
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	00 97       	sbiw	r24, 0x00	; 0
     338:	51 f0       	breq	.+20     	; 0x34e <LCDstring+0x20>
     33a:	ec 01       	movw	r28, r24
     33c:	8c 01       	movw	r16, r24
     33e:	06 0f       	add	r16, r22
     340:	11 1d       	adc	r17, r1
     342:	c0 17       	cp	r28, r16
     344:	d1 07       	cpc	r29, r17
     346:	19 f0       	breq	.+6      	; 0x34e <LCDstring+0x20>
     348:	89 91       	ld	r24, Y+
     34a:	89 df       	rcall	.-238    	; 0x25e <LCDsendChar>
     34c:	fa cf       	rjmp	.-12     	; 0x342 <LCDstring+0x14>
     34e:	df 91       	pop	r29
     350:	cf 91       	pop	r28
     352:	1f 91       	pop	r17
     354:	0f 91       	pop	r16
     356:	08 95       	ret

00000358 <LCDGotoXY>:
     358:	62 30       	cpi	r22, 0x02	; 2
     35a:	31 f0       	breq	.+12     	; 0x368 <LCDGotoXY+0x10>
     35c:	63 30       	cpi	r22, 0x03	; 3
     35e:	31 f0       	breq	.+12     	; 0x36c <LCDGotoXY+0x14>
     360:	61 30       	cpi	r22, 0x01	; 1
     362:	29 f4       	brne	.+10     	; 0x36e <LCDGotoXY+0x16>
     364:	80 5c       	subi	r24, 0xC0	; 192
     366:	03 c0       	rjmp	.+6      	; 0x36e <LCDGotoXY+0x16>
     368:	8c 5e       	subi	r24, 0xEC	; 236
     36a:	01 c0       	rjmp	.+2      	; 0x36e <LCDGotoXY+0x16>
     36c:	8c 5a       	subi	r24, 0xAC	; 172
     36e:	80 68       	ori	r24, 0x80	; 128
     370:	aa cf       	rjmp	.-172    	; 0x2c6 <LCDsendCommand>

00000372 <LCDdefinechar>:
     372:	ff 92       	push	r15
     374:	0f 93       	push	r16
     376:	1f 93       	push	r17
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
     37c:	28 e0       	ldi	r18, 0x08	; 8
     37e:	62 9f       	mul	r22, r18
     380:	b0 01       	movw	r22, r0
     382:	11 24       	eor	r1, r1
     384:	60 64       	ori	r22, 0x40	; 64
     386:	ec 01       	movw	r28, r24
     388:	18 e0       	ldi	r17, 0x08	; 8
     38a:	16 0f       	add	r17, r22
     38c:	fe 01       	movw	r30, r28
     38e:	f4 90       	lpm	r15, Z
     390:	01 e0       	ldi	r16, 0x01	; 1
     392:	06 0f       	add	r16, r22
     394:	86 2f       	mov	r24, r22
     396:	97 df       	rcall	.-210    	; 0x2c6 <LCDsendCommand>
     398:	8f 2d       	mov	r24, r15
     39a:	61 df       	rcall	.-318    	; 0x25e <LCDsendChar>
     39c:	21 96       	adiw	r28, 0x01	; 1
     39e:	60 2f       	mov	r22, r16
     3a0:	01 13       	cpse	r16, r17
     3a2:	f4 cf       	rjmp	.-24     	; 0x38c <LCDdefinechar+0x1a>
     3a4:	df 91       	pop	r29
     3a6:	cf 91       	pop	r28
     3a8:	1f 91       	pop	r17
     3aa:	0f 91       	pop	r16
     3ac:	ff 90       	pop	r15
     3ae:	08 95       	ret

000003b0 <LCDinit>:
     3b0:	1f 93       	push	r17
     3b2:	cf 93       	push	r28
     3b4:	df 93       	push	r29
     3b6:	87 e9       	ldi	r24, 0x97	; 151
     3b8:	9a e3       	ldi	r25, 0x3A	; 58
     3ba:	01 97       	sbiw	r24, 0x01	; 1
     3bc:	f1 f7       	brne	.-4      	; 0x3ba <LCDinit+0xa>
     3be:	00 c0       	rjmp	.+0      	; 0x3c0 <LCDinit+0x10>
     3c0:	00 00       	nop
     3c2:	1b b8       	out	0x0b, r1	; 11
     3c4:	1b b8       	out	0x0b, r1	; 11
     3c6:	8a b1       	in	r24, 0x0a	; 10
     3c8:	88 67       	ori	r24, 0x78	; 120
     3ca:	8a b9       	out	0x0a, r24	; 10
     3cc:	8a b1       	in	r24, 0x0a	; 10
     3ce:	87 60       	ori	r24, 0x07	; 7
     3d0:	8a b9       	out	0x0a, r24	; 10
     3d2:	88 e1       	ldi	r24, 0x18	; 24
     3d4:	8b b9       	out	0x0b, r24	; 11
     3d6:	5a 9a       	sbi	0x0b, 2	; 11
     3d8:	e7 ee       	ldi	r30, 0xE7	; 231
     3da:	f3 e0       	ldi	r31, 0x03	; 3
     3dc:	31 97       	sbiw	r30, 0x01	; 1
     3de:	f1 f7       	brne	.-4      	; 0x3dc <LCDinit+0x2c>
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <LCDinit+0x32>
     3e2:	00 00       	nop
     3e4:	5a 98       	cbi	0x0b, 2	; 11
     3e6:	e7 ee       	ldi	r30, 0xE7	; 231
     3e8:	f3 e0       	ldi	r31, 0x03	; 3
     3ea:	31 97       	sbiw	r30, 0x01	; 1
     3ec:	f1 f7       	brne	.-4      	; 0x3ea <LCDinit+0x3a>
     3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <LCDinit+0x40>
     3f0:	00 00       	nop
     3f2:	8b b9       	out	0x0b, r24	; 11
     3f4:	5a 9a       	sbi	0x0b, 2	; 11
     3f6:	87 ee       	ldi	r24, 0xE7	; 231
     3f8:	93 e0       	ldi	r25, 0x03	; 3
     3fa:	01 97       	sbiw	r24, 0x01	; 1
     3fc:	f1 f7       	brne	.-4      	; 0x3fa <LCDinit+0x4a>
     3fe:	00 c0       	rjmp	.+0      	; 0x400 <__FUSE_REGION_LENGTH__>
     400:	00 00       	nop
     402:	5a 98       	cbi	0x0b, 2	; 11
     404:	e7 ee       	ldi	r30, 0xE7	; 231
     406:	f3 e0       	ldi	r31, 0x03	; 3
     408:	31 97       	sbiw	r30, 0x01	; 1
     40a:	f1 f7       	brne	.-4      	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
     40c:	00 c0       	rjmp	.+0      	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
     40e:	00 00       	nop
     410:	80 e1       	ldi	r24, 0x10	; 16
     412:	8b b9       	out	0x0b, r24	; 11
     414:	5a 9a       	sbi	0x0b, 2	; 11
     416:	87 ee       	ldi	r24, 0xE7	; 231
     418:	93 e0       	ldi	r25, 0x03	; 3
     41a:	01 97       	sbiw	r24, 0x01	; 1
     41c:	f1 f7       	brne	.-4      	; 0x41a <__FUSE_REGION_LENGTH__+0x1a>
     41e:	00 c0       	rjmp	.+0      	; 0x420 <__FUSE_REGION_LENGTH__+0x20>
     420:	00 00       	nop
     422:	5a 98       	cbi	0x0b, 2	; 11
     424:	e7 ee       	ldi	r30, 0xE7	; 231
     426:	f3 e0       	ldi	r31, 0x03	; 3
     428:	31 97       	sbiw	r30, 0x01	; 1
     42a:	f1 f7       	brne	.-4      	; 0x428 <__FUSE_REGION_LENGTH__+0x28>
     42c:	00 c0       	rjmp	.+0      	; 0x42e <__FUSE_REGION_LENGTH__+0x2e>
     42e:	00 00       	nop
     430:	88 e2       	ldi	r24, 0x28	; 40
     432:	49 df       	rcall	.-366    	; 0x2c6 <LCDsendCommand>
     434:	8c e0       	ldi	r24, 0x0C	; 12
     436:	47 df       	rcall	.-370    	; 0x2c6 <LCDsendCommand>
     438:	ce e2       	ldi	r28, 0x2E	; 46
     43a:	d1 e0       	ldi	r29, 0x01	; 1
     43c:	60 e0       	ldi	r22, 0x00	; 0
     43e:	11 e0       	ldi	r17, 0x01	; 1
     440:	16 0f       	add	r17, r22
     442:	ce 01       	movw	r24, r28
     444:	96 df       	rcall	.-212    	; 0x372 <LCDdefinechar>
     446:	28 96       	adiw	r28, 0x08	; 8
     448:	61 2f       	mov	r22, r17
     44a:	18 30       	cpi	r17, 0x08	; 8
     44c:	c1 f7       	brne	.-16     	; 0x43e <__FUSE_REGION_LENGTH__+0x3e>
     44e:	df 91       	pop	r29
     450:	cf 91       	pop	r28
     452:	1f 91       	pop	r17
     454:	08 95       	ret

00000456 <LCDprogressBar>:
//adapted fro mAVRLIB
void LCDprogressBar(uint8_t progress, uint8_t maxprogress, uint8_t length)
{
     456:	df 92       	push	r13
     458:	ef 92       	push	r14
     45a:	ff 92       	push	r15
     45c:	0f 93       	push	r16
     45e:	1f 93       	push	r17
     460:	cf 93       	push	r28
     462:	df 93       	push	r29
     464:	d4 2e       	mov	r13, r20
	// ***note, LCD chars 0-5 must be programmed as the bar characters
	// char 0 = empty ... char 5 = full

	// total pixel length of bargraph equals length*PROGRESSPIXELS_PER_CHAR;
	// pixel length of bar itself is
	pixelprogress = ((progress*(length*PROGRESSPIXELS_PER_CHAR))/maxprogress);
     466:	46 e0       	ldi	r20, 0x06	; 6
     468:	d4 9e       	mul	r13, r20
     46a:	90 01       	movw	r18, r0
     46c:	11 24       	eor	r1, r1
     46e:	48 2f       	mov	r20, r24
     470:	42 9f       	mul	r20, r18
     472:	c0 01       	movw	r24, r0
     474:	43 9f       	mul	r20, r19
     476:	90 0d       	add	r25, r0
     478:	11 24       	eor	r1, r1
     47a:	70 e0       	ldi	r23, 0x00	; 0
     47c:	f6 d8       	rcall	.-3604   	; 0xfffff66a <__eeprom_end+0xff7ef662>
     47e:	7b 01       	movw	r14, r22
				c = 0;
			}
			else
			{
				// this is a partial block
				c = pixelprogress % PROGRESSPIXELS_PER_CHAR;
     480:	cb 01       	movw	r24, r22
     482:	66 e0       	ldi	r22, 0x06	; 6
     484:	70 e0       	ldi	r23, 0x00	; 0
     486:	dd d8       	rcall	.-3654   	; 0xfffff642 <__eeprom_end+0xff7ef63a>
     488:	08 2f       	mov	r16, r24
	// total pixel length of bargraph equals length*PROGRESSPIXELS_PER_CHAR;
	// pixel length of bar itself is
	pixelprogress = ((progress*(length*PROGRESSPIXELS_PER_CHAR))/maxprogress);
	
	// print exactly "length" characters
	for(i=0; i<length; i++)
     48a:	c0 e0       	ldi	r28, 0x00	; 0
     48c:	d0 e0       	ldi	r29, 0x00	; 0
     48e:	10 e0       	ldi	r17, 0x00	; 0
     490:	1d 15       	cp	r17, r13
     492:	89 f0       	breq	.+34     	; 0x4b6 <LCDprogressBar+0x60>
	{
		// check if this is a full block, or partial or empty
		// (u16) cast is needed to avoid sign comparison warning
		if( ((i*(uint16_t)PROGRESSPIXELS_PER_CHAR)+5) > pixelprogress )
     494:	ce 01       	movw	r24, r28
     496:	05 96       	adiw	r24, 0x05	; 5
     498:	e8 16       	cp	r14, r24
     49a:	f9 06       	cpc	r15, r25
     49c:	28 f4       	brcc	.+10     	; 0x4a8 <LCDprogressBar+0x52>
		{
			// this is a partial or empty block
			if( ((i*(uint16_t)PROGRESSPIXELS_PER_CHAR)) > pixelprogress )
     49e:	ec 16       	cp	r14, r28
     4a0:	fd 06       	cpc	r15, r29
     4a2:	20 f4       	brcc	.+8      	; 0x4ac <LCDprogressBar+0x56>
			{
				// this is an empty block
				// use space character?
				c = 0;
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	03 c0       	rjmp	.+6      	; 0x4ae <LCDprogressBar+0x58>
			}
		}
		else
		{
			// this is a full block
			c = 5;
     4a8:	85 e0       	ldi	r24, 0x05	; 5
     4aa:	01 c0       	rjmp	.+2      	; 0x4ae <LCDprogressBar+0x58>
				c = 0;
			}
			else
			{
				// this is a partial block
				c = pixelprogress % PROGRESSPIXELS_PER_CHAR;
     4ac:	80 2f       	mov	r24, r16
			// this is a full block
			c = 5;
		}
		
		// write character to display
		LCDsendChar(c);
     4ae:	d7 de       	rcall	.-594    	; 0x25e <LCDsendChar>
	// total pixel length of bargraph equals length*PROGRESSPIXELS_PER_CHAR;
	// pixel length of bar itself is
	pixelprogress = ((progress*(length*PROGRESSPIXELS_PER_CHAR))/maxprogress);
	
	// print exactly "length" characters
	for(i=0; i<length; i++)
     4b0:	1f 5f       	subi	r17, 0xFF	; 255
     4b2:	26 96       	adiw	r28, 0x06	; 6
     4b4:	ed cf       	rjmp	.-38     	; 0x490 <LCDprogressBar+0x3a>
		
		// write character to display
		LCDsendChar(c);
	}

}
     4b6:	df 91       	pop	r29
     4b8:	cf 91       	pop	r28
     4ba:	1f 91       	pop	r17
     4bc:	0f 91       	pop	r16
     4be:	ff 90       	pop	r15
     4c0:	ef 90       	pop	r14
     4c2:	df 90       	pop	r13
     4c4:	08 95       	ret

000004c6 <get_front>:
	WDTCSR = (1<<WDCE)|(1<<WDE);
	//Start watchdog timer with 4s prescaller
	//WDTCSR = (1<<WDIE)|(1<<WDE)|(1<<WDP3);
	WDTCSR = (1<<WDIE) | (0<<WDP2) | (1<<WDP3);
	//_delay_ms(500);
	sei();
     4c6:	cf 93       	push	r28
     4c8:	df 93       	push	r29
     4ca:	28 9a       	sbi	0x05, 0	; 5
     4cc:	24 e1       	ldi	r18, 0x14	; 20
     4ce:	2a 95       	dec	r18
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <get_front+0x8>
     4d2:	28 98       	cbi	0x05, 0	; 5
     4d4:	3f ef       	ldi	r19, 0xFF	; 255
     4d6:	46 e7       	ldi	r20, 0x76	; 118
     4d8:	21 e0       	ldi	r18, 0x01	; 1
     4da:	31 50       	subi	r19, 0x01	; 1
     4dc:	40 40       	sbci	r20, 0x00	; 0
     4de:	20 40       	sbci	r18, 0x00	; 0
     4e0:	e1 f7       	brne	.-8      	; 0x4da <get_front+0x14>
     4e2:	00 c0       	rjmp	.+0      	; 0x4e4 <get_front+0x1e>
     4e4:	00 00       	nop
     4e6:	20 91 3b 02 	lds	r18, 0x023B	; 0x80023b <pulse>
     4ea:	30 91 3c 02 	lds	r19, 0x023C	; 0x80023c <pulse+0x1>
     4ee:	28 3e       	cpi	r18, 0xE8	; 232
     4f0:	3d 4f       	sbci	r19, 0xFD	; 253
     4f2:	98 f4       	brcc	.+38     	; 0x51a <__stack+0x1b>
     4f4:	ec 01       	movw	r28, r24
     4f6:	60 91 3b 02 	lds	r22, 0x023B	; 0x80023b <pulse>
     4fa:	70 91 3c 02 	lds	r23, 0x023C	; 0x80023c <pulse+0x1>
     4fe:	80 e0       	ldi	r24, 0x00	; 0
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	7a d7       	rcall	.+3828   	; 0x13f8 <__floatunsisf>
     504:	28 e2       	ldi	r18, 0x28	; 40
     506:	3e e7       	ldi	r19, 0x7E	; 126
     508:	4c e8       	ldi	r20, 0x8C	; 140
     50a:	5c e3       	ldi	r21, 0x3C	; 60
     50c:	2b d8       	rcall	.-4010   	; 0xfffff564 <__eeprom_end+0xff7ef55c>
     50e:	68 83       	st	Y, r22
     510:	79 83       	std	Y+1, r23	; 0x01
     512:	8a 83       	std	Y+2, r24	; 0x02
     514:	9b 83       	std	Y+3, r25	; 0x03
     516:	81 e0       	ldi	r24, 0x01	; 1
     518:	01 c0       	rjmp	.+2      	; 0x51c <__stack+0x1d>
     51a:	8f ef       	ldi	r24, 0xFF	; 255
     51c:	df 91       	pop	r29
     51e:	cf 91       	pop	r28
     520:	08 95       	ret

00000522 <choose_c_system>:
     522:	1f 93       	push	r17
     524:	cf 93       	push	r28
     526:	df 93       	push	r29
     528:	87 e0       	ldi	r24, 0x07	; 7
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	2d db       	rcall	.-2470   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     52e:	d8 2f       	mov	r29, r24
     530:	83 30       	cpi	r24, 0x03	; 3
     532:	08 f0       	brcs	.+2      	; 0x536 <choose_c_system+0x14>
     534:	d0 e0       	ldi	r29, 0x00	; 0
     536:	2f e7       	ldi	r18, 0x7F	; 127
     538:	88 e3       	ldi	r24, 0x38	; 56
     53a:	91 e0       	ldi	r25, 0x01	; 1
     53c:	21 50       	subi	r18, 0x01	; 1
     53e:	80 40       	sbci	r24, 0x00	; 0
     540:	90 40       	sbci	r25, 0x00	; 0
     542:	e1 f7       	brne	.-8      	; 0x53c <choose_c_system+0x1a>
     544:	00 c0       	rjmp	.+0      	; 0x546 <choose_c_system+0x24>
     546:	00 00       	nop
     548:	31 99       	sbic	0x06, 1	; 6
     54a:	1c c0       	rjmp	.+56     	; 0x584 <choose_c_system+0x62>
     54c:	31 9b       	sbis	0x06, 1	; 6
     54e:	fe cf       	rjmp	.-4      	; 0x54c <choose_c_system+0x2a>
     550:	c0 e0       	ldi	r28, 0x00	; 0
     552:	13 e0       	ldi	r17, 0x03	; 3
     554:	31 9b       	sbis	0x06, 1	; 6
     556:	16 c0       	rjmp	.+44     	; 0x584 <choose_c_system+0x62>
     558:	e8 de       	rcall	.-560    	; 0x32a <LCDhome>
     55a:	60 e0       	ldi	r22, 0x00	; 0
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	fc de       	rcall	.-520    	; 0x358 <LCDGotoXY>
     560:	ec 2f       	mov	r30, r28
     562:	f0 e0       	ldi	r31, 0x00	; 0
     564:	ee 0f       	add	r30, r30
     566:	ff 1f       	adc	r31, r31
     568:	e0 50       	subi	r30, 0x00	; 0
     56a:	ff 4f       	sbci	r31, 0xFF	; 255
     56c:	68 e0       	ldi	r22, 0x08	; 8
     56e:	80 81       	ld	r24, Z
     570:	91 81       	ldd	r25, Z+1	; 0x01
     572:	dd de       	rcall	.-582    	; 0x32e <LCDstring>
     574:	65 e0       	ldi	r22, 0x05	; 5
     576:	8d 2f       	mov	r24, r29
     578:	03 d6       	rcall	.+3078   	; 0x1180 <_key>
     57a:	61 2f       	mov	r22, r17
     57c:	56 d8       	rcall	.-3924   	; 0xfffff62a <__eeprom_end+0xff7ef622>
     57e:	d9 2f       	mov	r29, r25
     580:	c9 2f       	mov	r28, r25
     582:	e8 cf       	rjmp	.-48     	; 0x554 <choose_c_system+0x32>
     584:	6d 2f       	mov	r22, r29
     586:	87 e0       	ldi	r24, 0x07	; 7
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	0b db       	rcall	.-2538   	; 0xfffffba2 <__eeprom_end+0xff7efb9a>
     58c:	8d 2f       	mov	r24, r29
     58e:	df 91       	pop	r29
     590:	cf 91       	pop	r28
     592:	1f 91       	pop	r17
     594:	08 95       	ret

00000596 <set_cylinder_dimensions>:
     596:	cf 93       	push	r28
     598:	2f e7       	ldi	r18, 0x7F	; 127
     59a:	88 e3       	ldi	r24, 0x38	; 56
     59c:	91 e0       	ldi	r25, 0x01	; 1
     59e:	21 50       	subi	r18, 0x01	; 1
     5a0:	80 40       	sbci	r24, 0x00	; 0
     5a2:	90 40       	sbci	r25, 0x00	; 0
     5a4:	e1 f7       	brne	.-8      	; 0x59e <set_cylinder_dimensions+0x8>
     5a6:	00 c0       	rjmp	.+0      	; 0x5a8 <set_cylinder_dimensions+0x12>
     5a8:	00 00       	nop
     5aa:	31 9b       	sbis	0x06, 1	; 6
     5ac:	fe cf       	rjmp	.-4      	; 0x5aa <set_cylinder_dimensions+0x14>
     5ae:	84 e0       	ldi	r24, 0x04	; 4
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	ea da       	rcall	.-2604   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     5b4:	c8 2f       	mov	r28, r24
     5b6:	31 9b       	sbis	0x06, 1	; 6
     5b8:	11 c0       	rjmp	.+34     	; 0x5dc <set_cylinder_dimensions+0x46>
     5ba:	b7 de       	rcall	.-658    	; 0x32a <LCDhome>
     5bc:	60 e0       	ldi	r22, 0x00	; 0
     5be:	80 e0       	ldi	r24, 0x00	; 0
     5c0:	cb de       	rcall	.-618    	; 0x358 <LCDGotoXY>
     5c2:	67 e0       	ldi	r22, 0x07	; 7
     5c4:	86 e0       	ldi	r24, 0x06	; 6
     5c6:	91 e0       	ldi	r25, 0x01	; 1
     5c8:	b2 de       	rcall	.-668    	; 0x32e <LCDstring>
     5ca:	8c 2f       	mov	r24, r28
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	f5 d5       	rcall	.+3050   	; 0x11ba <inttostr>
     5d0:	64 e0       	ldi	r22, 0x04	; 4
     5d2:	ad de       	rcall	.-678    	; 0x32e <LCDstring>
     5d4:	65 e0       	ldi	r22, 0x05	; 5
     5d6:	8c 2f       	mov	r24, r28
     5d8:	d3 d5       	rcall	.+2982   	; 0x1180 <_key>
     5da:	ec cf       	rjmp	.-40     	; 0x5b4 <set_cylinder_dimensions+0x1e>
     5dc:	68 2f       	mov	r22, r24
     5de:	84 e0       	ldi	r24, 0x04	; 4
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	df da       	rcall	.-2626   	; 0xfffffba2 <__eeprom_end+0xff7efb9a>
     5e4:	2f e7       	ldi	r18, 0x7F	; 127
     5e6:	88 e3       	ldi	r24, 0x38	; 56
     5e8:	91 e0       	ldi	r25, 0x01	; 1
     5ea:	21 50       	subi	r18, 0x01	; 1
     5ec:	80 40       	sbci	r24, 0x00	; 0
     5ee:	90 40       	sbci	r25, 0x00	; 0
     5f0:	e1 f7       	brne	.-8      	; 0x5ea <set_cylinder_dimensions+0x54>
     5f2:	00 c0       	rjmp	.+0      	; 0x5f4 <set_cylinder_dimensions+0x5e>
     5f4:	00 00       	nop
     5f6:	31 9b       	sbis	0x06, 1	; 6
     5f8:	fe cf       	rjmp	.-4      	; 0x5f6 <set_cylinder_dimensions+0x60>
     5fa:	85 e0       	ldi	r24, 0x05	; 5
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	c4 da       	rcall	.-2680   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     600:	c8 2f       	mov	r28, r24
     602:	31 9b       	sbis	0x06, 1	; 6
     604:	11 c0       	rjmp	.+34     	; 0x628 <set_cylinder_dimensions+0x92>
     606:	91 de       	rcall	.-734    	; 0x32a <LCDhome>
     608:	60 e0       	ldi	r22, 0x00	; 0
     60a:	80 e0       	ldi	r24, 0x00	; 0
     60c:	a5 de       	rcall	.-694    	; 0x358 <LCDGotoXY>
     60e:	67 e0       	ldi	r22, 0x07	; 7
     610:	8e e0       	ldi	r24, 0x0E	; 14
     612:	91 e0       	ldi	r25, 0x01	; 1
     614:	8c de       	rcall	.-744    	; 0x32e <LCDstring>
     616:	8c 2f       	mov	r24, r28
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	cf d5       	rcall	.+2974   	; 0x11ba <inttostr>
     61c:	64 e0       	ldi	r22, 0x04	; 4
     61e:	87 de       	rcall	.-754    	; 0x32e <LCDstring>
     620:	65 e0       	ldi	r22, 0x05	; 5
     622:	8c 2f       	mov	r24, r28
     624:	ad d5       	rcall	.+2906   	; 0x1180 <_key>
     626:	ec cf       	rjmp	.-40     	; 0x600 <set_cylinder_dimensions+0x6a>
     628:	68 2f       	mov	r22, r24
     62a:	85 e0       	ldi	r24, 0x05	; 5
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	b9 da       	rcall	.-2702   	; 0xfffffba2 <__eeprom_end+0xff7efb9a>
     630:	31 9b       	sbis	0x06, 1	; 6
     632:	fe cf       	rjmp	.-4      	; 0x630 <set_cylinder_dimensions+0x9a>
     634:	cf 91       	pop	r28
     636:	08 95       	ret

00000638 <set_Cartesian_dimensions>:
     638:	cf 93       	push	r28
     63a:	2f e7       	ldi	r18, 0x7F	; 127
     63c:	88 e3       	ldi	r24, 0x38	; 56
     63e:	91 e0       	ldi	r25, 0x01	; 1
     640:	21 50       	subi	r18, 0x01	; 1
     642:	80 40       	sbci	r24, 0x00	; 0
     644:	90 40       	sbci	r25, 0x00	; 0
     646:	e1 f7       	brne	.-8      	; 0x640 <set_Cartesian_dimensions+0x8>
     648:	00 c0       	rjmp	.+0      	; 0x64a <set_Cartesian_dimensions+0x12>
     64a:	00 00       	nop
     64c:	31 9b       	sbis	0x06, 1	; 6
     64e:	fe cf       	rjmp	.-4      	; 0x64c <set_Cartesian_dimensions+0x14>
     650:	84 e0       	ldi	r24, 0x04	; 4
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	99 da       	rcall	.-2766   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     656:	c8 2f       	mov	r28, r24
     658:	31 9b       	sbis	0x06, 1	; 6
     65a:	11 c0       	rjmp	.+34     	; 0x67e <set_Cartesian_dimensions+0x46>
     65c:	66 de       	rcall	.-820    	; 0x32a <LCDhome>
     65e:	60 e0       	ldi	r22, 0x00	; 0
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	7a de       	rcall	.-780    	; 0x358 <LCDGotoXY>
     664:	66 e0       	ldi	r22, 0x06	; 6
     666:	86 e1       	ldi	r24, 0x16	; 22
     668:	91 e0       	ldi	r25, 0x01	; 1
     66a:	61 de       	rcall	.-830    	; 0x32e <LCDstring>
     66c:	8c 2f       	mov	r24, r28
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	a4 d5       	rcall	.+2888   	; 0x11ba <inttostr>
     672:	64 e0       	ldi	r22, 0x04	; 4
     674:	5c de       	rcall	.-840    	; 0x32e <LCDstring>
     676:	65 e0       	ldi	r22, 0x05	; 5
     678:	8c 2f       	mov	r24, r28
     67a:	82 d5       	rcall	.+2820   	; 0x1180 <_key>
     67c:	ec cf       	rjmp	.-40     	; 0x656 <set_Cartesian_dimensions+0x1e>
     67e:	68 2f       	mov	r22, r24
     680:	84 e0       	ldi	r24, 0x04	; 4
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	8e da       	rcall	.-2788   	; 0xfffffba2 <__eeprom_end+0xff7efb9a>
     686:	2f e7       	ldi	r18, 0x7F	; 127
     688:	88 e3       	ldi	r24, 0x38	; 56
     68a:	91 e0       	ldi	r25, 0x01	; 1
     68c:	21 50       	subi	r18, 0x01	; 1
     68e:	80 40       	sbci	r24, 0x00	; 0
     690:	90 40       	sbci	r25, 0x00	; 0
     692:	e1 f7       	brne	.-8      	; 0x68c <set_Cartesian_dimensions+0x54>
     694:	00 c0       	rjmp	.+0      	; 0x696 <set_Cartesian_dimensions+0x5e>
     696:	00 00       	nop
     698:	31 9b       	sbis	0x06, 1	; 6
     69a:	fe cf       	rjmp	.-4      	; 0x698 <set_Cartesian_dimensions+0x60>
     69c:	85 e0       	ldi	r24, 0x05	; 5
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	73 da       	rcall	.-2842   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     6a2:	c8 2f       	mov	r28, r24
     6a4:	31 9b       	sbis	0x06, 1	; 6
     6a6:	11 c0       	rjmp	.+34     	; 0x6ca <set_Cartesian_dimensions+0x92>
     6a8:	40 de       	rcall	.-896    	; 0x32a <LCDhome>
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	80 e0       	ldi	r24, 0x00	; 0
     6ae:	54 de       	rcall	.-856    	; 0x358 <LCDGotoXY>
     6b0:	66 e0       	ldi	r22, 0x06	; 6
     6b2:	8d e1       	ldi	r24, 0x1D	; 29
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	3b de       	rcall	.-906    	; 0x32e <LCDstring>
     6b8:	8c 2f       	mov	r24, r28
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	7e d5       	rcall	.+2812   	; 0x11ba <inttostr>
     6be:	64 e0       	ldi	r22, 0x04	; 4
     6c0:	36 de       	rcall	.-916    	; 0x32e <LCDstring>
     6c2:	65 e0       	ldi	r22, 0x05	; 5
     6c4:	8c 2f       	mov	r24, r28
     6c6:	5c d5       	rcall	.+2744   	; 0x1180 <_key>
     6c8:	ec cf       	rjmp	.-40     	; 0x6a2 <set_Cartesian_dimensions+0x6a>
     6ca:	68 2f       	mov	r22, r24
     6cc:	85 e0       	ldi	r24, 0x05	; 5
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	68 da       	rcall	.-2864   	; 0xfffffba2 <__eeprom_end+0xff7efb9a>
     6d2:	2f e7       	ldi	r18, 0x7F	; 127
     6d4:	88 e3       	ldi	r24, 0x38	; 56
     6d6:	91 e0       	ldi	r25, 0x01	; 1
     6d8:	21 50       	subi	r18, 0x01	; 1
     6da:	80 40       	sbci	r24, 0x00	; 0
     6dc:	90 40       	sbci	r25, 0x00	; 0
     6de:	e1 f7       	brne	.-8      	; 0x6d8 <set_Cartesian_dimensions+0xa0>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <set_Cartesian_dimensions+0xaa>
     6e2:	00 00       	nop
     6e4:	31 9b       	sbis	0x06, 1	; 6
     6e6:	fe cf       	rjmp	.-4      	; 0x6e4 <set_Cartesian_dimensions+0xac>
     6e8:	86 e0       	ldi	r24, 0x06	; 6
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	4d da       	rcall	.-2918   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     6ee:	c8 2f       	mov	r28, r24
     6f0:	31 9b       	sbis	0x06, 1	; 6
     6f2:	11 c0       	rjmp	.+34     	; 0x716 <set_Cartesian_dimensions+0xde>
     6f4:	1a de       	rcall	.-972    	; 0x32a <LCDhome>
     6f6:	60 e0       	ldi	r22, 0x00	; 0
     6f8:	80 e0       	ldi	r24, 0x00	; 0
     6fa:	2e de       	rcall	.-932    	; 0x358 <LCDGotoXY>
     6fc:	67 e0       	ldi	r22, 0x07	; 7
     6fe:	8e e0       	ldi	r24, 0x0E	; 14
     700:	91 e0       	ldi	r25, 0x01	; 1
     702:	15 de       	rcall	.-982    	; 0x32e <LCDstring>
     704:	8c 2f       	mov	r24, r28
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	58 d5       	rcall	.+2736   	; 0x11ba <inttostr>
     70a:	64 e0       	ldi	r22, 0x04	; 4
     70c:	10 de       	rcall	.-992    	; 0x32e <LCDstring>
     70e:	65 e0       	ldi	r22, 0x05	; 5
     710:	8c 2f       	mov	r24, r28
     712:	36 d5       	rcall	.+2668   	; 0x1180 <_key>
     714:	ec cf       	rjmp	.-40     	; 0x6ee <set_Cartesian_dimensions+0xb6>
     716:	68 2f       	mov	r22, r24
     718:	86 e0       	ldi	r24, 0x06	; 6
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	42 da       	rcall	.-2940   	; 0xfffffba2 <__eeprom_end+0xff7efb9a>
     71e:	31 9b       	sbis	0x06, 1	; 6
     720:	fe cf       	rjmp	.-4      	; 0x71e <set_Cartesian_dimensions+0xe6>
     722:	cf 91       	pop	r28
     724:	08 95       	ret

00000726 <set_Elliptic_dimensions>:
     726:	cf 93       	push	r28
     728:	2f e7       	ldi	r18, 0x7F	; 127
     72a:	88 e3       	ldi	r24, 0x38	; 56
     72c:	91 e0       	ldi	r25, 0x01	; 1
     72e:	21 50       	subi	r18, 0x01	; 1
     730:	80 40       	sbci	r24, 0x00	; 0
     732:	90 40       	sbci	r25, 0x00	; 0
     734:	e1 f7       	brne	.-8      	; 0x72e <set_Elliptic_dimensions+0x8>
     736:	00 c0       	rjmp	.+0      	; 0x738 <set_Elliptic_dimensions+0x12>
     738:	00 00       	nop
     73a:	31 9b       	sbis	0x06, 1	; 6
     73c:	fe cf       	rjmp	.-4      	; 0x73a <set_Elliptic_dimensions+0x14>
     73e:	84 e0       	ldi	r24, 0x04	; 4
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	22 da       	rcall	.-3004   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     744:	c8 2f       	mov	r28, r24
     746:	31 9b       	sbis	0x06, 1	; 6
     748:	11 c0       	rjmp	.+34     	; 0x76c <set_Elliptic_dimensions+0x46>
     74a:	ef dd       	rcall	.-1058   	; 0x32a <LCDhome>
     74c:	60 e0       	ldi	r22, 0x00	; 0
     74e:	80 e0       	ldi	r24, 0x00	; 0
     750:	03 de       	rcall	.-1018   	; 0x358 <LCDGotoXY>
     752:	66 e0       	ldi	r22, 0x06	; 6
     754:	84 e2       	ldi	r24, 0x24	; 36
     756:	91 e0       	ldi	r25, 0x01	; 1
     758:	ea dd       	rcall	.-1068   	; 0x32e <LCDstring>
     75a:	8c 2f       	mov	r24, r28
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	2d d5       	rcall	.+2650   	; 0x11ba <inttostr>
     760:	64 e0       	ldi	r22, 0x04	; 4
     762:	e5 dd       	rcall	.-1078   	; 0x32e <LCDstring>
     764:	65 e0       	ldi	r22, 0x05	; 5
     766:	8c 2f       	mov	r24, r28
     768:	0b d5       	rcall	.+2582   	; 0x1180 <_key>
     76a:	ec cf       	rjmp	.-40     	; 0x744 <set_Elliptic_dimensions+0x1e>
     76c:	68 2f       	mov	r22, r24
     76e:	84 e0       	ldi	r24, 0x04	; 4
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	17 da       	rcall	.-3026   	; 0xfffffba2 <__eeprom_end+0xff7efb9a>
     774:	2f e7       	ldi	r18, 0x7F	; 127
     776:	88 e3       	ldi	r24, 0x38	; 56
     778:	91 e0       	ldi	r25, 0x01	; 1
     77a:	21 50       	subi	r18, 0x01	; 1
     77c:	80 40       	sbci	r24, 0x00	; 0
     77e:	90 40       	sbci	r25, 0x00	; 0
     780:	e1 f7       	brne	.-8      	; 0x77a <set_Elliptic_dimensions+0x54>
     782:	00 c0       	rjmp	.+0      	; 0x784 <set_Elliptic_dimensions+0x5e>
     784:	00 00       	nop
     786:	31 9b       	sbis	0x06, 1	; 6
     788:	fe cf       	rjmp	.-4      	; 0x786 <set_Elliptic_dimensions+0x60>
     78a:	85 e0       	ldi	r24, 0x05	; 5
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	fc d9       	rcall	.-3080   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     790:	c8 2f       	mov	r28, r24
     792:	31 9b       	sbis	0x06, 1	; 6
     794:	11 c0       	rjmp	.+34     	; 0x7b8 <set_Elliptic_dimensions+0x92>
     796:	c9 dd       	rcall	.-1134   	; 0x32a <LCDhome>
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	80 e0       	ldi	r24, 0x00	; 0
     79c:	dd dd       	rcall	.-1094   	; 0x358 <LCDGotoXY>
     79e:	66 e0       	ldi	r22, 0x06	; 6
     7a0:	8c e2       	ldi	r24, 0x2C	; 44
     7a2:	91 e0       	ldi	r25, 0x01	; 1
     7a4:	c4 dd       	rcall	.-1144   	; 0x32e <LCDstring>
     7a6:	8c 2f       	mov	r24, r28
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	07 d5       	rcall	.+2574   	; 0x11ba <inttostr>
     7ac:	64 e0       	ldi	r22, 0x04	; 4
     7ae:	bf dd       	rcall	.-1154   	; 0x32e <LCDstring>
     7b0:	65 e0       	ldi	r22, 0x05	; 5
     7b2:	8c 2f       	mov	r24, r28
     7b4:	e5 d4       	rcall	.+2506   	; 0x1180 <_key>
     7b6:	ec cf       	rjmp	.-40     	; 0x790 <set_Elliptic_dimensions+0x6a>
     7b8:	68 2f       	mov	r22, r24
     7ba:	85 e0       	ldi	r24, 0x05	; 5
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	f1 d9       	rcall	.-3102   	; 0xfffffba2 <__eeprom_end+0xff7efb9a>
     7c0:	2f e7       	ldi	r18, 0x7F	; 127
     7c2:	88 e3       	ldi	r24, 0x38	; 56
     7c4:	91 e0       	ldi	r25, 0x01	; 1
     7c6:	21 50       	subi	r18, 0x01	; 1
     7c8:	80 40       	sbci	r24, 0x00	; 0
     7ca:	90 40       	sbci	r25, 0x00	; 0
     7cc:	e1 f7       	brne	.-8      	; 0x7c6 <set_Elliptic_dimensions+0xa0>
     7ce:	00 c0       	rjmp	.+0      	; 0x7d0 <set_Elliptic_dimensions+0xaa>
     7d0:	00 00       	nop
     7d2:	31 9b       	sbis	0x06, 1	; 6
     7d4:	fe cf       	rjmp	.-4      	; 0x7d2 <set_Elliptic_dimensions+0xac>
     7d6:	86 e0       	ldi	r24, 0x06	; 6
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	d6 d9       	rcall	.-3156   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     7dc:	c8 2f       	mov	r28, r24
     7de:	31 9b       	sbis	0x06, 1	; 6
     7e0:	11 c0       	rjmp	.+34     	; 0x804 <set_Elliptic_dimensions+0xde>
     7e2:	a3 dd       	rcall	.-1210   	; 0x32a <LCDhome>
     7e4:	60 e0       	ldi	r22, 0x00	; 0
     7e6:	80 e0       	ldi	r24, 0x00	; 0
     7e8:	b7 dd       	rcall	.-1170   	; 0x358 <LCDGotoXY>
     7ea:	67 e0       	ldi	r22, 0x07	; 7
     7ec:	8e e0       	ldi	r24, 0x0E	; 14
     7ee:	91 e0       	ldi	r25, 0x01	; 1
     7f0:	9e dd       	rcall	.-1220   	; 0x32e <LCDstring>
     7f2:	8c 2f       	mov	r24, r28
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	e1 d4       	rcall	.+2498   	; 0x11ba <inttostr>
     7f8:	64 e0       	ldi	r22, 0x04	; 4
     7fa:	99 dd       	rcall	.-1230   	; 0x32e <LCDstring>
     7fc:	65 e0       	ldi	r22, 0x05	; 5
     7fe:	8c 2f       	mov	r24, r28
     800:	bf d4       	rcall	.+2430   	; 0x1180 <_key>
     802:	ec cf       	rjmp	.-40     	; 0x7dc <set_Elliptic_dimensions+0xb6>
     804:	68 2f       	mov	r22, r24
     806:	86 e0       	ldi	r24, 0x06	; 6
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	cb d9       	rcall	.-3178   	; 0xfffffba2 <__eeprom_end+0xff7efb9a>
     80c:	31 9b       	sbis	0x06, 1	; 6
     80e:	fe cf       	rjmp	.-4      	; 0x80c <set_Elliptic_dimensions+0xe6>
     810:	cf 91       	pop	r28
     812:	08 95       	ret

00000814 <get_cartesian_dim>:
     814:	cf 93       	push	r28
     816:	c0 e0       	ldi	r28, 0x00	; 0
     818:	31 9b       	sbis	0x06, 1	; 6
     81a:	28 c0       	rjmp	.+80     	; 0x86c <get_cartesian_dim+0x58>
     81c:	86 dd       	rcall	.-1268   	; 0x32a <LCDhome>
     81e:	61 e0       	ldi	r22, 0x01	; 1
     820:	80 e0       	ldi	r24, 0x00	; 0
     822:	9a dd       	rcall	.-1228   	; 0x358 <LCDGotoXY>
     824:	c1 11       	cpse	r28, r1
     826:	04 c0       	rjmp	.+8      	; 0x830 <get_cartesian_dim+0x1c>
     828:	66 e0       	ldi	r22, 0x06	; 6
     82a:	86 e1       	ldi	r24, 0x16	; 22
     82c:	91 e0       	ldi	r25, 0x01	; 1
     82e:	09 c0       	rjmp	.+18     	; 0x842 <get_cartesian_dim+0x2e>
     830:	c1 30       	cpi	r28, 0x01	; 1
     832:	21 f4       	brne	.+8      	; 0x83c <get_cartesian_dim+0x28>
     834:	66 e0       	ldi	r22, 0x06	; 6
     836:	8d e1       	ldi	r24, 0x1D	; 29
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	03 c0       	rjmp	.+6      	; 0x842 <get_cartesian_dim+0x2e>
     83c:	67 e0       	ldi	r22, 0x07	; 7
     83e:	8e e0       	ldi	r24, 0x0E	; 14
     840:	91 e0       	ldi	r25, 0x01	; 1
     842:	75 dd       	rcall	.-1302   	; 0x32e <LCDstring>
     844:	8c 2f       	mov	r24, r28
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	8c 5f       	subi	r24, 0xFC	; 252
     84a:	9f 4f       	sbci	r25, 0xFF	; 255
     84c:	9d d9       	rcall	.-3270   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	b4 d4       	rcall	.+2408   	; 0x11ba <inttostr>
     852:	64 e0       	ldi	r22, 0x04	; 4
     854:	6c dd       	rcall	.-1320   	; 0x32e <LCDstring>
     856:	63 e0       	ldi	r22, 0x03	; 3
     858:	8f ea       	ldi	r24, 0xAF	; 175
     85a:	91 e0       	ldi	r25, 0x01	; 1
     85c:	68 dd       	rcall	.-1328   	; 0x32e <LCDstring>
     85e:	65 e0       	ldi	r22, 0x05	; 5
     860:	8c 2f       	mov	r24, r28
     862:	8e d4       	rcall	.+2332   	; 0x1180 <_key>
     864:	63 e0       	ldi	r22, 0x03	; 3
     866:	e1 d6       	rcall	.+3522   	; 0x162a <__udivmodqi4>
     868:	c9 2f       	mov	r28, r25
     86a:	d6 cf       	rjmp	.-84     	; 0x818 <get_cartesian_dim+0x4>
     86c:	cf 91       	pop	r28
     86e:	08 95       	ret

00000870 <get_cylinder_dim>:
     870:	cf 93       	push	r28
     872:	c0 e0       	ldi	r28, 0x00	; 0
     874:	31 9b       	sbis	0x06, 1	; 6
     876:	21 c0       	rjmp	.+66     	; 0x8ba <get_cylinder_dim+0x4a>
     878:	58 dd       	rcall	.-1360   	; 0x32a <LCDhome>
     87a:	61 e0       	ldi	r22, 0x01	; 1
     87c:	80 e0       	ldi	r24, 0x00	; 0
     87e:	6c dd       	rcall	.-1320   	; 0x358 <LCDGotoXY>
     880:	c1 11       	cpse	r28, r1
     882:	04 c0       	rjmp	.+8      	; 0x88c <get_cylinder_dim+0x1c>
     884:	68 e0       	ldi	r22, 0x08	; 8
     886:	84 e3       	ldi	r24, 0x34	; 52
     888:	91 e0       	ldi	r25, 0x01	; 1
     88a:	03 c0       	rjmp	.+6      	; 0x892 <get_cylinder_dim+0x22>
     88c:	67 e0       	ldi	r22, 0x07	; 7
     88e:	8e e0       	ldi	r24, 0x0E	; 14
     890:	91 e0       	ldi	r25, 0x01	; 1
     892:	4d dd       	rcall	.-1382   	; 0x32e <LCDstring>
     894:	8c 2f       	mov	r24, r28
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	8c 5f       	subi	r24, 0xFC	; 252
     89a:	9f 4f       	sbci	r25, 0xFF	; 255
     89c:	75 d9       	rcall	.-3350   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	8c d4       	rcall	.+2328   	; 0x11ba <inttostr>
     8a2:	64 e0       	ldi	r22, 0x04	; 4
     8a4:	44 dd       	rcall	.-1400   	; 0x32e <LCDstring>
     8a6:	63 e0       	ldi	r22, 0x03	; 3
     8a8:	8f ea       	ldi	r24, 0xAF	; 175
     8aa:	91 e0       	ldi	r25, 0x01	; 1
     8ac:	40 dd       	rcall	.-1408   	; 0x32e <LCDstring>
     8ae:	65 e0       	ldi	r22, 0x05	; 5
     8b0:	8c 2f       	mov	r24, r28
     8b2:	66 d4       	rcall	.+2252   	; 0x1180 <_key>
     8b4:	c8 2f       	mov	r28, r24
     8b6:	c1 70       	andi	r28, 0x01	; 1
     8b8:	dd cf       	rjmp	.-70     	; 0x874 <get_cylinder_dim+0x4>
     8ba:	cf 91       	pop	r28
     8bc:	08 95       	ret

000008be <main>:
}

int main()
{
     8be:	cf 93       	push	r28
     8c0:	df 93       	push	r29
     8c2:	cd b7       	in	r28, 0x3d	; 61
     8c4:	de b7       	in	r29, 0x3e	; 62
     8c6:	ad 97       	sbiw	r28, 0x2d	; 45
     8c8:	0f b6       	in	r0, 0x3f	; 63
     8ca:	f8 94       	cli
     8cc:	de bf       	out	0x3e, r29	; 62
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	cd bf       	out	0x3d, r28	; 61
uint8_t string[5]="Volu " ;
uint8_t yes_no=1;
enum coord_system coord;
//LCDinit();
//PORTB|=_BV(lcd_pwr);
LCDinit();
     8d2:	6e dd       	rcall	.-1316   	; 0x3b0 <LCDinit>
LCDclr();
     8d4:	28 dd       	rcall	.-1456   	; 0x326 <LCDclr>
init_keys();
     8d6:	4d d4       	rcall	.+2202   	; 0x1172 <init_keys>
DDRB|=(1<<shoot); //OUTPUT
     8d8:	20 9a       	sbi	0x04, 0	; 4
DDRC|=(1<<limit2);
     8da:	38 9a       	sbi	0x07, 0	; 7
DDRD|=(1<<limit1);
     8dc:	57 9a       	sbi	0x0a, 7	; 10
DDRB|=(1<<backlight);
     8de:	25 9a       	sbi	0x04, 5	; 4
PORTB|=(1<<backlight);
     8e0:	2d 9a       	sbi	0x05, 5	; 5
float lit_cm=0;
uint8_t max_height=0;
//PORTB=0x00;
TCCR1A = 0;
     8e2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__EEPROM_REGION_LENGTH__+0x7f0080>
TCCR1C = 0;
     8e6:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__EEPROM_REGION_LENGTH__+0x7f0082>
PORTB|=(1<<echo);
     8ea:	29 9a       	sbi	0x05, 1	; 5
DDRB&=~(1<<echo); //INPUT
     8ec:	21 98       	cbi	0x04, 1	; 4
//EIMSK |= _BV(INT0);  //Enable INT0
//EICRA |= _BV(ISC00); //Trigger on falling edge of INT0
//sei();
	coord = choose_c_system();
     8ee:	19 de       	rcall	.-974    	; 0x522 <choose_c_system>
     8f0:	8c 8b       	std	Y+20, r24	; 0x14
	switch (coord) 
     8f2:	81 30       	cpi	r24, 0x01	; 1
     8f4:	09 f4       	brne	.+2      	; 0x8f8 <main+0x3a>
     8f6:	3f c0       	rjmp	.+126    	; 0x976 <main+0xb8>
     8f8:	20 f0       	brcs	.+8      	; 0x902 <main+0x44>
     8fa:	82 30       	cpi	r24, 0x02	; 2
     8fc:	09 f4       	brne	.+2      	; 0x900 <main+0x42>
     8fe:	7a c0       	rjmp	.+244    	; 0x9f4 <main+0x136>
     900:	9b c0       	rjmp	.+310    	; 0xa38 <main+0x17a>
	{
		case cartessian:
		if (!(Pinkeys & _BV(enter)))
     902:	31 9b       	sbis	0x06, 1	; 6
     904:	2f c0       	rjmp	.+94     	; 0x964 <main+0xa6>
					
				}
				
			}
		}
		tmp = eeprom_read_byte(&dimensions[0]);
     906:	84 e0       	ldi	r24, 0x04	; 4
     908:	90 e0       	ldi	r25, 0x00	; 0
     90a:	3e d9       	rcall	.-3460   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     90c:	18 2f       	mov	r17, r24
		temp = eeprom_read_byte(&dimensions[1]);
     90e:	85 e0       	ldi	r24, 0x05	; 5
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	3a d9       	rcall	.-3468   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
		lit_cm = (temp*tmp)/100;
     914:	28 2f       	mov	r18, r24
     916:	30 e0       	ldi	r19, 0x00	; 0
     918:	a1 2f       	mov	r26, r17
     91a:	b0 e0       	ldi	r27, 0x00	; 0
     91c:	db d6       	rcall	.+3510   	; 0x16d4 <__umulhisi3>
     91e:	24 e6       	ldi	r18, 0x64	; 100
     920:	30 e0       	ldi	r19, 0x00	; 0
     922:	40 e0       	ldi	r20, 0x00	; 0
     924:	50 e0       	ldi	r21, 0x00	; 0
     926:	b4 d6       	rcall	.+3432   	; 0x1690 <__udivmodsi4>
     928:	ca 01       	movw	r24, r20
     92a:	b9 01       	movw	r22, r18
     92c:	65 d5       	rcall	.+2762   	; 0x13f8 <__floatunsisf>
     92e:	7b c0       	rjmp	.+246    	; 0xa26 <main+0x168>
				LCDclr();
				set_Cartesian_dimensions();
				while(Pinkeys & _BV(enter))
				{
					//LCDclr();
					LCDhome();
     930:	fc dc       	rcall	.-1544   	; 0x32a <LCDhome>
					LCDGotoXY(0,0);
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	10 dd       	rcall	.-1504   	; 0x358 <LCDGotoXY>
					LCDstring("Ok? +/- (YES|NO)",16);
     938:	60 e1       	ldi	r22, 0x10	; 16
     93a:	8d e3       	ldi	r24, 0x3D	; 61
     93c:	91 e0       	ldi	r25, 0x01	; 1
     93e:	f7 dc       	rcall	.-1554   	; 0x32e <LCDstring>
					temp=yes_no; //save the original status og yes_no
					yes_no=_key(yes_no,5);
     940:	65 e0       	ldi	r22, 0x05	; 5
     942:	81 2f       	mov	r24, r17
     944:	1d d4       	rcall	.+2106   	; 0x1180 <_key>
					yes_no%=2;
     946:	18 2f       	mov	r17, r24
     948:	11 70       	andi	r17, 0x01	; 1
					//if (!(yes_no==temp))
					//{
						LCDGotoXY(0,1);
     94a:	61 e0       	ldi	r22, 0x01	; 1
     94c:	80 e0       	ldi	r24, 0x00	; 0
     94e:	04 dd       	rcall	.-1528   	; 0x358 <LCDGotoXY>
						switch(yes_no)
						{
							case 1:
							LCDstring("NO ",3);
     950:	63 e0       	ldi	r22, 0x03	; 3
					yes_no=_key(yes_no,5);
					yes_no%=2;
					//if (!(yes_no==temp))
					//{
						LCDGotoXY(0,1);
						switch(yes_no)
     952:	11 30       	cpi	r17, 0x01	; 1
     954:	59 f4       	brne	.+22     	; 0x96c <main+0xae>
						{
							case 1:
							LCDstring("NO ",3);
     956:	8e e4       	ldi	r24, 0x4E	; 78
     958:	91 e0       	ldi	r25, 0x01	; 1
     95a:	e9 dc       	rcall	.-1582   	; 0x32e <LCDstring>
		{
			while (yes_no)
			{
				LCDclr();
				set_Cartesian_dimensions();
				while(Pinkeys & _BV(enter))
     95c:	31 99       	sbic	0x06, 1	; 6
     95e:	e8 cf       	rjmp	.-48     	; 0x930 <main+0x72>
	switch (coord) 
	{
		case cartessian:
		if (!(Pinkeys & _BV(enter)))
		{
			while (yes_no)
     960:	11 23       	and	r17, r17
     962:	89 f2       	breq	.-94     	; 0x906 <main+0x48>
			{
				LCDclr();
     964:	e0 dc       	rcall	.-1600   	; 0x326 <LCDclr>
				set_Cartesian_dimensions();
     966:	68 de       	rcall	.-816    	; 0x638 <set_Cartesian_dimensions>
				while(Pinkeys & _BV(enter))
     968:	11 e0       	ldi	r17, 0x01	; 1
     96a:	f8 cf       	rjmp	.-16     	; 0x95c <main+0x9e>
						{
							case 1:
							LCDstring("NO ",3);
							break;
							case 0:
							LCDstring("YES",3);
     96c:	82 e5       	ldi	r24, 0x52	; 82
     96e:	91 e0       	ldi	r25, 0x01	; 1
     970:	de dc       	rcall	.-1604   	; 0x32e <LCDstring>
							break;
     972:	10 e0       	ldi	r17, 0x00	; 0
     974:	f3 cf       	rjmp	.-26     	; 0x95c <main+0x9e>
		temp = eeprom_read_byte(&dimensions[1]);
		lit_cm = (temp*tmp)/100;
		max_height = eeprom_read_byte(&dimensions[2]);
		break;
		case cylinder:
		if (!(Pinkeys & _BV(enter)))
     976:	31 9b       	sbis	0x06, 1	; 6
     978:	34 c0       	rjmp	.+104    	; 0x9e2 <main+0x124>
				
			}
			
		}
		
		tmp = eeprom_read_byte(&dimensions[0]);
     97a:	84 e0       	ldi	r24, 0x04	; 4
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	04 d9       	rcall	.-3576   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
		lit_cm = (tmp*tmp)/100;
     980:	88 9f       	mul	r24, r24
     982:	c0 01       	movw	r24, r0
     984:	11 24       	eor	r1, r1
     986:	64 e6       	ldi	r22, 0x64	; 100
     988:	70 e0       	ldi	r23, 0x00	; 0
     98a:	6f d6       	rcall	.+3294   	; 0x166a <__divmodhi4>
     98c:	07 2e       	mov	r0, r23
     98e:	00 0c       	add	r0, r0
     990:	88 0b       	sbc	r24, r24
     992:	99 0b       	sbc	r25, r25
     994:	33 d5       	rcall	.+2662   	; 0x13fc <__floatsisf>
		lit_cm*=3.14;
     996:	23 ec       	ldi	r18, 0xC3	; 195
     998:	35 ef       	ldi	r19, 0xF5	; 245
     99a:	48 e4       	ldi	r20, 0x48	; 72
     99c:	50 e4       	ldi	r21, 0x40	; 64
     99e:	e2 d5       	rcall	.+3012   	; 0x1564 <__mulsf3>
     9a0:	6d 8b       	std	Y+21, r22	; 0x15
     9a2:	7e 8b       	std	Y+22, r23	; 0x16
     9a4:	8f 8b       	std	Y+23, r24	; 0x17
     9a6:	98 8f       	std	Y+24, r25	; 0x18
		max_height = eeprom_read_byte(&dimensions[1]);
     9a8:	85 e0       	ldi	r24, 0x05	; 5
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	42 c0       	rjmp	.+132    	; 0xa32 <main+0x174>
				LCDclr();
				set_cylinder_dimensions();
				while(Pinkeys & _BV(enter))
				{
					//LCDclr();
					LCDhome();
     9ae:	bd dc       	rcall	.-1670   	; 0x32a <LCDhome>
					LCDGotoXY(0,0);
     9b0:	60 e0       	ldi	r22, 0x00	; 0
     9b2:	80 e0       	ldi	r24, 0x00	; 0
     9b4:	d1 dc       	rcall	.-1630   	; 0x358 <LCDGotoXY>
					LCDstring("Ok? +/- (YES|NO)",16);
     9b6:	60 e1       	ldi	r22, 0x10	; 16
     9b8:	8d e3       	ldi	r24, 0x3D	; 61
     9ba:	91 e0       	ldi	r25, 0x01	; 1
     9bc:	b8 dc       	rcall	.-1680   	; 0x32e <LCDstring>
					temp=yes_no; //save the original status of yes_no
					yes_no=_key(yes_no,5);
     9be:	65 e0       	ldi	r22, 0x05	; 5
     9c0:	81 2f       	mov	r24, r17
     9c2:	de d3       	rcall	.+1980   	; 0x1180 <_key>
					yes_no%=2;
     9c4:	18 2f       	mov	r17, r24
     9c6:	11 70       	andi	r17, 0x01	; 1
					//if (!(yes_no==temp))
					//{
					LCDGotoXY(0,1);
     9c8:	61 e0       	ldi	r22, 0x01	; 1
     9ca:	80 e0       	ldi	r24, 0x00	; 0
     9cc:	c5 dc       	rcall	.-1654   	; 0x358 <LCDGotoXY>
					switch(yes_no)
					{
						case 1:
						LCDstring("NO ",3);
     9ce:	63 e0       	ldi	r22, 0x03	; 3
					yes_no=_key(yes_no,5);
					yes_no%=2;
					//if (!(yes_no==temp))
					//{
					LCDGotoXY(0,1);
					switch(yes_no)
     9d0:	11 30       	cpi	r17, 0x01	; 1
     9d2:	59 f4       	brne	.+22     	; 0x9ea <main+0x12c>
					{
						case 1:
						LCDstring("NO ",3);
     9d4:	8e e4       	ldi	r24, 0x4E	; 78
     9d6:	91 e0       	ldi	r25, 0x01	; 1
     9d8:	aa dc       	rcall	.-1708   	; 0x32e <LCDstring>
		{
			while (yes_no)
			{
				LCDclr();
				set_cylinder_dimensions();
				while(Pinkeys & _BV(enter))
     9da:	31 99       	sbic	0x06, 1	; 6
     9dc:	e8 cf       	rjmp	.-48     	; 0x9ae <main+0xf0>
		max_height = eeprom_read_byte(&dimensions[2]);
		break;
		case cylinder:
		if (!(Pinkeys & _BV(enter)))
		{
			while (yes_no)
     9de:	11 23       	and	r17, r17
     9e0:	61 f2       	breq	.-104    	; 0x97a <main+0xbc>
			{
				LCDclr();
     9e2:	a1 dc       	rcall	.-1726   	; 0x326 <LCDclr>
				set_cylinder_dimensions();
     9e4:	d8 dd       	rcall	.-1104   	; 0x596 <set_cylinder_dimensions>
				while(Pinkeys & _BV(enter))
     9e6:	11 e0       	ldi	r17, 0x01	; 1
     9e8:	f8 cf       	rjmp	.-16     	; 0x9da <main+0x11c>
					{
						case 1:
						LCDstring("NO ",3);
						break;
						case 0:
						LCDstring("YES",3);
     9ea:	82 e5       	ldi	r24, 0x52	; 82
     9ec:	91 e0       	ldi	r25, 0x01	; 1
     9ee:	9f dc       	rcall	.-1730   	; 0x32e <LCDstring>
						break;
     9f0:	10 e0       	ldi	r17, 0x00	; 0
     9f2:	f3 cf       	rjmp	.-26     	; 0x9da <main+0x11c>
		lit_cm = (tmp*tmp)/100;
		lit_cm*=3.14;
		max_height = eeprom_read_byte(&dimensions[1]);
		break;
		case elliptic:
		if (!(Pinkeys & _BV(enter)))
     9f4:	31 9b       	sbis	0x06, 1	; 6
		set_Elliptic_dimensions();
     9f6:	97 de       	rcall	.-722    	; 0x726 <set_Elliptic_dimensions>
		tmp = eeprom_read_byte(&dimensions[0]);
     9f8:	84 e0       	ldi	r24, 0x04	; 4
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	c5 d8       	rcall	.-3702   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     9fe:	18 2f       	mov	r17, r24
		temp = eeprom_read_byte(&dimensions[1]);		
     a00:	85 e0       	ldi	r24, 0x05	; 5
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	c1 d8       	rcall	.-3710   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
		lit_cm = (tmp*temp*12.56)/3000;
     a06:	28 2f       	mov	r18, r24
     a08:	30 e0       	ldi	r19, 0x00	; 0
     a0a:	a1 2f       	mov	r26, r17
     a0c:	b0 e0       	ldi	r27, 0x00	; 0
     a0e:	62 d6       	rcall	.+3268   	; 0x16d4 <__umulhisi3>
     a10:	f3 d4       	rcall	.+2534   	; 0x13f8 <__floatunsisf>
     a12:	23 ec       	ldi	r18, 0xC3	; 195
     a14:	35 ef       	ldi	r19, 0xF5	; 245
     a16:	48 e4       	ldi	r20, 0x48	; 72
     a18:	51 e4       	ldi	r21, 0x41	; 65
     a1a:	a4 d5       	rcall	.+2888   	; 0x1564 <__mulsf3>
     a1c:	20 e0       	ldi	r18, 0x00	; 0
     a1e:	30 e8       	ldi	r19, 0x80	; 128
     a20:	4b e3       	ldi	r20, 0x3B	; 59
     a22:	55 e4       	ldi	r21, 0x45	; 69
     a24:	55 d4       	rcall	.+2218   	; 0x12d0 <__divsf3>
     a26:	6d 8b       	std	Y+21, r22	; 0x15
     a28:	7e 8b       	std	Y+22, r23	; 0x16
     a2a:	8f 8b       	std	Y+23, r24	; 0x17
     a2c:	98 8f       	std	Y+24, r25	; 0x18
		max_height = eeprom_read_byte(&dimensions[2]);
     a2e:	86 e0       	ldi	r24, 0x06	; 6
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	aa d8       	rcall	.-3756   	; 0xfffffb88 <__eeprom_end+0xff7efb80>
     a34:	8b 8b       	std	Y+19, r24	; 0x13
		break;
     a36:	05 c0       	rjmp	.+10     	; 0xa42 <main+0x184>
DDRC|=(1<<limit2);
DDRD|=(1<<limit1);
DDRB|=(1<<backlight);
PORTB|=(1<<backlight);
float lit_cm=0;
uint8_t max_height=0;
     a38:	1b 8a       	std	Y+19, r1	; 0x13
DDRB|=(1<<shoot); //OUTPUT
DDRC|=(1<<limit2);
DDRD|=(1<<limit1);
DDRB|=(1<<backlight);
PORTB|=(1<<backlight);
float lit_cm=0;
     a3a:	1d 8a       	std	Y+21, r1	; 0x15
     a3c:	1e 8a       	std	Y+22, r1	; 0x16
     a3e:	1f 8a       	std	Y+23, r1	; 0x17
     a40:	18 8e       	std	Y+24, r1	; 0x18
uint8_t sensor_counter;
//float dis=0;
uint16_t dis_int;
//uint8_t str_buf[15];
uint8_t sample=4;
set_sleep_mode(SLEEP_MODE_PWR_DOWN);
     a42:	83 b7       	in	r24, 0x33	; 51
     a44:	81 7f       	andi	r24, 0xF1	; 241
     a46:	84 60       	ori	r24, 0x04	; 4
     a48:	83 bf       	out	0x33, r24	; 51
PCICR &= ~_BV(PCIE1);
     a4a:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__EEPROM_REGION_LENGTH__+0x7f0068>
     a4e:	8d 7f       	andi	r24, 0xFD	; 253
     a50:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__EEPROM_REGION_LENGTH__+0x7f0068>
PCMSK1|= _BV(PCINT9);
     a54:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__EEPROM_REGION_LENGTH__+0x7f006c>
     a58:	82 60       	ori	r24, 0x02	; 2
     a5a:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__EEPROM_REGION_LENGTH__+0x7f006c>
PCICR|= _BV(PCIE0);
     a5e:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__EEPROM_REGION_LENGTH__+0x7f0068>
     a62:	81 60       	ori	r24, 0x01	; 1
     a64:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__EEPROM_REGION_LENGTH__+0x7f0068>
PCMSK0|= _BV(PCINT1);
     a68:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <__EEPROM_REGION_LENGTH__+0x7f006b>
     a6c:	82 60       	ori	r24, 0x02	; 2
     a6e:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__EEPROM_REGION_LENGTH__+0x7f006b>
sei();
     a72:	78 94       	sei
//WDT_Init();
if(!(Pinkeys&_BV(up)))
     a74:	32 99       	sbic	0x06, 2	; 6
     a76:	f9 c0       	rjmp	.+498    	; 0xc6a <main+0x3ac>
{
	while(!(Pinkeys&_BV(up)));
     a78:	32 9b       	sbis	0x06, 2	; 6
     a7a:	fe cf       	rjmp	.-4      	; 0xa78 <main+0x1ba>
	LCDhome();
     a7c:	56 dc       	rcall	.-1876   	; 0x32a <LCDhome>
	LCDGotoXY(0,0);
     a7e:	60 e0       	ldi	r22, 0x00	; 0
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	6a dc       	rcall	.-1836   	; 0x358 <LCDGotoXY>
	LCDstring("Cal.? +yes -No",14);
     a84:	6e e0       	ldi	r22, 0x0E	; 14
     a86:	86 e5       	ldi	r24, 0x56	; 86
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	51 dc       	rcall	.-1886   	; 0x32e <LCDstring>
	while ((Pinkeys & _BV(up))&&(Pinkeys & _BV(down)));
     a8c:	32 9b       	sbis	0x06, 2	; 6
     a8e:	02 c0       	rjmp	.+4      	; 0xa94 <main+0x1d6>
     a90:	33 99       	sbic	0x06, 3	; 6
     a92:	fc cf       	rjmp	.-8      	; 0xa8c <main+0x1ce>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a94:	2f ef       	ldi	r18, 0xFF	; 255
     a96:	36 e7       	ldi	r19, 0x76	; 118
     a98:	41 e0       	ldi	r20, 0x01	; 1
     a9a:	21 50       	subi	r18, 0x01	; 1
     a9c:	30 40       	sbci	r19, 0x00	; 0
     a9e:	40 40       	sbci	r20, 0x00	; 0
     aa0:	e1 f7       	brne	.-8      	; 0xa9a <main+0x1dc>
     aa2:	00 c0       	rjmp	.+0      	; 0xaa4 <main+0x1e6>
     aa4:	00 00       	nop
	_delay_ms(120);
	if(!(Pinkeys & _BV(up)))
     aa6:	32 99       	sbic	0x06, 2	; 6
     aa8:	ac c0       	rjmp	.+344    	; 0xc02 <main+0x344>
	{
		LCDGotoXY(0,0);
     aaa:	60 e0       	ldi	r22, 0x00	; 0
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	54 dc       	rcall	.-1880   	; 0x358 <LCDGotoXY>
		LCDstring("set a target at",15);
     ab0:	6f e0       	ldi	r22, 0x0F	; 15
     ab2:	85 e6       	ldi	r24, 0x65	; 101
     ab4:	91 e0       	ldi	r25, 0x01	; 1
     ab6:	3b dc       	rcall	.-1930   	; 0x32e <LCDstring>
		LCDGotoXY(0,1);
     ab8:	61 e0       	ldi	r22, 0x01	; 1
     aba:	80 e0       	ldi	r24, 0x00	; 0
     abc:	4d dc       	rcall	.-1894   	; 0x358 <LCDGotoXY>
		LCDstring("0.5m&press enter",16);
     abe:	60 e1       	ldi	r22, 0x10	; 16
     ac0:	85 e7       	ldi	r24, 0x75	; 117
     ac2:	91 e0       	ldi	r25, 0x01	; 1
     ac4:	34 dc       	rcall	.-1944   	; 0x32e <LCDstring>
		while(Pinkeys & _BV(enter));
     ac6:	31 99       	sbic	0x06, 1	; 6
     ac8:	fe cf       	rjmp	.-4      	; 0xac6 <main+0x208>
     aca:	5f ef       	ldi	r21, 0xFF	; 255
     acc:	86 e7       	ldi	r24, 0x76	; 118
     ace:	91 e0       	ldi	r25, 0x01	; 1
     ad0:	51 50       	subi	r21, 0x01	; 1
     ad2:	80 40       	sbci	r24, 0x00	; 0
     ad4:	90 40       	sbci	r25, 0x00	; 0
     ad6:	e1 f7       	brne	.-8      	; 0xad0 <main+0x212>
     ad8:	00 c0       	rjmp	.+0      	; 0xada <main+0x21c>
     ada:	00 00       	nop
		_delay_ms(120);
		LCDclr();
     adc:	24 dc       	rcall	.-1976   	; 0x326 <LCDclr>
		LCDGotoXY(0,0);
     ade:	60 e0       	ldi	r22, 0x00	; 0
     ae0:	80 e0       	ldi	r24, 0x00	; 0
     ae2:	3a dc       	rcall	.-1932   	; 0x358 <LCDGotoXY>
		LCDstring("cal. in progress",16);
     ae4:	60 e1       	ldi	r22, 0x10	; 16
     ae6:	86 e8       	ldi	r24, 0x86	; 134
     ae8:	91 e0       	ldi	r25, 0x01	; 1
     aea:	21 dc       	rcall	.-1982   	; 0x32e <LCDstring>
		LCDGotoXY(0,1);
     aec:	61 e0       	ldi	r22, 0x01	; 1
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	33 dc       	rcall	.-1946   	; 0x358 <LCDGotoXY>
		for(j=0;j<=20;j++)
     af2:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <j>
     af6:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <j>
     afa:	85 31       	cpi	r24, 0x15	; 21
     afc:	98 f5       	brcc	.+102    	; 0xb64 <main+0x2a6>
		{
			if(meas_ready)
     afe:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <meas_ready>
     b02:	88 23       	and	r24, r24
     b04:	c1 f0       	breq	.+48     	; 0xb36 <main+0x278>
			{
				get_front(&dis);
     b06:	8d e3       	ldi	r24, 0x3D	; 61
     b08:	92 e0       	ldi	r25, 0x02	; 2
     b0a:	dd dc       	rcall	.-1606   	; 0x4c6 <get_front>
				dis_av=dis;
     b0c:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <dis>
     b10:	90 91 3e 02 	lds	r25, 0x023E	; 0x80023e <dis+0x1>
     b14:	a0 91 3f 02 	lds	r26, 0x023F	; 0x80023f <dis+0x2>
     b18:	b0 91 40 02 	lds	r27, 0x0240	; 0x800240 <dis+0x3>
     b1c:	80 93 41 02 	sts	0x0241, r24	; 0x800241 <dis_av>
     b20:	90 93 42 02 	sts	0x0242, r25	; 0x800242 <dis_av+0x1>
     b24:	a0 93 43 02 	sts	0x0243, r26	; 0x800243 <dis_av+0x2>
     b28:	b0 93 44 02 	sts	0x0244, r27	; 0x800244 <dis_av+0x3>
				Average(&dis_av);
     b2c:	81 e4       	ldi	r24, 0x41	; 65
     b2e:	92 e0       	ldi	r25, 0x02	; 2
     b30:	3a db       	rcall	.-2444   	; 0x1a6 <Average>
				meas_ready=0;
     b32:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <meas_ready>
			}
			
			//LCDstring(".",1);
			LCDGotoXY(0,1);
     b36:	61 e0       	ldi	r22, 0x01	; 1
     b38:	80 e0       	ldi	r24, 0x00	; 0
     b3a:	0e dc       	rcall	.-2020   	; 0x358 <LCDGotoXY>
			LCDprogressBar(j, 20, 16);
     b3c:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <j>
     b40:	40 e1       	ldi	r20, 0x10	; 16
     b42:	64 e1       	ldi	r22, 0x14	; 20
     b44:	88 dc       	rcall	.-1776   	; 0x456 <LCDprogressBar>
     b46:	af ef       	ldi	r26, 0xFF	; 255
     b48:	b0 e7       	ldi	r27, 0x70	; 112
     b4a:	22 e0       	ldi	r18, 0x02	; 2
     b4c:	a1 50       	subi	r26, 0x01	; 1
     b4e:	b0 40       	sbci	r27, 0x00	; 0
     b50:	20 40       	sbci	r18, 0x00	; 0
     b52:	e1 f7       	brne	.-8      	; 0xb4c <main+0x28e>
     b54:	00 c0       	rjmp	.+0      	; 0xb56 <main+0x298>
     b56:	00 00       	nop
		_delay_ms(120);
		LCDclr();
		LCDGotoXY(0,0);
		LCDstring("cal. in progress",16);
		LCDGotoXY(0,1);
		for(j=0;j<=20;j++)
     b58:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <j>
     b5c:	8f 5f       	subi	r24, 0xFF	; 255
     b5e:	80 93 39 02 	sts	0x0239, r24	; 0x800239 <j>
     b62:	c9 cf       	rjmp	.-110    	; 0xaf6 <main+0x238>
			LCDGotoXY(0,1);
			LCDprogressBar(j, 20, 16);
			_delay_ms(200);
						
		}
		LCDclr();
     b64:	e0 db       	rcall	.-2112   	; 0x326 <LCDclr>
		LCDGotoXY(0,0);
     b66:	60 e0       	ldi	r22, 0x00	; 0
     b68:	80 e0       	ldi	r24, 0x00	; 0
     b6a:	f6 db       	rcall	.-2068   	; 0x358 <LCDGotoXY>
		LCDstring("Dist= ",6);
     b6c:	66 e0       	ldi	r22, 0x06	; 6
     b6e:	87 e9       	ldi	r24, 0x97	; 151
     b70:	91 e0       	ldi	r25, 0x01	; 1
     b72:	dd db       	rcall	.-2118   	; 0x32e <LCDstring>
		dtostrf(dis_av,4,3,float2string);
     b74:	60 91 41 02 	lds	r22, 0x0241	; 0x800241 <dis_av>
     b78:	70 91 42 02 	lds	r23, 0x0242	; 0x800242 <dis_av+0x1>
     b7c:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <dis_av+0x2>
     b80:	90 91 44 02 	lds	r25, 0x0244	; 0x800244 <dis_av+0x3>
     b84:	ae 01       	movw	r20, r28
     b86:	4f 5f       	subi	r20, 0xFF	; 255
     b88:	5f 4f       	sbci	r21, 0xFF	; 255
     b8a:	7a 01       	movw	r14, r20
     b8c:	8a 01       	movw	r16, r20
     b8e:	23 e0       	ldi	r18, 0x03	; 3
     b90:	30 e0       	ldi	r19, 0x00	; 0
     b92:	44 e0       	ldi	r20, 0x04	; 4
     b94:	50 e0       	ldi	r21, 0x00	; 0
     b96:	aa d5       	rcall	.+2900   	; 0x16ec <dtostrf>
		LCDstring(float2string,strlen(float2string));
     b98:	f7 01       	movw	r30, r14
     b9a:	01 90       	ld	r0, Z+
     b9c:	00 20       	and	r0, r0
     b9e:	e9 f7       	brne	.-6      	; 0xb9a <main+0x2dc>
     ba0:	31 97       	sbiw	r30, 0x01	; 1
     ba2:	bf 01       	movw	r22, r30
     ba4:	6e 19       	sub	r22, r14
     ba6:	7f 09       	sbc	r23, r15
     ba8:	c7 01       	movw	r24, r14
     baa:	c1 db       	rcall	.-2174   	; 0x32e <LCDstring>
		LCDGotoXY(0,1);
     bac:	61 e0       	ldi	r22, 0x01	; 1
     bae:	80 e0       	ldi	r24, 0x00	; 0
     bb0:	d3 db       	rcall	.-2138   	; 0x358 <LCDGotoXY>
		LCDstring("Cal_coef= ",10);
     bb2:	6a e0       	ldi	r22, 0x0A	; 10
     bb4:	8e e9       	ldi	r24, 0x9E	; 158
     bb6:	91 e0       	ldi	r25, 0x01	; 1
     bb8:	ba db       	rcall	.-2188   	; 0x32e <LCDstring>
		cal_coef=dis_av/50.0;
     bba:	60 91 41 02 	lds	r22, 0x0241	; 0x800241 <dis_av>
     bbe:	70 91 42 02 	lds	r23, 0x0242	; 0x800242 <dis_av+0x1>
     bc2:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <dis_av+0x2>
     bc6:	90 91 44 02 	lds	r25, 0x0244	; 0x800244 <dis_av+0x3>
     bca:	20 e0       	ldi	r18, 0x00	; 0
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	48 e4       	ldi	r20, 0x48	; 72
     bd0:	52 e4       	ldi	r21, 0x42	; 66
     bd2:	7e d3       	rcall	.+1788   	; 0x12d0 <__divsf3>
     bd4:	4b 01       	movw	r8, r22
     bd6:	5c 01       	movw	r10, r24
		dtostrf(cal_coef,4,3,float2string);
     bd8:	23 e0       	ldi	r18, 0x03	; 3
     bda:	30 e0       	ldi	r19, 0x00	; 0
     bdc:	44 e0       	ldi	r20, 0x04	; 4
     bde:	50 e0       	ldi	r21, 0x00	; 0
     be0:	85 d5       	rcall	.+2826   	; 0x16ec <dtostrf>
		LCDstring(float2string,strlen(float2string));
     be2:	f7 01       	movw	r30, r14
     be4:	01 90       	ld	r0, Z+
     be6:	00 20       	and	r0, r0
     be8:	e9 f7       	brne	.-6      	; 0xbe4 <main+0x326>
     bea:	31 97       	sbiw	r30, 0x01	; 1
     bec:	bf 01       	movw	r22, r30
     bee:	6e 19       	sub	r22, r14
     bf0:	7f 09       	sbc	r23, r15
     bf2:	c7 01       	movw	r24, r14
     bf4:	9c db       	rcall	.-2248   	; 0x32e <LCDstring>
		eeprom_update_float(&cal[0],cal_coef);
     bf6:	b5 01       	movw	r22, r10
     bf8:	a4 01       	movw	r20, r8
     bfa:	80 e0       	ldi	r24, 0x00	; 0
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	e3 d7       	rcall	.+4038   	; 0x1bc6 <eeprom_update_dword>
     c00:	2a c0       	rjmp	.+84     	; 0xc56 <main+0x398>
					
	}
	else if(!(Pinkeys&_BV(down)))
     c02:	33 99       	sbic	0x06, 3	; 6
     c04:	22 c0       	rjmp	.+68     	; 0xc4a <main+0x38c>
	{
		cal_coef=eeprom_read_float(&cal[0]);
     c06:	80 e0       	ldi	r24, 0x00	; 0
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	c6 d7       	rcall	.+3980   	; 0x1b98 <eeprom_read_dword>
     c0c:	4b 01       	movw	r8, r22
     c0e:	5c 01       	movw	r10, r24
		LCDGotoXY(0,1);
     c10:	61 e0       	ldi	r22, 0x01	; 1
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	a1 db       	rcall	.-2238   	; 0x358 <LCDGotoXY>
		LCDstring("Cal_coef= ",10);
     c16:	6a e0       	ldi	r22, 0x0A	; 10
     c18:	8e e9       	ldi	r24, 0x9E	; 158
     c1a:	91 e0       	ldi	r25, 0x01	; 1
     c1c:	88 db       	rcall	.-2288   	; 0x32e <LCDstring>
		dtostrf(cal_coef,4,3,float2string);
     c1e:	ce 01       	movw	r24, r28
     c20:	01 96       	adiw	r24, 0x01	; 1
     c22:	7c 01       	movw	r14, r24
     c24:	8c 01       	movw	r16, r24
     c26:	23 e0       	ldi	r18, 0x03	; 3
     c28:	30 e0       	ldi	r19, 0x00	; 0
     c2a:	44 e0       	ldi	r20, 0x04	; 4
     c2c:	50 e0       	ldi	r21, 0x00	; 0
     c2e:	c5 01       	movw	r24, r10
     c30:	b4 01       	movw	r22, r8
     c32:	5c d5       	rcall	.+2744   	; 0x16ec <dtostrf>
		LCDstring(float2string,strlen(float2string));
     c34:	f7 01       	movw	r30, r14
     c36:	01 90       	ld	r0, Z+
     c38:	00 20       	and	r0, r0
     c3a:	e9 f7       	brne	.-6      	; 0xc36 <main+0x378>
     c3c:	31 97       	sbiw	r30, 0x01	; 1
     c3e:	bf 01       	movw	r22, r30
     c40:	6e 19       	sub	r22, r14
     c42:	7f 09       	sbc	r23, r15
     c44:	c7 01       	movw	r24, r14
     c46:	73 db       	rcall	.-2330   	; 0x32e <LCDstring>
     c48:	06 c0       	rjmp	.+12     	; 0xc56 <main+0x398>
{
uint8_t tmp=0;
uint32_t temp;
uint8_t float2string[17];
float temp1=0.0;
float cal_coef=1.0;
     c4a:	81 2c       	mov	r8, r1
     c4c:	91 2c       	mov	r9, r1
     c4e:	70 e8       	ldi	r23, 0x80	; 128
     c50:	a7 2e       	mov	r10, r23
     c52:	7f e3       	ldi	r23, 0x3F	; 63
     c54:	b7 2e       	mov	r11, r23
     c56:	9f ef       	ldi	r25, 0xFF	; 255
     c58:	a9 e6       	ldi	r26, 0x69	; 105
     c5a:	b8 e1       	ldi	r27, 0x18	; 24
     c5c:	91 50       	subi	r25, 0x01	; 1
     c5e:	a0 40       	sbci	r26, 0x00	; 0
     c60:	b0 40       	sbci	r27, 0x00	; 0
     c62:	e1 f7       	brne	.-8      	; 0xc5c <main+0x39e>
     c64:	00 c0       	rjmp	.+0      	; 0xc66 <main+0x3a8>
     c66:	00 00       	nop
     c68:	06 c0       	rjmp	.+12     	; 0xc76 <main+0x3b8>
     c6a:	81 2c       	mov	r8, r1
     c6c:	91 2c       	mov	r9, r1
     c6e:	60 e8       	ldi	r22, 0x80	; 128
     c70:	a6 2e       	mov	r10, r22
     c72:	6f e3       	ldi	r22, 0x3F	; 63
     c74:	b6 2e       	mov	r11, r22
			else
				temp1 = lit_cm*(max_height-dis_av)/10.0;
			//LCDstring(inttostr(temp),4);
			//LCDstring(inttostr(dis),4);
			//LCDsendChar('e');
			if(dis_av>(max_height*3/4) && dis_av<(max_height*5/6))//tank emptier than 3/4 of max 
     c76:	4b 88       	ldd	r4, Y+19	; 0x13
     c78:	24 2d       	mov	r18, r4
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	43 e0       	ldi	r20, 0x03	; 3
     c7e:	44 9e       	mul	r4, r20
     c80:	f0 01       	movw	r30, r0
     c82:	11 24       	eor	r1, r1
     c84:	f5 95       	asr	r31
     c86:	e7 95       	ror	r30
     c88:	f5 95       	asr	r31
     c8a:	e7 95       	ror	r30
     c8c:	55 e0       	ldi	r21, 0x05	; 5
     c8e:	45 9e       	mul	r4, r21
     c90:	c0 01       	movw	r24, r0
     c92:	11 24       	eor	r1, r1
     c94:	66 e0       	ldi	r22, 0x06	; 6
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	e8 d4       	rcall	.+2512   	; 0x166a <__divmodhi4>
     c9a:	7b 01       	movw	r14, r22
			{
				PORTD|=(1<<limit1);
			}
			else if (dis_av <(max_height*2/3))
     c9c:	c9 01       	movw	r24, r18
     c9e:	88 0f       	add	r24, r24
     ca0:	99 1f       	adc	r25, r25
     ca2:	63 e0       	ldi	r22, 0x03	; 3
     ca4:	70 e0       	ldi	r23, 0x00	; 0
     ca6:	e1 d4       	rcall	.+2498   	; 0x166a <__divmodhi4>
			{
				PORTD&=~(1<<limit1);
			}
			
			if(dis_av>(max_height*7/8))//tank emptier than 7/8 of max
     ca8:	a7 e0       	ldi	r26, 0x07	; 7
     caa:	4a 9e       	mul	r4, r26
     cac:	c0 01       	movw	r24, r0
     cae:	11 24       	eor	r1, r1
     cb0:	53 e0       	ldi	r21, 0x03	; 3
     cb2:	95 95       	asr	r25
     cb4:	87 95       	ror	r24
     cb6:	5a 95       	dec	r21
     cb8:	e1 f7       	brne	.-8      	; 0xcb2 <main+0x3f4>
     cba:	b4 ef       	ldi	r27, 0xF4	; 244
     cbc:	b9 8f       	std	Y+25, r27	; 0x19
     cbe:	1a 8a       	std	Y+18, r1	; 0x12
     cc0:	29 01       	movw	r4, r18
     cc2:	33 0f       	add	r19, r19
     cc4:	66 08       	sbc	r6, r6
     cc6:	77 08       	sbc	r7, r7
     cc8:	4a 8e       	std	Y+26, r4	; 0x1a
     cca:	5b 8e       	std	Y+27, r5	; 0x1b
     ccc:	6c 8e       	std	Y+28, r6	; 0x1c
     cce:	7d 8e       	std	Y+29, r7	; 0x1d
			else
				temp1 = lit_cm*(max_height-dis_av)/10.0;
			//LCDstring(inttostr(temp),4);
			//LCDstring(inttostr(dis),4);
			//LCDsendChar('e');
			if(dis_av>(max_height*3/4) && dis_av<(max_height*5/6))//tank emptier than 3/4 of max 
     cd0:	2f 01       	movw	r4, r30
     cd2:	ff 0f       	add	r31, r31
     cd4:	66 08       	sbc	r6, r6
     cd6:	77 08       	sbc	r7, r7
     cd8:	4a a2       	std	Y+34, r4	; 0x22
     cda:	5b a2       	std	Y+35, r5	; 0x23
     cdc:	6c a2       	std	Y+36, r6	; 0x24
     cde:	7d a2       	std	Y+37, r7	; 0x25
			else if (dis_av <(max_height*2/3))
			{
				PORTD&=~(1<<limit1);
			}
			
			if(dis_av>(max_height*7/8))//tank emptier than 7/8 of max
     ce0:	2c 01       	movw	r4, r24
     ce2:	99 0f       	add	r25, r25
     ce4:	66 08       	sbc	r6, r6
     ce6:	77 08       	sbc	r7, r7
     ce8:	4e a2       	std	Y+38, r4	; 0x26
     cea:	5f a2       	std	Y+39, r5	; 0x27
     cec:	68 a6       	std	Y+40, r6	; 0x28
     cee:	79 a6       	std	Y+41, r7	; 0x29
			tmp=0;
		}
		else continue;
		if (temp1)
		//sprintf(float2string,"%0.2f",temp1);
		dtostrf(temp1,4,3,float2string);
     cf0:	9e 01       	movw	r18, r28
     cf2:	2f 5f       	subi	r18, 0xFF	; 255
     cf4:	3f 4f       	sbci	r19, 0xFF	; 255
     cf6:	19 01       	movw	r2, r18
				PORTC|=(1<<limit2);
				LCDGotoXY(12,1);
				LCDstring("!!! ",4);
				LCDGotoXY(0,0);
			}
			else if (dis_av <(max_height*5/6))
     cf8:	27 01       	movw	r4, r14
     cfa:	ff 0c       	add	r15, r15
     cfc:	66 08       	sbc	r6, r6
     cfe:	77 08       	sbc	r7, r7
     d00:	4e 8e       	std	Y+30, r4	; 0x1e
     d02:	5f 8e       	std	Y+31, r5	; 0x1f
     d04:	68 a2       	std	Y+32, r6	; 0x20
     d06:	79 a2       	std	Y+33, r7	; 0x21
			//LCDsendChar('e');
			if(dis_av>(max_height*3/4) && dis_av<(max_height*5/6))//tank emptier than 3/4 of max 
			{
				PORTD|=(1<<limit1);
			}
			else if (dis_av <(max_height*2/3))
     d08:	2b 01       	movw	r4, r22
     d0a:	77 0f       	add	r23, r23
     d0c:	66 08       	sbc	r6, r6
     d0e:	77 08       	sbc	r7, r7
     d10:	4a a6       	std	Y+42, r4	; 0x2a
     d12:	5b a6       	std	Y+43, r5	; 0x2b
     d14:	6c a6       	std	Y+44, r6	; 0x2c
     d16:	7d a6       	std	Y+45, r7	; 0x2d
	_delay_ms(2000);
}
while(1)
	{	//max_height=200;
		sensor_counter++;
		if (countr) countr--;
     d18:	59 8c       	ldd	r5, Y+25	; 0x19
     d1a:	55 20       	and	r5, r5
     d1c:	21 f0       	breq	.+8      	; 0xd26 <main+0x468>
     d1e:	25 2d       	mov	r18, r5
     d20:	21 50       	subi	r18, 0x01	; 1
     d22:	29 8f       	std	Y+25, r18	; 0x19
     d24:	22 c0       	rjmp	.+68     	; 0xd6a <main+0x4ac>
		else// (!countr)
		{
			//sleep_enable();
			//WDT_Init();
			
			PORTB&=~(1<<backlight);
     d26:	2d 98       	cbi	0x05, 5	; 5
			PCICR|= _BV(PCIE1);
     d28:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__EEPROM_REGION_LENGTH__+0x7f0068>
     d2c:	82 60       	ori	r24, 0x02	; 2
     d2e:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__EEPROM_REGION_LENGTH__+0x7f0068>
			PCMSK1|= _BV(PCINT9);
     d32:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__EEPROM_REGION_LENGTH__+0x7f006c>
     d36:	82 60       	ori	r24, 0x02	; 2
     d38:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__EEPROM_REGION_LENGTH__+0x7f006c>
			sei();
     d3c:	78 94       	sei
			
			sleep_mode();
     d3e:	83 b7       	in	r24, 0x33	; 51
     d40:	81 60       	ori	r24, 0x01	; 1
     d42:	83 bf       	out	0x33, r24	; 51
     d44:	88 95       	sleep
     d46:	83 b7       	in	r24, 0x33	; 51
     d48:	8e 7f       	andi	r24, 0xFE	; 254
     d4a:	83 bf       	out	0x33, r24	; 51
			cli();
     d4c:	f8 94       	cli
			sleep_disable();
     d4e:	83 b7       	in	r24, 0x33	; 51
     d50:	8e 7f       	andi	r24, 0xFE	; 254
     d52:	83 bf       	out	0x33, r24	; 51
			PCICR &= ~_BV(PCIE1);
     d54:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__EEPROM_REGION_LENGTH__+0x7f0068>
     d58:	8d 7f       	andi	r24, 0xFD	; 253
     d5a:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__EEPROM_REGION_LENGTH__+0x7f0068>
			PCMSK1 &= _BV(PCINT9);
     d5e:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__EEPROM_REGION_LENGTH__+0x7f006c>
     d62:	82 70       	andi	r24, 0x02	; 2
     d64:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__EEPROM_REGION_LENGTH__+0x7f006c>
			sei();
     d68:	78 94       	sei
			
		}*/
		//dis=get_front();
		//get_front(&dis);
		//LCDclr();
		LCDhome();
     d6a:	df da       	rcall	.-2626   	; 0x32a <LCDhome>
		LCDGotoXY(0,0);
     d6c:	60 e0       	ldi	r22, 0x00	; 0
     d6e:	80 e0       	ldi	r24, 0x00	; 0
     d70:	f3 da       	rcall	.-2586   	; 0x358 <LCDGotoXY>
		//if ((get_front(&dis)!=-1)&& sensor_counter==3)
		if((get_front(&dis)!=-1)&& meas_ready)
     d72:	8d e3       	ldi	r24, 0x3D	; 61
     d74:	92 e0       	ldi	r25, 0x02	; 2
     d76:	a7 db       	rcall	.-2226   	; 0x4c6 <get_front>
     d78:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <meas_ready>
     d7c:	88 23       	and	r24, r24
     d7e:	09 f4       	brne	.+2      	; 0xd82 <main+0x4c4>
     d80:	91 c1       	rjmp	.+802    	; 0x10a4 <main+0x7e6>
		{
			//get_front(&dis);
			meas_ready=0;
     d82:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <meas_ready>
			sensor_counter=0;
			dis_av=dis;
     d86:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <dis>
     d8a:	90 91 3e 02 	lds	r25, 0x023E	; 0x80023e <dis+0x1>
     d8e:	a0 91 3f 02 	lds	r26, 0x023F	; 0x80023f <dis+0x2>
     d92:	b0 91 40 02 	lds	r27, 0x0240	; 0x800240 <dis+0x3>
     d96:	80 93 41 02 	sts	0x0241, r24	; 0x800241 <dis_av>
     d9a:	90 93 42 02 	sts	0x0242, r25	; 0x800242 <dis_av+0x1>
     d9e:	a0 93 43 02 	sts	0x0243, r26	; 0x800243 <dis_av+0x2>
     da2:	b0 93 44 02 	sts	0x0244, r27	; 0x800244 <dis_av+0x3>
			Average(&dis_av);
     da6:	81 e4       	ldi	r24, 0x41	; 65
     da8:	92 e0       	ldi	r25, 0x02	; 2
     daa:	fd d9       	rcall	.-3078   	; 0x1a6 <Average>
			dis_av*=cal_coef;
     dac:	60 91 41 02 	lds	r22, 0x0241	; 0x800241 <dis_av>
     db0:	70 91 42 02 	lds	r23, 0x0242	; 0x800242 <dis_av+0x1>
     db4:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <dis_av+0x2>
     db8:	90 91 44 02 	lds	r25, 0x0244	; 0x800244 <dis_av+0x3>
     dbc:	a5 01       	movw	r20, r10
     dbe:	94 01       	movw	r18, r8
     dc0:	d1 d3       	rcall	.+1954   	; 0x1564 <__mulsf3>
     dc2:	60 93 41 02 	sts	0x0241, r22	; 0x800241 <dis_av>
     dc6:	70 93 42 02 	sts	0x0242, r23	; 0x800242 <dis_av+0x1>
     dca:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <dis_av+0x2>
     dce:	90 93 44 02 	sts	0x0244, r25	; 0x800244 <dis_av+0x3>
				//get_front(&dis);}
			//dis_av=dis_int/100.0;
			//LCDGotoXY(0,1);
			//LCDstring(string,5);
			//LCDstring("test",4);
			if (coord==elliptic)
     dd2:	3c 89       	ldd	r19, Y+20	; 0x14
				temp1 = lit_cm*(max_height-dis_av)/20.0;
     dd4:	c0 90 41 02 	lds	r12, 0x0241	; 0x800241 <dis_av>
     dd8:	d0 90 42 02 	lds	r13, 0x0242	; 0x800242 <dis_av+0x1>
     ddc:	e0 90 43 02 	lds	r14, 0x0243	; 0x800243 <dis_av+0x2>
     de0:	f0 90 44 02 	lds	r15, 0x0244	; 0x800244 <dis_av+0x3>
     de4:	6a 8d       	ldd	r22, Y+26	; 0x1a
     de6:	7b 8d       	ldd	r23, Y+27	; 0x1b
     de8:	8c 8d       	ldd	r24, Y+28	; 0x1c
     dea:	9d 8d       	ldd	r25, Y+29	; 0x1d
				//get_front(&dis);}
			//dis_av=dis_int/100.0;
			//LCDGotoXY(0,1);
			//LCDstring(string,5);
			//LCDstring("test",4);
			if (coord==elliptic)
     dec:	32 30       	cpi	r19, 0x02	; 2
     dee:	71 f4       	brne	.+28     	; 0xe0c <main+0x54e>
				temp1 = lit_cm*(max_height-dis_av)/20.0;
     df0:	05 d3       	rcall	.+1546   	; 0x13fc <__floatsisf>
     df2:	a7 01       	movw	r20, r14
     df4:	96 01       	movw	r18, r12
     df6:	03 d2       	rcall	.+1030   	; 0x11fe <__subsf3>
     df8:	2d 89       	ldd	r18, Y+21	; 0x15
     dfa:	3e 89       	ldd	r19, Y+22	; 0x16
     dfc:	4f 89       	ldd	r20, Y+23	; 0x17
     dfe:	58 8d       	ldd	r21, Y+24	; 0x18
     e00:	b1 d3       	rcall	.+1890   	; 0x1564 <__mulsf3>
     e02:	20 e0       	ldi	r18, 0x00	; 0
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	40 ea       	ldi	r20, 0xA0	; 160
     e08:	51 e4       	ldi	r21, 0x41	; 65
     e0a:	0d c0       	rjmp	.+26     	; 0xe26 <main+0x568>
			else
				temp1 = lit_cm*(max_height-dis_av)/10.0;
     e0c:	f7 d2       	rcall	.+1518   	; 0x13fc <__floatsisf>
     e0e:	a7 01       	movw	r20, r14
     e10:	96 01       	movw	r18, r12
     e12:	f5 d1       	rcall	.+1002   	; 0x11fe <__subsf3>
     e14:	2d 89       	ldd	r18, Y+21	; 0x15
     e16:	3e 89       	ldd	r19, Y+22	; 0x16
     e18:	4f 89       	ldd	r20, Y+23	; 0x17
     e1a:	58 8d       	ldd	r21, Y+24	; 0x18
     e1c:	a3 d3       	rcall	.+1862   	; 0x1564 <__mulsf3>
     e1e:	20 e0       	ldi	r18, 0x00	; 0
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	40 e2       	ldi	r20, 0x20	; 32
     e24:	51 e4       	ldi	r21, 0x41	; 65
     e26:	54 d2       	rcall	.+1192   	; 0x12d0 <__divsf3>
     e28:	6b 01       	movw	r12, r22
     e2a:	7c 01       	movw	r14, r24
			//LCDstring(inttostr(temp),4);
			//LCDstring(inttostr(dis),4);
			//LCDsendChar('e');
			if(dis_av>(max_height*3/4) && dis_av<(max_height*5/6))//tank emptier than 3/4 of max 
     e2c:	40 90 41 02 	lds	r4, 0x0241	; 0x800241 <dis_av>
     e30:	50 90 42 02 	lds	r5, 0x0242	; 0x800242 <dis_av+0x1>
     e34:	60 90 43 02 	lds	r6, 0x0243	; 0x800243 <dis_av+0x2>
     e38:	70 90 44 02 	lds	r7, 0x0244	; 0x800244 <dis_av+0x3>
     e3c:	6a a1       	ldd	r22, Y+34	; 0x22
     e3e:	7b a1       	ldd	r23, Y+35	; 0x23
     e40:	8c a1       	ldd	r24, Y+36	; 0x24
     e42:	9d a1       	ldd	r25, Y+37	; 0x25
     e44:	db d2       	rcall	.+1462   	; 0x13fc <__floatsisf>
     e46:	a3 01       	movw	r20, r6
     e48:	92 01       	movw	r18, r4
     e4a:	3e d2       	rcall	.+1148   	; 0x12c8 <__cmpsf2>
     e4c:	87 ff       	sbrs	r24, 7
     e4e:	14 c0       	rjmp	.+40     	; 0xe78 <main+0x5ba>
     e50:	40 90 41 02 	lds	r4, 0x0241	; 0x800241 <dis_av>
     e54:	50 90 42 02 	lds	r5, 0x0242	; 0x800242 <dis_av+0x1>
     e58:	60 90 43 02 	lds	r6, 0x0243	; 0x800243 <dis_av+0x2>
     e5c:	70 90 44 02 	lds	r7, 0x0244	; 0x800244 <dis_av+0x3>
     e60:	6e 8d       	ldd	r22, Y+30	; 0x1e
     e62:	7f 8d       	ldd	r23, Y+31	; 0x1f
     e64:	88 a1       	ldd	r24, Y+32	; 0x20
     e66:	99 a1       	ldd	r25, Y+33	; 0x21
     e68:	c9 d2       	rcall	.+1426   	; 0x13fc <__floatsisf>
     e6a:	a3 01       	movw	r20, r6
     e6c:	92 01       	movw	r18, r4
     e6e:	76 d3       	rcall	.+1772   	; 0x155c <__gesf2>
     e70:	18 16       	cp	r1, r24
     e72:	14 f4       	brge	.+4      	; 0xe78 <main+0x5ba>
			{
				PORTD|=(1<<limit1);
     e74:	5f 9a       	sbi	0x0b, 7	; 11
     e76:	13 c0       	rjmp	.+38     	; 0xe9e <main+0x5e0>
			}
			else if (dis_av <(max_height*2/3))
     e78:	40 90 41 02 	lds	r4, 0x0241	; 0x800241 <dis_av>
     e7c:	50 90 42 02 	lds	r5, 0x0242	; 0x800242 <dis_av+0x1>
     e80:	60 90 43 02 	lds	r6, 0x0243	; 0x800243 <dis_av+0x2>
     e84:	70 90 44 02 	lds	r7, 0x0244	; 0x800244 <dis_av+0x3>
     e88:	6a a5       	ldd	r22, Y+42	; 0x2a
     e8a:	7b a5       	ldd	r23, Y+43	; 0x2b
     e8c:	8c a5       	ldd	r24, Y+44	; 0x2c
     e8e:	9d a5       	ldd	r25, Y+45	; 0x2d
     e90:	b5 d2       	rcall	.+1386   	; 0x13fc <__floatsisf>
     e92:	a3 01       	movw	r20, r6
     e94:	92 01       	movw	r18, r4
     e96:	62 d3       	rcall	.+1732   	; 0x155c <__gesf2>
     e98:	18 16       	cp	r1, r24
     e9a:	0c f4       	brge	.+2      	; 0xe9e <main+0x5e0>
			{
				PORTD&=~(1<<limit1);
     e9c:	5f 98       	cbi	0x0b, 7	; 11
			}
			
			if(dis_av>(max_height*7/8))//tank emptier than 7/8 of max
     e9e:	40 90 41 02 	lds	r4, 0x0241	; 0x800241 <dis_av>
     ea2:	50 90 42 02 	lds	r5, 0x0242	; 0x800242 <dis_av+0x1>
     ea6:	60 90 43 02 	lds	r6, 0x0243	; 0x800243 <dis_av+0x2>
     eaa:	70 90 44 02 	lds	r7, 0x0244	; 0x800244 <dis_av+0x3>
     eae:	6e a1       	ldd	r22, Y+38	; 0x26
     eb0:	7f a1       	ldd	r23, Y+39	; 0x27
     eb2:	88 a5       	ldd	r24, Y+40	; 0x28
     eb4:	99 a5       	ldd	r25, Y+41	; 0x29
     eb6:	a2 d2       	rcall	.+1348   	; 0x13fc <__floatsisf>
     eb8:	a3 01       	movw	r20, r6
     eba:	92 01       	movw	r18, r4
     ebc:	05 d2       	rcall	.+1034   	; 0x12c8 <__cmpsf2>
     ebe:	87 ff       	sbrs	r24, 7
     ec0:	12 c0       	rjmp	.+36     	; 0xee6 <main+0x628>
			{
				PORTD&=~(1<<limit1);
     ec2:	5f 98       	cbi	0x0b, 7	; 11
     ec4:	4f e7       	ldi	r20, 0x7F	; 127
     ec6:	58 e3       	ldi	r21, 0x38	; 56
     ec8:	81 e0       	ldi	r24, 0x01	; 1
     eca:	41 50       	subi	r20, 0x01	; 1
     ecc:	50 40       	sbci	r21, 0x00	; 0
     ece:	80 40       	sbci	r24, 0x00	; 0
     ed0:	e1 f7       	brne	.-8      	; 0xeca <main+0x60c>
     ed2:	00 c0       	rjmp	.+0      	; 0xed4 <main+0x616>
     ed4:	00 00       	nop
				_delay_ms(100);
				PORTC|=(1<<limit2);
     ed6:	40 9a       	sbi	0x08, 0	; 8
				LCDGotoXY(12,1);
     ed8:	61 e0       	ldi	r22, 0x01	; 1
     eda:	8c e0       	ldi	r24, 0x0C	; 12
     edc:	3d da       	rcall	.-2950   	; 0x358 <LCDGotoXY>
				LCDstring("!!! ",4);
     ede:	64 e0       	ldi	r22, 0x04	; 4
     ee0:	89 ea       	ldi	r24, 0xA9	; 169
     ee2:	91 e0       	ldi	r25, 0x01	; 1
     ee4:	19 c0       	rjmp	.+50     	; 0xf18 <main+0x65a>
				LCDGotoXY(0,0);
			}
			else if (dis_av <(max_height*5/6))
     ee6:	40 90 41 02 	lds	r4, 0x0241	; 0x800241 <dis_av>
     eea:	50 90 42 02 	lds	r5, 0x0242	; 0x800242 <dis_av+0x1>
     eee:	60 90 43 02 	lds	r6, 0x0243	; 0x800243 <dis_av+0x2>
     ef2:	70 90 44 02 	lds	r7, 0x0244	; 0x800244 <dis_av+0x3>
     ef6:	6e 8d       	ldd	r22, Y+30	; 0x1e
     ef8:	7f 8d       	ldd	r23, Y+31	; 0x1f
     efa:	88 a1       	ldd	r24, Y+32	; 0x20
     efc:	99 a1       	ldd	r25, Y+33	; 0x21
     efe:	7e d2       	rcall	.+1276   	; 0x13fc <__floatsisf>
     f00:	a3 01       	movw	r20, r6
     f02:	92 01       	movw	r18, r4
     f04:	2b d3       	rcall	.+1622   	; 0x155c <__gesf2>
     f06:	18 16       	cp	r1, r24
     f08:	5c f4       	brge	.+22     	; 0xf20 <main+0x662>
			{
				//while(i);
				PORTC&=~(1<<limit2);
     f0a:	40 98       	cbi	0x08, 0	; 8
				LCDGotoXY(12,1);
     f0c:	61 e0       	ldi	r22, 0x01	; 1
     f0e:	8c e0       	ldi	r24, 0x0C	; 12
     f10:	23 da       	rcall	.-3002   	; 0x358 <LCDGotoXY>
				LCDstring("    ",4);
     f12:	64 e0       	ldi	r22, 0x04	; 4
     f14:	8e ea       	ldi	r24, 0xAE	; 174
     f16:	91 e0       	ldi	r25, 0x01	; 1
     f18:	0a da       	rcall	.-3052   	; 0x32e <LCDstring>
				LCDGotoXY(0,0);
     f1a:	60 e0       	ldi	r22, 0x00	; 0
     f1c:	80 e0       	ldi	r24, 0x00	; 0
     f1e:	1c da       	rcall	.-3016   	; 0x358 <LCDGotoXY>
		
		
		//dis++;
		//if (dis_av>max_height)
		//	dis_av=max_height;
		LCDprogressBar(max_height-dis_av, max_height, 16);
     f20:	6a 8d       	ldd	r22, Y+26	; 0x1a
     f22:	7b 8d       	ldd	r23, Y+27	; 0x1b
     f24:	8c 8d       	ldd	r24, Y+28	; 0x1c
     f26:	9d 8d       	ldd	r25, Y+29	; 0x1d
     f28:	69 d2       	rcall	.+1234   	; 0x13fc <__floatsisf>
     f2a:	2b 01       	movw	r4, r22
     f2c:	3c 01       	movw	r6, r24
     f2e:	20 91 41 02 	lds	r18, 0x0241	; 0x800241 <dis_av>
     f32:	30 91 42 02 	lds	r19, 0x0242	; 0x800242 <dis_av+0x1>
     f36:	40 91 43 02 	lds	r20, 0x0243	; 0x800243 <dis_av+0x2>
     f3a:	50 91 44 02 	lds	r21, 0x0244	; 0x800244 <dis_av+0x3>
     f3e:	5f d1       	rcall	.+702    	; 0x11fe <__subsf3>
     f40:	2f d2       	rcall	.+1118   	; 0x13a0 <__fixunssfsi>
     f42:	86 2f       	mov	r24, r22
     f44:	40 e1       	ldi	r20, 0x10	; 16
     f46:	6b 89       	ldd	r22, Y+19	; 0x13
     f48:	86 da       	rcall	.-2804   	; 0x456 <LCDprogressBar>
			
		if (!(Pinkeys &_BV(up))||!(Pinkeys &_BV(down))||!(Pinkeys &_BV(enter)))
     f4a:	32 9b       	sbis	0x06, 2	; 6
     f4c:	04 c0       	rjmp	.+8      	; 0xf56 <main+0x698>
     f4e:	33 9b       	sbis	0x06, 3	; 6
     f50:	02 c0       	rjmp	.+4      	; 0xf56 <main+0x698>
     f52:	31 99       	sbic	0x06, 1	; 6
     f54:	03 c0       	rjmp	.+6      	; 0xf5c <main+0x69e>
			{
				countr=500;
				PORTB|=(1<<backlight);
     f56:	2d 9a       	sbi	0x05, 5	; 5
		//	dis_av=max_height;
		LCDprogressBar(max_height-dis_av, max_height, 16);
			
		if (!(Pinkeys &_BV(up))||!(Pinkeys &_BV(down))||!(Pinkeys &_BV(enter)))
			{
				countr=500;
     f58:	94 ef       	ldi	r25, 0xF4	; 244
     f5a:	99 8f       	std	Y+25, r25	; 0x19
				PORTB|=(1<<backlight);
			}
		if (!(Pinkeys &_BV(up))||!(Pinkeys &_BV(down)))
     f5c:	32 9b       	sbis	0x06, 2	; 6
     f5e:	02 c0       	rjmp	.+4      	; 0xf64 <main+0x6a6>
     f60:	33 99       	sbic	0x06, 3	; 6
     f62:	09 c0       	rjmp	.+18     	; 0xf76 <main+0x6b8>
		{
			tmp=_key(tmp,1);
     f64:	61 e0       	ldi	r22, 0x01	; 1
     f66:	8a 89       	ldd	r24, Y+18	; 0x12
     f68:	0b d1       	rcall	.+534    	; 0x1180 <_key>
			tmp%=4;
     f6a:	83 70       	andi	r24, 0x03	; 3
     f6c:	8a 8b       	std	Y+18, r24	; 0x12
			while (!(Pinkeys &_BV(up))||!(Pinkeys &_BV(down)));
     f6e:	32 9b       	sbis	0x06, 2	; 6
     f70:	fe cf       	rjmp	.-4      	; 0xf6e <main+0x6b0>
     f72:	33 9b       	sbis	0x06, 3	; 6
     f74:	fc cf       	rjmp	.-8      	; 0xf6e <main+0x6b0>
			
		}
				LCDGotoXY(0,1);			
     f76:	61 e0       	ldi	r22, 0x01	; 1
     f78:	80 e0       	ldi	r24, 0x00	; 0
     f7a:	ee d9       	rcall	.-3108   	; 0x358 <LCDGotoXY>
		if (tmp==1)
     f7c:	aa 89       	ldd	r26, Y+18	; 0x12
     f7e:	a1 30       	cpi	r26, 0x01	; 1
     f80:	71 f4       	brne	.+28     	; 0xf9e <main+0x6e0>
		{
		LCDstring("Volu ",5);
     f82:	65 e0       	ldi	r22, 0x05	; 5
     f84:	83 eb       	ldi	r24, 0xB3	; 179
     f86:	91 e0       	ldi	r25, 0x01	; 1
     f88:	d2 d9       	rcall	.-3164   	; 0x32e <LCDstring>
			}
			LCDclr();
			tmp=0;
		}
		else continue;
		if (temp1)
     f8a:	20 e0       	ldi	r18, 0x00	; 0
     f8c:	30 e0       	ldi	r19, 0x00	; 0
     f8e:	a9 01       	movw	r20, r18
     f90:	c7 01       	movw	r24, r14
     f92:	b6 01       	movw	r22, r12
     f94:	99 d1       	rcall	.+818    	; 0x12c8 <__cmpsf2>
     f96:	88 23       	and	r24, r24
     f98:	09 f4       	brne	.+2      	; 0xf9c <main+0x6de>
     f9a:	a1 c0       	rjmp	.+322    	; 0x10de <main+0x820>
     f9c:	54 c0       	rjmp	.+168    	; 0x1046 <main+0x788>
				LCDGotoXY(0,1);			
		if (tmp==1)
		{
		LCDstring("Volu ",5);
		}
		else if (tmp==0)
     f9e:	ba 89       	ldd	r27, Y+18	; 0x12
     fa0:	b1 11       	cpse	r27, r1
     fa2:	0d c0       	rjmp	.+26     	; 0xfbe <main+0x700>
		{
			LCDstring("Dist ",5);
     fa4:	65 e0       	ldi	r22, 0x05	; 5
     fa6:	89 eb       	ldi	r24, 0xB9	; 185
     fa8:	91 e0       	ldi	r25, 0x01	; 1
     faa:	c1 d9       	rcall	.-3198   	; 0x32e <LCDstring>
			temp1 = dis_av;
     fac:	c0 90 41 02 	lds	r12, 0x0241	; 0x800241 <dis_av>
     fb0:	d0 90 42 02 	lds	r13, 0x0242	; 0x800242 <dis_av+0x1>
     fb4:	e0 90 43 02 	lds	r14, 0x0243	; 0x800243 <dis_av+0x2>
     fb8:	f0 90 44 02 	lds	r15, 0x0244	; 0x800244 <dis_av+0x3>
     fbc:	3b c0       	rjmp	.+118    	; 0x1034 <main+0x776>
		}
		else if (tmp==2)
     fbe:	2a 89       	ldd	r18, Y+18	; 0x12
     fc0:	22 30       	cpi	r18, 0x02	; 2
     fc2:	c9 f4       	brne	.+50     	; 0xff6 <main+0x738>
		{
			LCDstring("Level:",6);
     fc4:	66 e0       	ldi	r22, 0x06	; 6
     fc6:	8f eb       	ldi	r24, 0xBF	; 191
     fc8:	91 e0       	ldi	r25, 0x01	; 1
     fca:	b1 d9       	rcall	.-3230   	; 0x32e <LCDstring>
			temp1 = max_height-dis_av;
     fcc:	20 91 41 02 	lds	r18, 0x0241	; 0x800241 <dis_av>
     fd0:	30 91 42 02 	lds	r19, 0x0242	; 0x800242 <dis_av+0x1>
     fd4:	40 91 43 02 	lds	r20, 0x0243	; 0x800243 <dis_av+0x2>
     fd8:	50 91 44 02 	lds	r21, 0x0244	; 0x800244 <dis_av+0x3>
     fdc:	c3 01       	movw	r24, r6
     fde:	b2 01       	movw	r22, r4
     fe0:	0e d1       	rcall	.+540    	; 0x11fe <__subsf3>
     fe2:	6b 01       	movw	r12, r22
     fe4:	7c 01       	movw	r14, r24
			}
			LCDclr();
			tmp=0;
		}
		else continue;
		if (temp1)
     fe6:	20 e0       	ldi	r18, 0x00	; 0
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	a9 01       	movw	r20, r18
     fec:	6d d1       	rcall	.+730    	; 0x12c8 <__cmpsf2>
     fee:	88 23       	and	r24, r24
     ff0:	09 f4       	brne	.+2      	; 0xff4 <main+0x736>
     ff2:	6a c0       	rjmp	.+212    	; 0x10c8 <main+0x80a>
     ff4:	28 c0       	rjmp	.+80     	; 0x1046 <main+0x788>
		else if (tmp==2)
		{
			LCDstring("Level:",6);
			temp1 = max_height-dis_av;
		}
		else if (tmp==3)
     ff6:	3a 89       	ldd	r19, Y+18	; 0x12
     ff8:	33 30       	cpi	r19, 0x03	; 3
     ffa:	09 f0       	breq	.+2      	; 0xffe <main+0x740>
     ffc:	8d ce       	rjmp	.-742    	; 0xd18 <main+0x45a>
		{	
			LCDclr();
     ffe:	93 d9       	rcall	.-3290   	; 0x326 <LCDclr>
			LCDhome();
    1000:	94 d9       	rcall	.-3288   	; 0x32a <LCDhome>
			LCDGotoXY(0,0);
    1002:	60 e0       	ldi	r22, 0x00	; 0
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	a8 d9       	rcall	.-3248   	; 0x358 <LCDGotoXY>
			LCDstring("Dim of ",7);
    1008:	67 e0       	ldi	r22, 0x07	; 7
    100a:	86 ec       	ldi	r24, 0xC6	; 198
    100c:	91 e0       	ldi	r25, 0x01	; 1
    100e:	8f d9       	rcall	.-3298   	; 0x32e <LCDstring>
			switch (coord) 
    1010:	4c 88       	ldd	r4, Y+20	; 0x14
    1012:	44 20       	and	r4, r4
    1014:	49 f0       	breq	.+18     	; 0x1028 <main+0x76a>
    1016:	24 2d       	mov	r18, r4
    1018:	21 30       	cpi	r18, 0x01	; 1
    101a:	59 f4       	brne	.+22     	; 0x1032 <main+0x774>
				case cartessian:
				LCDstring("Cart:",5);
				get_cartesian_dim();
				break;
				case cylinder:
				LCDstring("Cylinder:",9);
    101c:	69 e0       	ldi	r22, 0x09	; 9
    101e:	84 ed       	ldi	r24, 0xD4	; 212
    1020:	91 e0       	ldi	r25, 0x01	; 1
    1022:	85 d9       	rcall	.-3318   	; 0x32e <LCDstring>
				get_cylinder_dim();
    1024:	25 dc       	rcall	.-1974   	; 0x870 <get_cylinder_dim>
				break;
    1026:	05 c0       	rjmp	.+10     	; 0x1032 <main+0x774>
			LCDGotoXY(0,0);
			LCDstring("Dim of ",7);
			switch (coord) 
			{
				case cartessian:
				LCDstring("Cart:",5);
    1028:	65 e0       	ldi	r22, 0x05	; 5
    102a:	8e ec       	ldi	r24, 0xCE	; 206
    102c:	91 e0       	ldi	r25, 0x01	; 1
    102e:	7f d9       	rcall	.-3330   	; 0x32e <LCDstring>
				get_cartesian_dim();
    1030:	f1 db       	rcall	.-2078   	; 0x814 <get_cartesian_dim>
				LCDstring("Cylinder:",9);
				get_cylinder_dim();
				break;
				
			}
			LCDclr();
    1032:	79 d9       	rcall	.-3342   	; 0x326 <LCDclr>
			tmp=0;
		}
		else continue;
		if (temp1)
    1034:	20 e0       	ldi	r18, 0x00	; 0
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	a9 01       	movw	r20, r18
    103a:	c7 01       	movw	r24, r14
    103c:	b6 01       	movw	r22, r12
    103e:	44 d1       	rcall	.+648    	; 0x12c8 <__cmpsf2>
    1040:	88 23       	and	r24, r24
    1042:	b9 f1       	breq	.+110    	; 0x10b2 <main+0x7f4>
    1044:	1a 8a       	std	Y+18, r1	; 0x12
		//sprintf(float2string,"%0.2f",temp1);
		dtostrf(temp1,4,3,float2string);
    1046:	81 01       	movw	r16, r2
    1048:	23 e0       	ldi	r18, 0x03	; 3
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	44 e0       	ldi	r20, 0x04	; 4
    104e:	50 e0       	ldi	r21, 0x00	; 0
    1050:	c7 01       	movw	r24, r14
    1052:	b6 01       	movw	r22, r12
    1054:	4b d3       	rcall	.+1686   	; 0x16ec <dtostrf>
		LCDstring(float2string,strlen(float2string));
    1056:	f1 01       	movw	r30, r2
    1058:	01 90       	ld	r0, Z+
    105a:	00 20       	and	r0, r0
    105c:	e9 f7       	brne	.-6      	; 0x1058 <main+0x79a>
    105e:	31 97       	sbiw	r30, 0x01	; 1
    1060:	bf 01       	movw	r22, r30
    1062:	62 19       	sub	r22, r2
    1064:	73 09       	sbc	r23, r3
    1066:	c1 01       	movw	r24, r2
    1068:	62 d9       	rcall	.-3388   	; 0x32e <LCDstring>
		//LCDstring(inttostr((uint16_t)dis),4);
		
		//LCDstring(dtostrf(temp,5,1,str_buf),4);
		if (tmp==1)
    106a:	3a 89       	ldd	r19, Y+18	; 0x12
    106c:	31 30       	cpi	r19, 0x01	; 1
    106e:	29 f4       	brne	.+10     	; 0x107a <main+0x7bc>
		{
			LCDstring(" lt ",5);
    1070:	65 e0       	ldi	r22, 0x05	; 5
    1072:	8e ed       	ldi	r24, 0xDE	; 222
    1074:	91 e0       	ldi	r25, 0x01	; 1
    1076:	5b d9       	rcall	.-3402   	; 0x32e <LCDstring>
    1078:	13 c0       	rjmp	.+38     	; 0x10a0 <main+0x7e2>
		}
		else if (tmp==0)
    107a:	4a 88       	ldd	r4, Y+18	; 0x12
    107c:	41 10       	cpse	r4, r1
    107e:	06 c0       	rjmp	.+12     	; 0x108c <main+0x7ce>
		{
			LCDstring(" cm  ",5);
    1080:	65 e0       	ldi	r22, 0x05	; 5
    1082:	83 ee       	ldi	r24, 0xE3	; 227
    1084:	91 e0       	ldi	r25, 0x01	; 1
    1086:	53 d9       	rcall	.-3418   	; 0x32e <LCDstring>
    1088:	1a 8a       	std	Y+18, r1	; 0x12
    108a:	0c c0       	rjmp	.+24     	; 0x10a4 <main+0x7e6>
			
		}
		else if (tmp==2)
    108c:	2a 89       	ldd	r18, Y+18	; 0x12
    108e:	22 30       	cpi	r18, 0x02	; 2
    1090:	39 f4       	brne	.+14     	; 0x10a0 <main+0x7e2>
		{
			LCDstring(" cm  ",5);
    1092:	65 e0       	ldi	r22, 0x05	; 5
    1094:	83 ee       	ldi	r24, 0xE3	; 227
    1096:	91 e0       	ldi	r25, 0x01	; 1
    1098:	4a d9       	rcall	.-3436   	; 0x32e <LCDstring>
    109a:	32 e0       	ldi	r19, 0x02	; 2
    109c:	3a 8b       	std	Y+18, r19	; 0x12
    109e:	02 c0       	rjmp	.+4      	; 0x10a4 <main+0x7e6>
    10a0:	41 e0       	ldi	r20, 0x01	; 1
    10a2:	4a 8b       	std	Y+18, r20	; 0x12
    10a4:	8f e1       	ldi	r24, 0x1F	; 31
    10a6:	9e e4       	ldi	r25, 0x4E	; 78
    10a8:	01 97       	sbiw	r24, 0x01	; 1
    10aa:	f1 f7       	brne	.-4      	; 0x10a8 <main+0x7ea>
    10ac:	00 c0       	rjmp	.+0      	; 0x10ae <main+0x7f0>
    10ae:	00 00       	nop
    10b0:	33 ce       	rjmp	.-922    	; 0xd18 <main+0x45a>
		}
		else continue;
		if (temp1)
		//sprintf(float2string,"%0.2f",temp1);
		dtostrf(temp1,4,3,float2string);
		LCDstring(float2string,strlen(float2string));
    10b2:	f1 01       	movw	r30, r2
    10b4:	01 90       	ld	r0, Z+
    10b6:	00 20       	and	r0, r0
    10b8:	e9 f7       	brne	.-6      	; 0x10b4 <main+0x7f6>
    10ba:	31 97       	sbiw	r30, 0x01	; 1
    10bc:	bf 01       	movw	r22, r30
    10be:	62 19       	sub	r22, r2
    10c0:	73 09       	sbc	r23, r3
    10c2:	c1 01       	movw	r24, r2
    10c4:	34 d9       	rcall	.-3480   	; 0x32e <LCDstring>
    10c6:	dc cf       	rjmp	.-72     	; 0x1080 <main+0x7c2>
    10c8:	f1 01       	movw	r30, r2
    10ca:	01 90       	ld	r0, Z+
    10cc:	00 20       	and	r0, r0
    10ce:	e9 f7       	brne	.-6      	; 0x10ca <main+0x80c>
    10d0:	31 97       	sbiw	r30, 0x01	; 1
    10d2:	bf 01       	movw	r22, r30
    10d4:	62 19       	sub	r22, r2
    10d6:	73 09       	sbc	r23, r3
    10d8:	c1 01       	movw	r24, r2
    10da:	29 d9       	rcall	.-3502   	; 0x32e <LCDstring>
    10dc:	da cf       	rjmp	.-76     	; 0x1092 <main+0x7d4>
    10de:	f1 01       	movw	r30, r2
    10e0:	01 90       	ld	r0, Z+
    10e2:	00 20       	and	r0, r0
    10e4:	e9 f7       	brne	.-6      	; 0x10e0 <main+0x822>
    10e6:	31 97       	sbiw	r30, 0x01	; 1
    10e8:	bf 01       	movw	r22, r30
    10ea:	62 19       	sub	r22, r2
    10ec:	73 09       	sbc	r23, r3
    10ee:	c1 01       	movw	r24, r2
    10f0:	1e d9       	rcall	.-3524   	; 0x32e <LCDstring>
    10f2:	be cf       	rjmp	.-132    	; 0x1070 <main+0x7b2>

000010f4 <__vector_4>:
		_delay_ms(20);//0.1 sec delay to avoid echoes?
	}
}

ISR(PCINT1_vect)
{
    10f4:	1f 92       	push	r1
    10f6:	0f 92       	push	r0
    10f8:	0f b6       	in	r0, 0x3f	; 63
    10fa:	0f 92       	push	r0
    10fc:	11 24       	eor	r1, r1
	//cli();
	//PCICR &= ~_BV(PCIE1);
	//PCMSK1 = 0;
	;
}
    10fe:	0f 90       	pop	r0
    1100:	0f be       	out	0x3f, r0	; 63
    1102:	0f 90       	pop	r0
    1104:	1f 90       	pop	r1
    1106:	18 95       	reti

00001108 <__vector_3>:
	
}*/

ISR(PCINT0_vect)//interrupt service routine when there is a change in logic level

{
    1108:	1f 92       	push	r1
    110a:	0f 92       	push	r0
    110c:	0f b6       	in	r0, 0x3f	; 63
    110e:	0f 92       	push	r0
    1110:	11 24       	eor	r1, r1
    1112:	2f 93       	push	r18
    1114:	3f 93       	push	r19
    1116:	8f 93       	push	r24
	cli();
    1118:	f8 94       	cli
	if (i==1)//when logic from HIGH to LOW
    111a:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <i>
    111e:	81 30       	cpi	r24, 0x01	; 1
    1120:	99 f4       	brne	.+38     	; 0x1148 <__vector_3+0x40>

	{
		TCCR1B=0;//disabling counter
    1122:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__EEPROM_REGION_LENGTH__+0x7f0081>

		//pulse=(TCNT1H<<8);//count memory is updated to integer
		//pulse|=TCNT1L;
		pulse=TCNT1;
    1126:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__EEPROM_REGION_LENGTH__+0x7f0084>
    112a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__EEPROM_REGION_LENGTH__+0x7f0085>
    112e:	30 93 3c 02 	sts	0x023C, r19	; 0x80023c <pulse+0x1>
    1132:	20 93 3b 02 	sts	0x023B, r18	; 0x80023b <pulse>
		TCNT1=0;//resetting the counter memory
    1136:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__EEPROM_REGION_LENGTH__+0x7f0085>
    113a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__EEPROM_REGION_LENGTH__+0x7f0084>

		i=0;
    113e:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <i>
		meas_ready=1;
    1142:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <meas_ready>
    1146:	0c c0       	rjmp	.+24     	; 0x1160 <__vector_3+0x58>
	}
	else if (i==0)//when logic change from LOW to HIGH
    1148:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <i>
    114c:	81 11       	cpse	r24, r1
    114e:	08 c0       	rjmp	.+16     	; 0x1160 <__vector_3+0x58>

	{
		//pulse=TCNT1;
		TCCR1B|=(1<<CS10);//enabling counter
    1150:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__EEPROM_REGION_LENGTH__+0x7f0081>
    1154:	81 60       	ori	r24, 0x01	; 1
    1156:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__EEPROM_REGION_LENGTH__+0x7f0081>
		i=1;
    115a:	81 e0       	ldi	r24, 0x01	; 1
    115c:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <i>
		//pulse=TCNT1;
		

	}
	sei();
    1160:	78 94       	sei

    1162:	8f 91       	pop	r24
    1164:	3f 91       	pop	r19
    1166:	2f 91       	pop	r18
    1168:	0f 90       	pop	r0
    116a:	0f be       	out	0x3f, r0	; 63
    116c:	0f 90       	pop	r0
    116e:	1f 90       	pop	r1
    1170:	18 95       	reti

00001172 <init_keys>:



void init_keys()
{
	ddrkeys&=~(1<<enter|1<<up|1<<down); //INPUT
    1172:	87 b1       	in	r24, 0x07	; 7
    1174:	81 7f       	andi	r24, 0xF1	; 241
    1176:	87 b9       	out	0x07, r24	; 7
	portkeys|=(1<<enter|1<<up|1<<down); //pullup
    1178:	88 b1       	in	r24, 0x08	; 8
    117a:	8e 60       	ori	r24, 0x0E	; 14
    117c:	88 b9       	out	0x08, r24	; 8
    117e:	08 95       	ret

00001180 <_key>:
}

uint8_t _key(uint8_t value, uint8_t pace)
{
	uint8_t temp = value;
	if (!(Pinkeys &_BV(up)))
    1180:	32 99       	sbic	0x06, 2	; 6
    1182:	0d c0       	rjmp	.+26     	; 0x119e <_key+0x1e>
    1184:	2f e7       	ldi	r18, 0x7F	; 127
    1186:	38 e3       	ldi	r19, 0x38	; 56
    1188:	91 e0       	ldi	r25, 0x01	; 1
    118a:	21 50       	subi	r18, 0x01	; 1
    118c:	30 40       	sbci	r19, 0x00	; 0
    118e:	90 40       	sbci	r25, 0x00	; 0
    1190:	e1 f7       	brne	.-8      	; 0x118a <_key+0xa>
    1192:	00 c0       	rjmp	.+0      	; 0x1194 <_key+0x14>
    1194:	00 00       	nop
	{
		_delay_ms(100);
		if (!(Pinkeys & _BV(up)))
    1196:	32 99       	sbic	0x06, 2	; 6
    1198:	0f c0       	rjmp	.+30     	; 0x11b8 <_key+0x38>
		{
			temp+=pace;
    119a:	86 0f       	add	r24, r22
    119c:	08 95       	ret
		}
	}
	else if (!(Pinkeys & _BV(down)))
    119e:	33 99       	sbic	0x06, 3	; 6
    11a0:	0b c0       	rjmp	.+22     	; 0x11b8 <_key+0x38>
    11a2:	2f e7       	ldi	r18, 0x7F	; 127
    11a4:	38 e3       	ldi	r19, 0x38	; 56
    11a6:	91 e0       	ldi	r25, 0x01	; 1
    11a8:	21 50       	subi	r18, 0x01	; 1
    11aa:	30 40       	sbci	r19, 0x00	; 0
    11ac:	90 40       	sbci	r25, 0x00	; 0
    11ae:	e1 f7       	brne	.-8      	; 0x11a8 <_key+0x28>
    11b0:	00 c0       	rjmp	.+0      	; 0x11b2 <_key+0x32>
    11b2:	00 00       	nop
	{
		_delay_ms(100);
		if (!(Pinkeys & _BV(down)))
    11b4:	33 9b       	sbis	0x06, 3	; 6
		{
			temp-=pace;
    11b6:	86 1b       	sub	r24, r22
		}
	}
	return temp;
}
    11b8:	08 95       	ret

000011ba <inttostr>:
    k++;              
 }     
};*/


char *inttostr (const int val) {
    11ba:	cf 93       	push	r28
    11bc:	df 93       	push	r29
    11be:	9c 01       	movw	r18, r24
// temp[1] = ('0'+(val % 10000 / 1000));
// temp[2] = ('0'+(val % 1000 / 100));
// temp[3] = ('0'+(val % 100 / 10));
// temp[4] = ('0'+(val % 10)); 
 
temp[0] = ('0'+(val / 1000));
    11c0:	e5 e0       	ldi	r30, 0x05	; 5
    11c2:	f2 e0       	ldi	r31, 0x02	; 2
    11c4:	68 ee       	ldi	r22, 0xE8	; 232
    11c6:	73 e0       	ldi	r23, 0x03	; 3
    11c8:	50 d2       	rcall	.+1184   	; 0x166a <__divmodhi4>
    11ca:	60 5d       	subi	r22, 0xD0	; 208
    11cc:	60 83       	st	Z, r22
temp[1] = ('0'+(val % 1000 / 100));
    11ce:	c4 e6       	ldi	r28, 0x64	; 100
    11d0:	d0 e0       	ldi	r29, 0x00	; 0
    11d2:	be 01       	movw	r22, r28
    11d4:	4a d2       	rcall	.+1172   	; 0x166a <__divmodhi4>
    11d6:	60 5d       	subi	r22, 0xD0	; 208
    11d8:	61 83       	std	Z+1, r22	; 0x01
temp[2] = ('0'+(val % 100 / 10));
    11da:	c9 01       	movw	r24, r18
    11dc:	be 01       	movw	r22, r28
    11de:	45 d2       	rcall	.+1162   	; 0x166a <__divmodhi4>
    11e0:	ca e0       	ldi	r28, 0x0A	; 10
    11e2:	d0 e0       	ldi	r29, 0x00	; 0
    11e4:	be 01       	movw	r22, r28
    11e6:	41 d2       	rcall	.+1154   	; 0x166a <__divmodhi4>
    11e8:	60 5d       	subi	r22, 0xD0	; 208
    11ea:	62 83       	std	Z+2, r22	; 0x02
temp[3] = ('0'+(val % 10));
    11ec:	c9 01       	movw	r24, r18
    11ee:	be 01       	movw	r22, r28
    11f0:	3c d2       	rcall	.+1144   	; 0x166a <__divmodhi4>
    11f2:	80 5d       	subi	r24, 0xD0	; 208
    11f4:	83 83       	std	Z+3, r24	; 0x03
// if (temp[0]=='0') temp[0]=' '; else return temp;
 //if (temp[1]=='0') temp[1]=' '; else return temp;
 //if (temp[2]=='0') temp[2]=' '; else return temp;
 //if (temp[3]=='0') temp[3]=' '; else return temp;
 return temp;
};
    11f6:	cf 01       	movw	r24, r30
    11f8:	df 91       	pop	r29
    11fa:	cf 91       	pop	r28
    11fc:	08 95       	ret

000011fe <__subsf3>:
    11fe:	50 58       	subi	r21, 0x80	; 128

00001200 <__addsf3>:
    1200:	bb 27       	eor	r27, r27
    1202:	aa 27       	eor	r26, r26
    1204:	0e d0       	rcall	.+28     	; 0x1222 <__addsf3x>
    1206:	70 c1       	rjmp	.+736    	; 0x14e8 <__fp_round>
    1208:	61 d1       	rcall	.+706    	; 0x14cc <__fp_pscA>
    120a:	30 f0       	brcs	.+12     	; 0x1218 <__addsf3+0x18>
    120c:	66 d1       	rcall	.+716    	; 0x14da <__fp_pscB>
    120e:	20 f0       	brcs	.+8      	; 0x1218 <__addsf3+0x18>
    1210:	31 f4       	brne	.+12     	; 0x121e <__addsf3+0x1e>
    1212:	9f 3f       	cpi	r25, 0xFF	; 255
    1214:	11 f4       	brne	.+4      	; 0x121a <__addsf3+0x1a>
    1216:	1e f4       	brtc	.+6      	; 0x121e <__addsf3+0x1e>
    1218:	56 c1       	rjmp	.+684    	; 0x14c6 <__fp_nan>
    121a:	0e f4       	brtc	.+2      	; 0x121e <__addsf3+0x1e>
    121c:	e0 95       	com	r30
    121e:	e7 fb       	bst	r30, 7
    1220:	4c c1       	rjmp	.+664    	; 0x14ba <__fp_inf>

00001222 <__addsf3x>:
    1222:	e9 2f       	mov	r30, r25
    1224:	72 d1       	rcall	.+740    	; 0x150a <__fp_split3>
    1226:	80 f3       	brcs	.-32     	; 0x1208 <__addsf3+0x8>
    1228:	ba 17       	cp	r27, r26
    122a:	62 07       	cpc	r22, r18
    122c:	73 07       	cpc	r23, r19
    122e:	84 07       	cpc	r24, r20
    1230:	95 07       	cpc	r25, r21
    1232:	18 f0       	brcs	.+6      	; 0x123a <__addsf3x+0x18>
    1234:	71 f4       	brne	.+28     	; 0x1252 <__addsf3x+0x30>
    1236:	9e f5       	brtc	.+102    	; 0x129e <__addsf3x+0x7c>
    1238:	8a c1       	rjmp	.+788    	; 0x154e <__fp_zero>
    123a:	0e f4       	brtc	.+2      	; 0x123e <__addsf3x+0x1c>
    123c:	e0 95       	com	r30
    123e:	0b 2e       	mov	r0, r27
    1240:	ba 2f       	mov	r27, r26
    1242:	a0 2d       	mov	r26, r0
    1244:	0b 01       	movw	r0, r22
    1246:	b9 01       	movw	r22, r18
    1248:	90 01       	movw	r18, r0
    124a:	0c 01       	movw	r0, r24
    124c:	ca 01       	movw	r24, r20
    124e:	a0 01       	movw	r20, r0
    1250:	11 24       	eor	r1, r1
    1252:	ff 27       	eor	r31, r31
    1254:	59 1b       	sub	r21, r25
    1256:	99 f0       	breq	.+38     	; 0x127e <__addsf3x+0x5c>
    1258:	59 3f       	cpi	r21, 0xF9	; 249
    125a:	50 f4       	brcc	.+20     	; 0x1270 <__addsf3x+0x4e>
    125c:	50 3e       	cpi	r21, 0xE0	; 224
    125e:	68 f1       	brcs	.+90     	; 0x12ba <__addsf3x+0x98>
    1260:	1a 16       	cp	r1, r26
    1262:	f0 40       	sbci	r31, 0x00	; 0
    1264:	a2 2f       	mov	r26, r18
    1266:	23 2f       	mov	r18, r19
    1268:	34 2f       	mov	r19, r20
    126a:	44 27       	eor	r20, r20
    126c:	58 5f       	subi	r21, 0xF8	; 248
    126e:	f3 cf       	rjmp	.-26     	; 0x1256 <__addsf3x+0x34>
    1270:	46 95       	lsr	r20
    1272:	37 95       	ror	r19
    1274:	27 95       	ror	r18
    1276:	a7 95       	ror	r26
    1278:	f0 40       	sbci	r31, 0x00	; 0
    127a:	53 95       	inc	r21
    127c:	c9 f7       	brne	.-14     	; 0x1270 <__addsf3x+0x4e>
    127e:	7e f4       	brtc	.+30     	; 0x129e <__addsf3x+0x7c>
    1280:	1f 16       	cp	r1, r31
    1282:	ba 0b       	sbc	r27, r26
    1284:	62 0b       	sbc	r22, r18
    1286:	73 0b       	sbc	r23, r19
    1288:	84 0b       	sbc	r24, r20
    128a:	ba f0       	brmi	.+46     	; 0x12ba <__addsf3x+0x98>
    128c:	91 50       	subi	r25, 0x01	; 1
    128e:	a1 f0       	breq	.+40     	; 0x12b8 <__addsf3x+0x96>
    1290:	ff 0f       	add	r31, r31
    1292:	bb 1f       	adc	r27, r27
    1294:	66 1f       	adc	r22, r22
    1296:	77 1f       	adc	r23, r23
    1298:	88 1f       	adc	r24, r24
    129a:	c2 f7       	brpl	.-16     	; 0x128c <__addsf3x+0x6a>
    129c:	0e c0       	rjmp	.+28     	; 0x12ba <__addsf3x+0x98>
    129e:	ba 0f       	add	r27, r26
    12a0:	62 1f       	adc	r22, r18
    12a2:	73 1f       	adc	r23, r19
    12a4:	84 1f       	adc	r24, r20
    12a6:	48 f4       	brcc	.+18     	; 0x12ba <__addsf3x+0x98>
    12a8:	87 95       	ror	r24
    12aa:	77 95       	ror	r23
    12ac:	67 95       	ror	r22
    12ae:	b7 95       	ror	r27
    12b0:	f7 95       	ror	r31
    12b2:	9e 3f       	cpi	r25, 0xFE	; 254
    12b4:	08 f0       	brcs	.+2      	; 0x12b8 <__addsf3x+0x96>
    12b6:	b3 cf       	rjmp	.-154    	; 0x121e <__addsf3+0x1e>
    12b8:	93 95       	inc	r25
    12ba:	88 0f       	add	r24, r24
    12bc:	08 f0       	brcs	.+2      	; 0x12c0 <__addsf3x+0x9e>
    12be:	99 27       	eor	r25, r25
    12c0:	ee 0f       	add	r30, r30
    12c2:	97 95       	ror	r25
    12c4:	87 95       	ror	r24
    12c6:	08 95       	ret

000012c8 <__cmpsf2>:
    12c8:	d4 d0       	rcall	.+424    	; 0x1472 <__fp_cmp>
    12ca:	08 f4       	brcc	.+2      	; 0x12ce <__cmpsf2+0x6>
    12cc:	81 e0       	ldi	r24, 0x01	; 1
    12ce:	08 95       	ret

000012d0 <__divsf3>:
    12d0:	0c d0       	rcall	.+24     	; 0x12ea <__divsf3x>
    12d2:	0a c1       	rjmp	.+532    	; 0x14e8 <__fp_round>
    12d4:	02 d1       	rcall	.+516    	; 0x14da <__fp_pscB>
    12d6:	40 f0       	brcs	.+16     	; 0x12e8 <__divsf3+0x18>
    12d8:	f9 d0       	rcall	.+498    	; 0x14cc <__fp_pscA>
    12da:	30 f0       	brcs	.+12     	; 0x12e8 <__divsf3+0x18>
    12dc:	21 f4       	brne	.+8      	; 0x12e6 <__divsf3+0x16>
    12de:	5f 3f       	cpi	r21, 0xFF	; 255
    12e0:	19 f0       	breq	.+6      	; 0x12e8 <__divsf3+0x18>
    12e2:	eb c0       	rjmp	.+470    	; 0x14ba <__fp_inf>
    12e4:	51 11       	cpse	r21, r1
    12e6:	34 c1       	rjmp	.+616    	; 0x1550 <__fp_szero>
    12e8:	ee c0       	rjmp	.+476    	; 0x14c6 <__fp_nan>

000012ea <__divsf3x>:
    12ea:	0f d1       	rcall	.+542    	; 0x150a <__fp_split3>
    12ec:	98 f3       	brcs	.-26     	; 0x12d4 <__divsf3+0x4>

000012ee <__divsf3_pse>:
    12ee:	99 23       	and	r25, r25
    12f0:	c9 f3       	breq	.-14     	; 0x12e4 <__divsf3+0x14>
    12f2:	55 23       	and	r21, r21
    12f4:	b1 f3       	breq	.-20     	; 0x12e2 <__divsf3+0x12>
    12f6:	95 1b       	sub	r25, r21
    12f8:	55 0b       	sbc	r21, r21
    12fa:	bb 27       	eor	r27, r27
    12fc:	aa 27       	eor	r26, r26
    12fe:	62 17       	cp	r22, r18
    1300:	73 07       	cpc	r23, r19
    1302:	84 07       	cpc	r24, r20
    1304:	38 f0       	brcs	.+14     	; 0x1314 <__divsf3_pse+0x26>
    1306:	9f 5f       	subi	r25, 0xFF	; 255
    1308:	5f 4f       	sbci	r21, 0xFF	; 255
    130a:	22 0f       	add	r18, r18
    130c:	33 1f       	adc	r19, r19
    130e:	44 1f       	adc	r20, r20
    1310:	aa 1f       	adc	r26, r26
    1312:	a9 f3       	breq	.-22     	; 0x12fe <__divsf3_pse+0x10>
    1314:	33 d0       	rcall	.+102    	; 0x137c <__divsf3_pse+0x8e>
    1316:	0e 2e       	mov	r0, r30
    1318:	3a f0       	brmi	.+14     	; 0x1328 <__divsf3_pse+0x3a>
    131a:	e0 e8       	ldi	r30, 0x80	; 128
    131c:	30 d0       	rcall	.+96     	; 0x137e <__divsf3_pse+0x90>
    131e:	91 50       	subi	r25, 0x01	; 1
    1320:	50 40       	sbci	r21, 0x00	; 0
    1322:	e6 95       	lsr	r30
    1324:	00 1c       	adc	r0, r0
    1326:	ca f7       	brpl	.-14     	; 0x131a <__divsf3_pse+0x2c>
    1328:	29 d0       	rcall	.+82     	; 0x137c <__divsf3_pse+0x8e>
    132a:	fe 2f       	mov	r31, r30
    132c:	27 d0       	rcall	.+78     	; 0x137c <__divsf3_pse+0x8e>
    132e:	66 0f       	add	r22, r22
    1330:	77 1f       	adc	r23, r23
    1332:	88 1f       	adc	r24, r24
    1334:	bb 1f       	adc	r27, r27
    1336:	26 17       	cp	r18, r22
    1338:	37 07       	cpc	r19, r23
    133a:	48 07       	cpc	r20, r24
    133c:	ab 07       	cpc	r26, r27
    133e:	b0 e8       	ldi	r27, 0x80	; 128
    1340:	09 f0       	breq	.+2      	; 0x1344 <__divsf3_pse+0x56>
    1342:	bb 0b       	sbc	r27, r27
    1344:	80 2d       	mov	r24, r0
    1346:	bf 01       	movw	r22, r30
    1348:	ff 27       	eor	r31, r31
    134a:	93 58       	subi	r25, 0x83	; 131
    134c:	5f 4f       	sbci	r21, 0xFF	; 255
    134e:	2a f0       	brmi	.+10     	; 0x135a <__divsf3_pse+0x6c>
    1350:	9e 3f       	cpi	r25, 0xFE	; 254
    1352:	51 05       	cpc	r21, r1
    1354:	68 f0       	brcs	.+26     	; 0x1370 <__divsf3_pse+0x82>
    1356:	b1 c0       	rjmp	.+354    	; 0x14ba <__fp_inf>
    1358:	fb c0       	rjmp	.+502    	; 0x1550 <__fp_szero>
    135a:	5f 3f       	cpi	r21, 0xFF	; 255
    135c:	ec f3       	brlt	.-6      	; 0x1358 <__divsf3_pse+0x6a>
    135e:	98 3e       	cpi	r25, 0xE8	; 232
    1360:	dc f3       	brlt	.-10     	; 0x1358 <__divsf3_pse+0x6a>
    1362:	86 95       	lsr	r24
    1364:	77 95       	ror	r23
    1366:	67 95       	ror	r22
    1368:	b7 95       	ror	r27
    136a:	f7 95       	ror	r31
    136c:	9f 5f       	subi	r25, 0xFF	; 255
    136e:	c9 f7       	brne	.-14     	; 0x1362 <__divsf3_pse+0x74>
    1370:	88 0f       	add	r24, r24
    1372:	91 1d       	adc	r25, r1
    1374:	96 95       	lsr	r25
    1376:	87 95       	ror	r24
    1378:	97 f9       	bld	r25, 7
    137a:	08 95       	ret
    137c:	e1 e0       	ldi	r30, 0x01	; 1
    137e:	66 0f       	add	r22, r22
    1380:	77 1f       	adc	r23, r23
    1382:	88 1f       	adc	r24, r24
    1384:	bb 1f       	adc	r27, r27
    1386:	62 17       	cp	r22, r18
    1388:	73 07       	cpc	r23, r19
    138a:	84 07       	cpc	r24, r20
    138c:	ba 07       	cpc	r27, r26
    138e:	20 f0       	brcs	.+8      	; 0x1398 <__divsf3_pse+0xaa>
    1390:	62 1b       	sub	r22, r18
    1392:	73 0b       	sbc	r23, r19
    1394:	84 0b       	sbc	r24, r20
    1396:	ba 0b       	sbc	r27, r26
    1398:	ee 1f       	adc	r30, r30
    139a:	88 f7       	brcc	.-30     	; 0x137e <__divsf3_pse+0x90>
    139c:	e0 95       	com	r30
    139e:	08 95       	ret

000013a0 <__fixunssfsi>:
    13a0:	bc d0       	rcall	.+376    	; 0x151a <__fp_splitA>
    13a2:	88 f0       	brcs	.+34     	; 0x13c6 <__fixunssfsi+0x26>
    13a4:	9f 57       	subi	r25, 0x7F	; 127
    13a6:	90 f0       	brcs	.+36     	; 0x13cc <__fixunssfsi+0x2c>
    13a8:	b9 2f       	mov	r27, r25
    13aa:	99 27       	eor	r25, r25
    13ac:	b7 51       	subi	r27, 0x17	; 23
    13ae:	a0 f0       	brcs	.+40     	; 0x13d8 <__fixunssfsi+0x38>
    13b0:	d1 f0       	breq	.+52     	; 0x13e6 <__fixunssfsi+0x46>
    13b2:	66 0f       	add	r22, r22
    13b4:	77 1f       	adc	r23, r23
    13b6:	88 1f       	adc	r24, r24
    13b8:	99 1f       	adc	r25, r25
    13ba:	1a f0       	brmi	.+6      	; 0x13c2 <__fixunssfsi+0x22>
    13bc:	ba 95       	dec	r27
    13be:	c9 f7       	brne	.-14     	; 0x13b2 <__fixunssfsi+0x12>
    13c0:	12 c0       	rjmp	.+36     	; 0x13e6 <__fixunssfsi+0x46>
    13c2:	b1 30       	cpi	r27, 0x01	; 1
    13c4:	81 f0       	breq	.+32     	; 0x13e6 <__fixunssfsi+0x46>
    13c6:	c3 d0       	rcall	.+390    	; 0x154e <__fp_zero>
    13c8:	b1 e0       	ldi	r27, 0x01	; 1
    13ca:	08 95       	ret
    13cc:	c0 c0       	rjmp	.+384    	; 0x154e <__fp_zero>
    13ce:	67 2f       	mov	r22, r23
    13d0:	78 2f       	mov	r23, r24
    13d2:	88 27       	eor	r24, r24
    13d4:	b8 5f       	subi	r27, 0xF8	; 248
    13d6:	39 f0       	breq	.+14     	; 0x13e6 <__fixunssfsi+0x46>
    13d8:	b9 3f       	cpi	r27, 0xF9	; 249
    13da:	cc f3       	brlt	.-14     	; 0x13ce <__fixunssfsi+0x2e>
    13dc:	86 95       	lsr	r24
    13de:	77 95       	ror	r23
    13e0:	67 95       	ror	r22
    13e2:	b3 95       	inc	r27
    13e4:	d9 f7       	brne	.-10     	; 0x13dc <__fixunssfsi+0x3c>
    13e6:	3e f4       	brtc	.+14     	; 0x13f6 <__fixunssfsi+0x56>
    13e8:	90 95       	com	r25
    13ea:	80 95       	com	r24
    13ec:	70 95       	com	r23
    13ee:	61 95       	neg	r22
    13f0:	7f 4f       	sbci	r23, 0xFF	; 255
    13f2:	8f 4f       	sbci	r24, 0xFF	; 255
    13f4:	9f 4f       	sbci	r25, 0xFF	; 255
    13f6:	08 95       	ret

000013f8 <__floatunsisf>:
    13f8:	e8 94       	clt
    13fa:	09 c0       	rjmp	.+18     	; 0x140e <__floatsisf+0x12>

000013fc <__floatsisf>:
    13fc:	97 fb       	bst	r25, 7
    13fe:	3e f4       	brtc	.+14     	; 0x140e <__floatsisf+0x12>
    1400:	90 95       	com	r25
    1402:	80 95       	com	r24
    1404:	70 95       	com	r23
    1406:	61 95       	neg	r22
    1408:	7f 4f       	sbci	r23, 0xFF	; 255
    140a:	8f 4f       	sbci	r24, 0xFF	; 255
    140c:	9f 4f       	sbci	r25, 0xFF	; 255
    140e:	99 23       	and	r25, r25
    1410:	a9 f0       	breq	.+42     	; 0x143c <__floatsisf+0x40>
    1412:	f9 2f       	mov	r31, r25
    1414:	96 e9       	ldi	r25, 0x96	; 150
    1416:	bb 27       	eor	r27, r27
    1418:	93 95       	inc	r25
    141a:	f6 95       	lsr	r31
    141c:	87 95       	ror	r24
    141e:	77 95       	ror	r23
    1420:	67 95       	ror	r22
    1422:	b7 95       	ror	r27
    1424:	f1 11       	cpse	r31, r1
    1426:	f8 cf       	rjmp	.-16     	; 0x1418 <__floatsisf+0x1c>
    1428:	fa f4       	brpl	.+62     	; 0x1468 <__floatsisf+0x6c>
    142a:	bb 0f       	add	r27, r27
    142c:	11 f4       	brne	.+4      	; 0x1432 <__floatsisf+0x36>
    142e:	60 ff       	sbrs	r22, 0
    1430:	1b c0       	rjmp	.+54     	; 0x1468 <__floatsisf+0x6c>
    1432:	6f 5f       	subi	r22, 0xFF	; 255
    1434:	7f 4f       	sbci	r23, 0xFF	; 255
    1436:	8f 4f       	sbci	r24, 0xFF	; 255
    1438:	9f 4f       	sbci	r25, 0xFF	; 255
    143a:	16 c0       	rjmp	.+44     	; 0x1468 <__floatsisf+0x6c>
    143c:	88 23       	and	r24, r24
    143e:	11 f0       	breq	.+4      	; 0x1444 <__floatsisf+0x48>
    1440:	96 e9       	ldi	r25, 0x96	; 150
    1442:	11 c0       	rjmp	.+34     	; 0x1466 <__floatsisf+0x6a>
    1444:	77 23       	and	r23, r23
    1446:	21 f0       	breq	.+8      	; 0x1450 <__floatsisf+0x54>
    1448:	9e e8       	ldi	r25, 0x8E	; 142
    144a:	87 2f       	mov	r24, r23
    144c:	76 2f       	mov	r23, r22
    144e:	05 c0       	rjmp	.+10     	; 0x145a <__floatsisf+0x5e>
    1450:	66 23       	and	r22, r22
    1452:	71 f0       	breq	.+28     	; 0x1470 <__floatsisf+0x74>
    1454:	96 e8       	ldi	r25, 0x86	; 134
    1456:	86 2f       	mov	r24, r22
    1458:	70 e0       	ldi	r23, 0x00	; 0
    145a:	60 e0       	ldi	r22, 0x00	; 0
    145c:	2a f0       	brmi	.+10     	; 0x1468 <__floatsisf+0x6c>
    145e:	9a 95       	dec	r25
    1460:	66 0f       	add	r22, r22
    1462:	77 1f       	adc	r23, r23
    1464:	88 1f       	adc	r24, r24
    1466:	da f7       	brpl	.-10     	; 0x145e <__floatsisf+0x62>
    1468:	88 0f       	add	r24, r24
    146a:	96 95       	lsr	r25
    146c:	87 95       	ror	r24
    146e:	97 f9       	bld	r25, 7
    1470:	08 95       	ret

00001472 <__fp_cmp>:
    1472:	99 0f       	add	r25, r25
    1474:	00 08       	sbc	r0, r0
    1476:	55 0f       	add	r21, r21
    1478:	aa 0b       	sbc	r26, r26
    147a:	e0 e8       	ldi	r30, 0x80	; 128
    147c:	fe ef       	ldi	r31, 0xFE	; 254
    147e:	16 16       	cp	r1, r22
    1480:	17 06       	cpc	r1, r23
    1482:	e8 07       	cpc	r30, r24
    1484:	f9 07       	cpc	r31, r25
    1486:	c0 f0       	brcs	.+48     	; 0x14b8 <__fp_cmp+0x46>
    1488:	12 16       	cp	r1, r18
    148a:	13 06       	cpc	r1, r19
    148c:	e4 07       	cpc	r30, r20
    148e:	f5 07       	cpc	r31, r21
    1490:	98 f0       	brcs	.+38     	; 0x14b8 <__fp_cmp+0x46>
    1492:	62 1b       	sub	r22, r18
    1494:	73 0b       	sbc	r23, r19
    1496:	84 0b       	sbc	r24, r20
    1498:	95 0b       	sbc	r25, r21
    149a:	39 f4       	brne	.+14     	; 0x14aa <__fp_cmp+0x38>
    149c:	0a 26       	eor	r0, r26
    149e:	61 f0       	breq	.+24     	; 0x14b8 <__fp_cmp+0x46>
    14a0:	23 2b       	or	r18, r19
    14a2:	24 2b       	or	r18, r20
    14a4:	25 2b       	or	r18, r21
    14a6:	21 f4       	brne	.+8      	; 0x14b0 <__fp_cmp+0x3e>
    14a8:	08 95       	ret
    14aa:	0a 26       	eor	r0, r26
    14ac:	09 f4       	brne	.+2      	; 0x14b0 <__fp_cmp+0x3e>
    14ae:	a1 40       	sbci	r26, 0x01	; 1
    14b0:	a6 95       	lsr	r26
    14b2:	8f ef       	ldi	r24, 0xFF	; 255
    14b4:	81 1d       	adc	r24, r1
    14b6:	81 1d       	adc	r24, r1
    14b8:	08 95       	ret

000014ba <__fp_inf>:
    14ba:	97 f9       	bld	r25, 7
    14bc:	9f 67       	ori	r25, 0x7F	; 127
    14be:	80 e8       	ldi	r24, 0x80	; 128
    14c0:	70 e0       	ldi	r23, 0x00	; 0
    14c2:	60 e0       	ldi	r22, 0x00	; 0
    14c4:	08 95       	ret

000014c6 <__fp_nan>:
    14c6:	9f ef       	ldi	r25, 0xFF	; 255
    14c8:	80 ec       	ldi	r24, 0xC0	; 192
    14ca:	08 95       	ret

000014cc <__fp_pscA>:
    14cc:	00 24       	eor	r0, r0
    14ce:	0a 94       	dec	r0
    14d0:	16 16       	cp	r1, r22
    14d2:	17 06       	cpc	r1, r23
    14d4:	18 06       	cpc	r1, r24
    14d6:	09 06       	cpc	r0, r25
    14d8:	08 95       	ret

000014da <__fp_pscB>:
    14da:	00 24       	eor	r0, r0
    14dc:	0a 94       	dec	r0
    14de:	12 16       	cp	r1, r18
    14e0:	13 06       	cpc	r1, r19
    14e2:	14 06       	cpc	r1, r20
    14e4:	05 06       	cpc	r0, r21
    14e6:	08 95       	ret

000014e8 <__fp_round>:
    14e8:	09 2e       	mov	r0, r25
    14ea:	03 94       	inc	r0
    14ec:	00 0c       	add	r0, r0
    14ee:	11 f4       	brne	.+4      	; 0x14f4 <__fp_round+0xc>
    14f0:	88 23       	and	r24, r24
    14f2:	52 f0       	brmi	.+20     	; 0x1508 <__fp_round+0x20>
    14f4:	bb 0f       	add	r27, r27
    14f6:	40 f4       	brcc	.+16     	; 0x1508 <__fp_round+0x20>
    14f8:	bf 2b       	or	r27, r31
    14fa:	11 f4       	brne	.+4      	; 0x1500 <__fp_round+0x18>
    14fc:	60 ff       	sbrs	r22, 0
    14fe:	04 c0       	rjmp	.+8      	; 0x1508 <__fp_round+0x20>
    1500:	6f 5f       	subi	r22, 0xFF	; 255
    1502:	7f 4f       	sbci	r23, 0xFF	; 255
    1504:	8f 4f       	sbci	r24, 0xFF	; 255
    1506:	9f 4f       	sbci	r25, 0xFF	; 255
    1508:	08 95       	ret

0000150a <__fp_split3>:
    150a:	57 fd       	sbrc	r21, 7
    150c:	90 58       	subi	r25, 0x80	; 128
    150e:	44 0f       	add	r20, r20
    1510:	55 1f       	adc	r21, r21
    1512:	59 f0       	breq	.+22     	; 0x152a <__fp_splitA+0x10>
    1514:	5f 3f       	cpi	r21, 0xFF	; 255
    1516:	71 f0       	breq	.+28     	; 0x1534 <__fp_splitA+0x1a>
    1518:	47 95       	ror	r20

0000151a <__fp_splitA>:
    151a:	88 0f       	add	r24, r24
    151c:	97 fb       	bst	r25, 7
    151e:	99 1f       	adc	r25, r25
    1520:	61 f0       	breq	.+24     	; 0x153a <__fp_splitA+0x20>
    1522:	9f 3f       	cpi	r25, 0xFF	; 255
    1524:	79 f0       	breq	.+30     	; 0x1544 <__fp_splitA+0x2a>
    1526:	87 95       	ror	r24
    1528:	08 95       	ret
    152a:	12 16       	cp	r1, r18
    152c:	13 06       	cpc	r1, r19
    152e:	14 06       	cpc	r1, r20
    1530:	55 1f       	adc	r21, r21
    1532:	f2 cf       	rjmp	.-28     	; 0x1518 <__fp_split3+0xe>
    1534:	46 95       	lsr	r20
    1536:	f1 df       	rcall	.-30     	; 0x151a <__fp_splitA>
    1538:	08 c0       	rjmp	.+16     	; 0x154a <__fp_splitA+0x30>
    153a:	16 16       	cp	r1, r22
    153c:	17 06       	cpc	r1, r23
    153e:	18 06       	cpc	r1, r24
    1540:	99 1f       	adc	r25, r25
    1542:	f1 cf       	rjmp	.-30     	; 0x1526 <__fp_splitA+0xc>
    1544:	86 95       	lsr	r24
    1546:	71 05       	cpc	r23, r1
    1548:	61 05       	cpc	r22, r1
    154a:	08 94       	sec
    154c:	08 95       	ret

0000154e <__fp_zero>:
    154e:	e8 94       	clt

00001550 <__fp_szero>:
    1550:	bb 27       	eor	r27, r27
    1552:	66 27       	eor	r22, r22
    1554:	77 27       	eor	r23, r23
    1556:	cb 01       	movw	r24, r22
    1558:	97 f9       	bld	r25, 7
    155a:	08 95       	ret

0000155c <__gesf2>:
    155c:	8a df       	rcall	.-236    	; 0x1472 <__fp_cmp>
    155e:	08 f4       	brcc	.+2      	; 0x1562 <__gesf2+0x6>
    1560:	8f ef       	ldi	r24, 0xFF	; 255
    1562:	08 95       	ret

00001564 <__mulsf3>:
    1564:	0b d0       	rcall	.+22     	; 0x157c <__mulsf3x>
    1566:	c0 cf       	rjmp	.-128    	; 0x14e8 <__fp_round>
    1568:	b1 df       	rcall	.-158    	; 0x14cc <__fp_pscA>
    156a:	28 f0       	brcs	.+10     	; 0x1576 <__mulsf3+0x12>
    156c:	b6 df       	rcall	.-148    	; 0x14da <__fp_pscB>
    156e:	18 f0       	brcs	.+6      	; 0x1576 <__mulsf3+0x12>
    1570:	95 23       	and	r25, r21
    1572:	09 f0       	breq	.+2      	; 0x1576 <__mulsf3+0x12>
    1574:	a2 cf       	rjmp	.-188    	; 0x14ba <__fp_inf>
    1576:	a7 cf       	rjmp	.-178    	; 0x14c6 <__fp_nan>
    1578:	11 24       	eor	r1, r1
    157a:	ea cf       	rjmp	.-44     	; 0x1550 <__fp_szero>

0000157c <__mulsf3x>:
    157c:	c6 df       	rcall	.-116    	; 0x150a <__fp_split3>
    157e:	a0 f3       	brcs	.-24     	; 0x1568 <__mulsf3+0x4>

00001580 <__mulsf3_pse>:
    1580:	95 9f       	mul	r25, r21
    1582:	d1 f3       	breq	.-12     	; 0x1578 <__mulsf3+0x14>
    1584:	95 0f       	add	r25, r21
    1586:	50 e0       	ldi	r21, 0x00	; 0
    1588:	55 1f       	adc	r21, r21
    158a:	62 9f       	mul	r22, r18
    158c:	f0 01       	movw	r30, r0
    158e:	72 9f       	mul	r23, r18
    1590:	bb 27       	eor	r27, r27
    1592:	f0 0d       	add	r31, r0
    1594:	b1 1d       	adc	r27, r1
    1596:	63 9f       	mul	r22, r19
    1598:	aa 27       	eor	r26, r26
    159a:	f0 0d       	add	r31, r0
    159c:	b1 1d       	adc	r27, r1
    159e:	aa 1f       	adc	r26, r26
    15a0:	64 9f       	mul	r22, r20
    15a2:	66 27       	eor	r22, r22
    15a4:	b0 0d       	add	r27, r0
    15a6:	a1 1d       	adc	r26, r1
    15a8:	66 1f       	adc	r22, r22
    15aa:	82 9f       	mul	r24, r18
    15ac:	22 27       	eor	r18, r18
    15ae:	b0 0d       	add	r27, r0
    15b0:	a1 1d       	adc	r26, r1
    15b2:	62 1f       	adc	r22, r18
    15b4:	73 9f       	mul	r23, r19
    15b6:	b0 0d       	add	r27, r0
    15b8:	a1 1d       	adc	r26, r1
    15ba:	62 1f       	adc	r22, r18
    15bc:	83 9f       	mul	r24, r19
    15be:	a0 0d       	add	r26, r0
    15c0:	61 1d       	adc	r22, r1
    15c2:	22 1f       	adc	r18, r18
    15c4:	74 9f       	mul	r23, r20
    15c6:	33 27       	eor	r19, r19
    15c8:	a0 0d       	add	r26, r0
    15ca:	61 1d       	adc	r22, r1
    15cc:	23 1f       	adc	r18, r19
    15ce:	84 9f       	mul	r24, r20
    15d0:	60 0d       	add	r22, r0
    15d2:	21 1d       	adc	r18, r1
    15d4:	82 2f       	mov	r24, r18
    15d6:	76 2f       	mov	r23, r22
    15d8:	6a 2f       	mov	r22, r26
    15da:	11 24       	eor	r1, r1
    15dc:	9f 57       	subi	r25, 0x7F	; 127
    15de:	50 40       	sbci	r21, 0x00	; 0
    15e0:	8a f0       	brmi	.+34     	; 0x1604 <__mulsf3_pse+0x84>
    15e2:	e1 f0       	breq	.+56     	; 0x161c <__mulsf3_pse+0x9c>
    15e4:	88 23       	and	r24, r24
    15e6:	4a f0       	brmi	.+18     	; 0x15fa <__mulsf3_pse+0x7a>
    15e8:	ee 0f       	add	r30, r30
    15ea:	ff 1f       	adc	r31, r31
    15ec:	bb 1f       	adc	r27, r27
    15ee:	66 1f       	adc	r22, r22
    15f0:	77 1f       	adc	r23, r23
    15f2:	88 1f       	adc	r24, r24
    15f4:	91 50       	subi	r25, 0x01	; 1
    15f6:	50 40       	sbci	r21, 0x00	; 0
    15f8:	a9 f7       	brne	.-22     	; 0x15e4 <__mulsf3_pse+0x64>
    15fa:	9e 3f       	cpi	r25, 0xFE	; 254
    15fc:	51 05       	cpc	r21, r1
    15fe:	70 f0       	brcs	.+28     	; 0x161c <__mulsf3_pse+0x9c>
    1600:	5c cf       	rjmp	.-328    	; 0x14ba <__fp_inf>
    1602:	a6 cf       	rjmp	.-180    	; 0x1550 <__fp_szero>
    1604:	5f 3f       	cpi	r21, 0xFF	; 255
    1606:	ec f3       	brlt	.-6      	; 0x1602 <__mulsf3_pse+0x82>
    1608:	98 3e       	cpi	r25, 0xE8	; 232
    160a:	dc f3       	brlt	.-10     	; 0x1602 <__mulsf3_pse+0x82>
    160c:	86 95       	lsr	r24
    160e:	77 95       	ror	r23
    1610:	67 95       	ror	r22
    1612:	b7 95       	ror	r27
    1614:	f7 95       	ror	r31
    1616:	e7 95       	ror	r30
    1618:	9f 5f       	subi	r25, 0xFF	; 255
    161a:	c1 f7       	brne	.-16     	; 0x160c <__mulsf3_pse+0x8c>
    161c:	fe 2b       	or	r31, r30
    161e:	88 0f       	add	r24, r24
    1620:	91 1d       	adc	r25, r1
    1622:	96 95       	lsr	r25
    1624:	87 95       	ror	r24
    1626:	97 f9       	bld	r25, 7
    1628:	08 95       	ret

0000162a <__udivmodqi4>:
    162a:	99 1b       	sub	r25, r25
    162c:	79 e0       	ldi	r23, 0x09	; 9
    162e:	04 c0       	rjmp	.+8      	; 0x1638 <__udivmodqi4_ep>

00001630 <__udivmodqi4_loop>:
    1630:	99 1f       	adc	r25, r25
    1632:	96 17       	cp	r25, r22
    1634:	08 f0       	brcs	.+2      	; 0x1638 <__udivmodqi4_ep>
    1636:	96 1b       	sub	r25, r22

00001638 <__udivmodqi4_ep>:
    1638:	88 1f       	adc	r24, r24
    163a:	7a 95       	dec	r23
    163c:	c9 f7       	brne	.-14     	; 0x1630 <__udivmodqi4_loop>
    163e:	80 95       	com	r24
    1640:	08 95       	ret

00001642 <__udivmodhi4>:
    1642:	aa 1b       	sub	r26, r26
    1644:	bb 1b       	sub	r27, r27
    1646:	51 e1       	ldi	r21, 0x11	; 17
    1648:	07 c0       	rjmp	.+14     	; 0x1658 <__udivmodhi4_ep>

0000164a <__udivmodhi4_loop>:
    164a:	aa 1f       	adc	r26, r26
    164c:	bb 1f       	adc	r27, r27
    164e:	a6 17       	cp	r26, r22
    1650:	b7 07       	cpc	r27, r23
    1652:	10 f0       	brcs	.+4      	; 0x1658 <__udivmodhi4_ep>
    1654:	a6 1b       	sub	r26, r22
    1656:	b7 0b       	sbc	r27, r23

00001658 <__udivmodhi4_ep>:
    1658:	88 1f       	adc	r24, r24
    165a:	99 1f       	adc	r25, r25
    165c:	5a 95       	dec	r21
    165e:	a9 f7       	brne	.-22     	; 0x164a <__udivmodhi4_loop>
    1660:	80 95       	com	r24
    1662:	90 95       	com	r25
    1664:	bc 01       	movw	r22, r24
    1666:	cd 01       	movw	r24, r26
    1668:	08 95       	ret

0000166a <__divmodhi4>:
    166a:	97 fb       	bst	r25, 7
    166c:	07 2e       	mov	r0, r23
    166e:	16 f4       	brtc	.+4      	; 0x1674 <__divmodhi4+0xa>
    1670:	00 94       	com	r0
    1672:	06 d0       	rcall	.+12     	; 0x1680 <__divmodhi4_neg1>
    1674:	77 fd       	sbrc	r23, 7
    1676:	08 d0       	rcall	.+16     	; 0x1688 <__divmodhi4_neg2>
    1678:	e4 df       	rcall	.-56     	; 0x1642 <__udivmodhi4>
    167a:	07 fc       	sbrc	r0, 7
    167c:	05 d0       	rcall	.+10     	; 0x1688 <__divmodhi4_neg2>
    167e:	3e f4       	brtc	.+14     	; 0x168e <__divmodhi4_exit>

00001680 <__divmodhi4_neg1>:
    1680:	90 95       	com	r25
    1682:	81 95       	neg	r24
    1684:	9f 4f       	sbci	r25, 0xFF	; 255
    1686:	08 95       	ret

00001688 <__divmodhi4_neg2>:
    1688:	70 95       	com	r23
    168a:	61 95       	neg	r22
    168c:	7f 4f       	sbci	r23, 0xFF	; 255

0000168e <__divmodhi4_exit>:
    168e:	08 95       	ret

00001690 <__udivmodsi4>:
    1690:	a1 e2       	ldi	r26, 0x21	; 33
    1692:	1a 2e       	mov	r1, r26
    1694:	aa 1b       	sub	r26, r26
    1696:	bb 1b       	sub	r27, r27
    1698:	fd 01       	movw	r30, r26
    169a:	0d c0       	rjmp	.+26     	; 0x16b6 <__udivmodsi4_ep>

0000169c <__udivmodsi4_loop>:
    169c:	aa 1f       	adc	r26, r26
    169e:	bb 1f       	adc	r27, r27
    16a0:	ee 1f       	adc	r30, r30
    16a2:	ff 1f       	adc	r31, r31
    16a4:	a2 17       	cp	r26, r18
    16a6:	b3 07       	cpc	r27, r19
    16a8:	e4 07       	cpc	r30, r20
    16aa:	f5 07       	cpc	r31, r21
    16ac:	20 f0       	brcs	.+8      	; 0x16b6 <__udivmodsi4_ep>
    16ae:	a2 1b       	sub	r26, r18
    16b0:	b3 0b       	sbc	r27, r19
    16b2:	e4 0b       	sbc	r30, r20
    16b4:	f5 0b       	sbc	r31, r21

000016b6 <__udivmodsi4_ep>:
    16b6:	66 1f       	adc	r22, r22
    16b8:	77 1f       	adc	r23, r23
    16ba:	88 1f       	adc	r24, r24
    16bc:	99 1f       	adc	r25, r25
    16be:	1a 94       	dec	r1
    16c0:	69 f7       	brne	.-38     	; 0x169c <__udivmodsi4_loop>
    16c2:	60 95       	com	r22
    16c4:	70 95       	com	r23
    16c6:	80 95       	com	r24
    16c8:	90 95       	com	r25
    16ca:	9b 01       	movw	r18, r22
    16cc:	ac 01       	movw	r20, r24
    16ce:	bd 01       	movw	r22, r26
    16d0:	cf 01       	movw	r24, r30
    16d2:	08 95       	ret

000016d4 <__umulhisi3>:
    16d4:	a2 9f       	mul	r26, r18
    16d6:	b0 01       	movw	r22, r0
    16d8:	b3 9f       	mul	r27, r19
    16da:	c0 01       	movw	r24, r0
    16dc:	a3 9f       	mul	r26, r19
    16de:	01 d0       	rcall	.+2      	; 0x16e2 <__umulhisi3+0xe>
    16e0:	b2 9f       	mul	r27, r18
    16e2:	70 0d       	add	r23, r0
    16e4:	81 1d       	adc	r24, r1
    16e6:	11 24       	eor	r1, r1
    16e8:	91 1d       	adc	r25, r1
    16ea:	08 95       	ret

000016ec <dtostrf>:
    16ec:	ef 92       	push	r14
    16ee:	0f 93       	push	r16
    16f0:	1f 93       	push	r17
    16f2:	cf 93       	push	r28
    16f4:	df 93       	push	r29
    16f6:	e8 01       	movw	r28, r16
    16f8:	47 fd       	sbrc	r20, 7
    16fa:	02 c0       	rjmp	.+4      	; 0x1700 <dtostrf+0x14>
    16fc:	34 e0       	ldi	r19, 0x04	; 4
    16fe:	01 c0       	rjmp	.+2      	; 0x1702 <dtostrf+0x16>
    1700:	34 e1       	ldi	r19, 0x14	; 20
    1702:	04 2e       	mov	r0, r20
    1704:	00 0c       	add	r0, r0
    1706:	55 0b       	sbc	r21, r21
    1708:	57 ff       	sbrs	r21, 7
    170a:	03 c0       	rjmp	.+6      	; 0x1712 <dtostrf+0x26>
    170c:	51 95       	neg	r21
    170e:	41 95       	neg	r20
    1710:	51 09       	sbc	r21, r1
    1712:	e3 2e       	mov	r14, r19
    1714:	02 2f       	mov	r16, r18
    1716:	24 2f       	mov	r18, r20
    1718:	ae 01       	movw	r20, r28
    171a:	07 d0       	rcall	.+14     	; 0x172a <dtoa_prf>
    171c:	ce 01       	movw	r24, r28
    171e:	df 91       	pop	r29
    1720:	cf 91       	pop	r28
    1722:	1f 91       	pop	r17
    1724:	0f 91       	pop	r16
    1726:	ef 90       	pop	r14
    1728:	08 95       	ret

0000172a <dtoa_prf>:
    172a:	a9 e0       	ldi	r26, 0x09	; 9
    172c:	b0 e0       	ldi	r27, 0x00	; 0
    172e:	ea e9       	ldi	r30, 0x9A	; 154
    1730:	fb e0       	ldi	r31, 0x0B	; 11
    1732:	67 c2       	rjmp	.+1230   	; 0x1c02 <__prologue_saves__+0xc>
    1734:	6a 01       	movw	r12, r20
    1736:	12 2f       	mov	r17, r18
    1738:	b0 2e       	mov	r11, r16
    173a:	2b e3       	ldi	r18, 0x3B	; 59
    173c:	20 17       	cp	r18, r16
    173e:	20 f0       	brcs	.+8      	; 0x1748 <dtoa_prf+0x1e>
    1740:	ff 24       	eor	r15, r15
    1742:	f3 94       	inc	r15
    1744:	f0 0e       	add	r15, r16
    1746:	02 c0       	rjmp	.+4      	; 0x174c <dtoa_prf+0x22>
    1748:	2c e3       	ldi	r18, 0x3C	; 60
    174a:	f2 2e       	mov	r15, r18
    174c:	0f 2d       	mov	r16, r15
    174e:	27 e0       	ldi	r18, 0x07	; 7
    1750:	ae 01       	movw	r20, r28
    1752:	4f 5f       	subi	r20, 0xFF	; 255
    1754:	5f 4f       	sbci	r21, 0xFF	; 255
    1756:	40 d1       	rcall	.+640    	; 0x19d8 <__ftoa_engine>
    1758:	bc 01       	movw	r22, r24
    175a:	49 81       	ldd	r20, Y+1	; 0x01
    175c:	84 2f       	mov	r24, r20
    175e:	89 70       	andi	r24, 0x09	; 9
    1760:	81 30       	cpi	r24, 0x01	; 1
    1762:	31 f0       	breq	.+12     	; 0x1770 <dtoa_prf+0x46>
    1764:	e1 fc       	sbrc	r14, 1
    1766:	06 c0       	rjmp	.+12     	; 0x1774 <dtoa_prf+0x4a>
    1768:	e0 fe       	sbrs	r14, 0
    176a:	06 c0       	rjmp	.+12     	; 0x1778 <dtoa_prf+0x4e>
    176c:	90 e2       	ldi	r25, 0x20	; 32
    176e:	05 c0       	rjmp	.+10     	; 0x177a <dtoa_prf+0x50>
    1770:	9d e2       	ldi	r25, 0x2D	; 45
    1772:	03 c0       	rjmp	.+6      	; 0x177a <dtoa_prf+0x50>
    1774:	9b e2       	ldi	r25, 0x2B	; 43
    1776:	01 c0       	rjmp	.+2      	; 0x177a <dtoa_prf+0x50>
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	5e 2d       	mov	r21, r14
    177c:	50 71       	andi	r21, 0x10	; 16
    177e:	43 ff       	sbrs	r20, 3
    1780:	3c c0       	rjmp	.+120    	; 0x17fa <dtoa_prf+0xd0>
    1782:	91 11       	cpse	r25, r1
    1784:	02 c0       	rjmp	.+4      	; 0x178a <dtoa_prf+0x60>
    1786:	83 e0       	ldi	r24, 0x03	; 3
    1788:	01 c0       	rjmp	.+2      	; 0x178c <dtoa_prf+0x62>
    178a:	84 e0       	ldi	r24, 0x04	; 4
    178c:	81 17       	cp	r24, r17
    178e:	18 f4       	brcc	.+6      	; 0x1796 <dtoa_prf+0x6c>
    1790:	21 2f       	mov	r18, r17
    1792:	28 1b       	sub	r18, r24
    1794:	01 c0       	rjmp	.+2      	; 0x1798 <dtoa_prf+0x6e>
    1796:	20 e0       	ldi	r18, 0x00	; 0
    1798:	51 11       	cpse	r21, r1
    179a:	0b c0       	rjmp	.+22     	; 0x17b2 <dtoa_prf+0x88>
    179c:	f6 01       	movw	r30, r12
    179e:	82 2f       	mov	r24, r18
    17a0:	30 e2       	ldi	r19, 0x20	; 32
    17a2:	88 23       	and	r24, r24
    17a4:	19 f0       	breq	.+6      	; 0x17ac <dtoa_prf+0x82>
    17a6:	31 93       	st	Z+, r19
    17a8:	81 50       	subi	r24, 0x01	; 1
    17aa:	fb cf       	rjmp	.-10     	; 0x17a2 <dtoa_prf+0x78>
    17ac:	c2 0e       	add	r12, r18
    17ae:	d1 1c       	adc	r13, r1
    17b0:	20 e0       	ldi	r18, 0x00	; 0
    17b2:	99 23       	and	r25, r25
    17b4:	29 f0       	breq	.+10     	; 0x17c0 <dtoa_prf+0x96>
    17b6:	d6 01       	movw	r26, r12
    17b8:	9c 93       	st	X, r25
    17ba:	f6 01       	movw	r30, r12
    17bc:	31 96       	adiw	r30, 0x01	; 1
    17be:	6f 01       	movw	r12, r30
    17c0:	c6 01       	movw	r24, r12
    17c2:	03 96       	adiw	r24, 0x03	; 3
    17c4:	e2 fe       	sbrs	r14, 2
    17c6:	0a c0       	rjmp	.+20     	; 0x17dc <dtoa_prf+0xb2>
    17c8:	3e e4       	ldi	r19, 0x4E	; 78
    17ca:	d6 01       	movw	r26, r12
    17cc:	3c 93       	st	X, r19
    17ce:	41 e4       	ldi	r20, 0x41	; 65
    17d0:	11 96       	adiw	r26, 0x01	; 1
    17d2:	4c 93       	st	X, r20
    17d4:	11 97       	sbiw	r26, 0x01	; 1
    17d6:	12 96       	adiw	r26, 0x02	; 2
    17d8:	3c 93       	st	X, r19
    17da:	06 c0       	rjmp	.+12     	; 0x17e8 <dtoa_prf+0xbe>
    17dc:	3e e6       	ldi	r19, 0x6E	; 110
    17de:	f6 01       	movw	r30, r12
    17e0:	30 83       	st	Z, r19
    17e2:	41 e6       	ldi	r20, 0x61	; 97
    17e4:	41 83       	std	Z+1, r20	; 0x01
    17e6:	32 83       	std	Z+2, r19	; 0x02
    17e8:	fc 01       	movw	r30, r24
    17ea:	32 2f       	mov	r19, r18
    17ec:	40 e2       	ldi	r20, 0x20	; 32
    17ee:	33 23       	and	r19, r19
    17f0:	09 f4       	brne	.+2      	; 0x17f4 <dtoa_prf+0xca>
    17f2:	42 c0       	rjmp	.+132    	; 0x1878 <dtoa_prf+0x14e>
    17f4:	41 93       	st	Z+, r20
    17f6:	31 50       	subi	r19, 0x01	; 1
    17f8:	fa cf       	rjmp	.-12     	; 0x17ee <dtoa_prf+0xc4>
    17fa:	42 ff       	sbrs	r20, 2
    17fc:	44 c0       	rjmp	.+136    	; 0x1886 <dtoa_prf+0x15c>
    17fe:	91 11       	cpse	r25, r1
    1800:	02 c0       	rjmp	.+4      	; 0x1806 <dtoa_prf+0xdc>
    1802:	83 e0       	ldi	r24, 0x03	; 3
    1804:	01 c0       	rjmp	.+2      	; 0x1808 <dtoa_prf+0xde>
    1806:	84 e0       	ldi	r24, 0x04	; 4
    1808:	81 17       	cp	r24, r17
    180a:	18 f4       	brcc	.+6      	; 0x1812 <dtoa_prf+0xe8>
    180c:	21 2f       	mov	r18, r17
    180e:	28 1b       	sub	r18, r24
    1810:	01 c0       	rjmp	.+2      	; 0x1814 <dtoa_prf+0xea>
    1812:	20 e0       	ldi	r18, 0x00	; 0
    1814:	51 11       	cpse	r21, r1
    1816:	0b c0       	rjmp	.+22     	; 0x182e <dtoa_prf+0x104>
    1818:	f6 01       	movw	r30, r12
    181a:	82 2f       	mov	r24, r18
    181c:	30 e2       	ldi	r19, 0x20	; 32
    181e:	88 23       	and	r24, r24
    1820:	19 f0       	breq	.+6      	; 0x1828 <dtoa_prf+0xfe>
    1822:	31 93       	st	Z+, r19
    1824:	81 50       	subi	r24, 0x01	; 1
    1826:	fb cf       	rjmp	.-10     	; 0x181e <dtoa_prf+0xf4>
    1828:	c2 0e       	add	r12, r18
    182a:	d1 1c       	adc	r13, r1
    182c:	20 e0       	ldi	r18, 0x00	; 0
    182e:	99 23       	and	r25, r25
    1830:	29 f0       	breq	.+10     	; 0x183c <dtoa_prf+0x112>
    1832:	d6 01       	movw	r26, r12
    1834:	9c 93       	st	X, r25
    1836:	f6 01       	movw	r30, r12
    1838:	31 96       	adiw	r30, 0x01	; 1
    183a:	6f 01       	movw	r12, r30
    183c:	c6 01       	movw	r24, r12
    183e:	03 96       	adiw	r24, 0x03	; 3
    1840:	e2 fe       	sbrs	r14, 2
    1842:	0b c0       	rjmp	.+22     	; 0x185a <dtoa_prf+0x130>
    1844:	39 e4       	ldi	r19, 0x49	; 73
    1846:	d6 01       	movw	r26, r12
    1848:	3c 93       	st	X, r19
    184a:	3e e4       	ldi	r19, 0x4E	; 78
    184c:	11 96       	adiw	r26, 0x01	; 1
    184e:	3c 93       	st	X, r19
    1850:	11 97       	sbiw	r26, 0x01	; 1
    1852:	36 e4       	ldi	r19, 0x46	; 70
    1854:	12 96       	adiw	r26, 0x02	; 2
    1856:	3c 93       	st	X, r19
    1858:	07 c0       	rjmp	.+14     	; 0x1868 <dtoa_prf+0x13e>
    185a:	39 e6       	ldi	r19, 0x69	; 105
    185c:	f6 01       	movw	r30, r12
    185e:	30 83       	st	Z, r19
    1860:	3e e6       	ldi	r19, 0x6E	; 110
    1862:	31 83       	std	Z+1, r19	; 0x01
    1864:	36 e6       	ldi	r19, 0x66	; 102
    1866:	32 83       	std	Z+2, r19	; 0x02
    1868:	fc 01       	movw	r30, r24
    186a:	32 2f       	mov	r19, r18
    186c:	40 e2       	ldi	r20, 0x20	; 32
    186e:	33 23       	and	r19, r19
    1870:	19 f0       	breq	.+6      	; 0x1878 <dtoa_prf+0x14e>
    1872:	41 93       	st	Z+, r20
    1874:	31 50       	subi	r19, 0x01	; 1
    1876:	fb cf       	rjmp	.-10     	; 0x186e <dtoa_prf+0x144>
    1878:	fc 01       	movw	r30, r24
    187a:	e2 0f       	add	r30, r18
    187c:	f1 1d       	adc	r31, r1
    187e:	10 82       	st	Z, r1
    1880:	8e ef       	ldi	r24, 0xFE	; 254
    1882:	9f ef       	ldi	r25, 0xFF	; 255
    1884:	a6 c0       	rjmp	.+332    	; 0x19d2 <dtoa_prf+0x2a8>
    1886:	21 e0       	ldi	r18, 0x01	; 1
    1888:	30 e0       	ldi	r19, 0x00	; 0
    188a:	91 11       	cpse	r25, r1
    188c:	02 c0       	rjmp	.+4      	; 0x1892 <dtoa_prf+0x168>
    188e:	20 e0       	ldi	r18, 0x00	; 0
    1890:	30 e0       	ldi	r19, 0x00	; 0
    1892:	16 16       	cp	r1, r22
    1894:	17 06       	cpc	r1, r23
    1896:	1c f4       	brge	.+6      	; 0x189e <dtoa_prf+0x174>
    1898:	fb 01       	movw	r30, r22
    189a:	31 96       	adiw	r30, 0x01	; 1
    189c:	02 c0       	rjmp	.+4      	; 0x18a2 <dtoa_prf+0x178>
    189e:	e1 e0       	ldi	r30, 0x01	; 1
    18a0:	f0 e0       	ldi	r31, 0x00	; 0
    18a2:	2e 0f       	add	r18, r30
    18a4:	3f 1f       	adc	r19, r31
    18a6:	bb 20       	and	r11, r11
    18a8:	21 f0       	breq	.+8      	; 0x18b2 <dtoa_prf+0x188>
    18aa:	eb 2d       	mov	r30, r11
    18ac:	f0 e0       	ldi	r31, 0x00	; 0
    18ae:	31 96       	adiw	r30, 0x01	; 1
    18b0:	02 c0       	rjmp	.+4      	; 0x18b6 <dtoa_prf+0x18c>
    18b2:	e0 e0       	ldi	r30, 0x00	; 0
    18b4:	f0 e0       	ldi	r31, 0x00	; 0
    18b6:	2e 0f       	add	r18, r30
    18b8:	3f 1f       	adc	r19, r31
    18ba:	e1 2f       	mov	r30, r17
    18bc:	f0 e0       	ldi	r31, 0x00	; 0
    18be:	2e 17       	cp	r18, r30
    18c0:	3f 07       	cpc	r19, r31
    18c2:	1c f4       	brge	.+6      	; 0x18ca <dtoa_prf+0x1a0>
    18c4:	12 1b       	sub	r17, r18
    18c6:	21 2f       	mov	r18, r17
    18c8:	01 c0       	rjmp	.+2      	; 0x18cc <dtoa_prf+0x1a2>
    18ca:	20 e0       	ldi	r18, 0x00	; 0
    18cc:	8e 2d       	mov	r24, r14
    18ce:	88 71       	andi	r24, 0x18	; 24
    18d0:	59 f4       	brne	.+22     	; 0x18e8 <dtoa_prf+0x1be>
    18d2:	f6 01       	movw	r30, r12
    18d4:	82 2f       	mov	r24, r18
    18d6:	30 e2       	ldi	r19, 0x20	; 32
    18d8:	88 23       	and	r24, r24
    18da:	19 f0       	breq	.+6      	; 0x18e2 <dtoa_prf+0x1b8>
    18dc:	31 93       	st	Z+, r19
    18de:	81 50       	subi	r24, 0x01	; 1
    18e0:	fb cf       	rjmp	.-10     	; 0x18d8 <dtoa_prf+0x1ae>
    18e2:	c2 0e       	add	r12, r18
    18e4:	d1 1c       	adc	r13, r1
    18e6:	20 e0       	ldi	r18, 0x00	; 0
    18e8:	99 23       	and	r25, r25
    18ea:	29 f0       	breq	.+10     	; 0x18f6 <dtoa_prf+0x1cc>
    18ec:	d6 01       	movw	r26, r12
    18ee:	9c 93       	st	X, r25
    18f0:	f6 01       	movw	r30, r12
    18f2:	31 96       	adiw	r30, 0x01	; 1
    18f4:	6f 01       	movw	r12, r30
    18f6:	51 11       	cpse	r21, r1
    18f8:	0b c0       	rjmp	.+22     	; 0x1910 <dtoa_prf+0x1e6>
    18fa:	f6 01       	movw	r30, r12
    18fc:	82 2f       	mov	r24, r18
    18fe:	90 e3       	ldi	r25, 0x30	; 48
    1900:	88 23       	and	r24, r24
    1902:	19 f0       	breq	.+6      	; 0x190a <dtoa_prf+0x1e0>
    1904:	91 93       	st	Z+, r25
    1906:	81 50       	subi	r24, 0x01	; 1
    1908:	fb cf       	rjmp	.-10     	; 0x1900 <dtoa_prf+0x1d6>
    190a:	c2 0e       	add	r12, r18
    190c:	d1 1c       	adc	r13, r1
    190e:	20 e0       	ldi	r18, 0x00	; 0
    1910:	0f 2d       	mov	r16, r15
    1912:	06 0f       	add	r16, r22
    1914:	9a 81       	ldd	r25, Y+2	; 0x02
    1916:	34 2f       	mov	r19, r20
    1918:	30 71       	andi	r19, 0x10	; 16
    191a:	44 ff       	sbrs	r20, 4
    191c:	03 c0       	rjmp	.+6      	; 0x1924 <dtoa_prf+0x1fa>
    191e:	91 33       	cpi	r25, 0x31	; 49
    1920:	09 f4       	brne	.+2      	; 0x1924 <dtoa_prf+0x1fa>
    1922:	01 50       	subi	r16, 0x01	; 1
    1924:	10 16       	cp	r1, r16
    1926:	24 f4       	brge	.+8      	; 0x1930 <dtoa_prf+0x206>
    1928:	09 30       	cpi	r16, 0x09	; 9
    192a:	18 f0       	brcs	.+6      	; 0x1932 <dtoa_prf+0x208>
    192c:	08 e0       	ldi	r16, 0x08	; 8
    192e:	01 c0       	rjmp	.+2      	; 0x1932 <dtoa_prf+0x208>
    1930:	01 e0       	ldi	r16, 0x01	; 1
    1932:	ab 01       	movw	r20, r22
    1934:	77 ff       	sbrs	r23, 7
    1936:	02 c0       	rjmp	.+4      	; 0x193c <dtoa_prf+0x212>
    1938:	40 e0       	ldi	r20, 0x00	; 0
    193a:	50 e0       	ldi	r21, 0x00	; 0
    193c:	fb 01       	movw	r30, r22
    193e:	e4 1b       	sub	r30, r20
    1940:	f5 0b       	sbc	r31, r21
    1942:	a1 e0       	ldi	r26, 0x01	; 1
    1944:	b0 e0       	ldi	r27, 0x00	; 0
    1946:	ac 0f       	add	r26, r28
    1948:	bd 1f       	adc	r27, r29
    194a:	ea 0f       	add	r30, r26
    194c:	fb 1f       	adc	r31, r27
    194e:	8e e2       	ldi	r24, 0x2E	; 46
    1950:	a8 2e       	mov	r10, r24
    1952:	4b 01       	movw	r8, r22
    1954:	80 1a       	sub	r8, r16
    1956:	91 08       	sbc	r9, r1
    1958:	0b 2d       	mov	r16, r11
    195a:	10 e0       	ldi	r17, 0x00	; 0
    195c:	11 95       	neg	r17
    195e:	01 95       	neg	r16
    1960:	11 09       	sbc	r17, r1
    1962:	4f 3f       	cpi	r20, 0xFF	; 255
    1964:	bf ef       	ldi	r27, 0xFF	; 255
    1966:	5b 07       	cpc	r21, r27
    1968:	21 f4       	brne	.+8      	; 0x1972 <dtoa_prf+0x248>
    196a:	d6 01       	movw	r26, r12
    196c:	ac 92       	st	X, r10
    196e:	11 96       	adiw	r26, 0x01	; 1
    1970:	6d 01       	movw	r12, r26
    1972:	64 17       	cp	r22, r20
    1974:	75 07       	cpc	r23, r21
    1976:	2c f0       	brlt	.+10     	; 0x1982 <dtoa_prf+0x258>
    1978:	84 16       	cp	r8, r20
    197a:	95 06       	cpc	r9, r21
    197c:	14 f4       	brge	.+4      	; 0x1982 <dtoa_prf+0x258>
    197e:	81 81       	ldd	r24, Z+1	; 0x01
    1980:	01 c0       	rjmp	.+2      	; 0x1984 <dtoa_prf+0x25a>
    1982:	80 e3       	ldi	r24, 0x30	; 48
    1984:	41 50       	subi	r20, 0x01	; 1
    1986:	51 09       	sbc	r21, r1
    1988:	31 96       	adiw	r30, 0x01	; 1
    198a:	d6 01       	movw	r26, r12
    198c:	11 96       	adiw	r26, 0x01	; 1
    198e:	7d 01       	movw	r14, r26
    1990:	40 17       	cp	r20, r16
    1992:	51 07       	cpc	r21, r17
    1994:	24 f0       	brlt	.+8      	; 0x199e <dtoa_prf+0x274>
    1996:	d6 01       	movw	r26, r12
    1998:	8c 93       	st	X, r24
    199a:	67 01       	movw	r12, r14
    199c:	e2 cf       	rjmp	.-60     	; 0x1962 <dtoa_prf+0x238>
    199e:	64 17       	cp	r22, r20
    19a0:	75 07       	cpc	r23, r21
    19a2:	39 f4       	brne	.+14     	; 0x19b2 <dtoa_prf+0x288>
    19a4:	96 33       	cpi	r25, 0x36	; 54
    19a6:	20 f4       	brcc	.+8      	; 0x19b0 <dtoa_prf+0x286>
    19a8:	95 33       	cpi	r25, 0x35	; 53
    19aa:	19 f4       	brne	.+6      	; 0x19b2 <dtoa_prf+0x288>
    19ac:	31 11       	cpse	r19, r1
    19ae:	01 c0       	rjmp	.+2      	; 0x19b2 <dtoa_prf+0x288>
    19b0:	81 e3       	ldi	r24, 0x31	; 49
    19b2:	f6 01       	movw	r30, r12
    19b4:	80 83       	st	Z, r24
    19b6:	f7 01       	movw	r30, r14
    19b8:	82 2f       	mov	r24, r18
    19ba:	90 e2       	ldi	r25, 0x20	; 32
    19bc:	88 23       	and	r24, r24
    19be:	19 f0       	breq	.+6      	; 0x19c6 <dtoa_prf+0x29c>
    19c0:	91 93       	st	Z+, r25
    19c2:	81 50       	subi	r24, 0x01	; 1
    19c4:	fb cf       	rjmp	.-10     	; 0x19bc <dtoa_prf+0x292>
    19c6:	f7 01       	movw	r30, r14
    19c8:	e2 0f       	add	r30, r18
    19ca:	f1 1d       	adc	r31, r1
    19cc:	10 82       	st	Z, r1
    19ce:	80 e0       	ldi	r24, 0x00	; 0
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	29 96       	adiw	r28, 0x09	; 9
    19d4:	ec e0       	ldi	r30, 0x0C	; 12
    19d6:	31 c1       	rjmp	.+610    	; 0x1c3a <__epilogue_restores__+0xc>

000019d8 <__ftoa_engine>:
    19d8:	28 30       	cpi	r18, 0x08	; 8
    19da:	08 f0       	brcs	.+2      	; 0x19de <__ftoa_engine+0x6>
    19dc:	27 e0       	ldi	r18, 0x07	; 7
    19de:	33 27       	eor	r19, r19
    19e0:	da 01       	movw	r26, r20
    19e2:	99 0f       	add	r25, r25
    19e4:	31 1d       	adc	r19, r1
    19e6:	87 fd       	sbrc	r24, 7
    19e8:	91 60       	ori	r25, 0x01	; 1
    19ea:	00 96       	adiw	r24, 0x00	; 0
    19ec:	61 05       	cpc	r22, r1
    19ee:	71 05       	cpc	r23, r1
    19f0:	39 f4       	brne	.+14     	; 0x1a00 <__ftoa_engine+0x28>
    19f2:	32 60       	ori	r19, 0x02	; 2
    19f4:	2e 5f       	subi	r18, 0xFE	; 254
    19f6:	3d 93       	st	X+, r19
    19f8:	30 e3       	ldi	r19, 0x30	; 48
    19fa:	2a 95       	dec	r18
    19fc:	e1 f7       	brne	.-8      	; 0x19f6 <__ftoa_engine+0x1e>
    19fe:	08 95       	ret
    1a00:	9f 3f       	cpi	r25, 0xFF	; 255
    1a02:	30 f0       	brcs	.+12     	; 0x1a10 <__ftoa_engine+0x38>
    1a04:	80 38       	cpi	r24, 0x80	; 128
    1a06:	71 05       	cpc	r23, r1
    1a08:	61 05       	cpc	r22, r1
    1a0a:	09 f0       	breq	.+2      	; 0x1a0e <__ftoa_engine+0x36>
    1a0c:	3c 5f       	subi	r19, 0xFC	; 252
    1a0e:	3c 5f       	subi	r19, 0xFC	; 252
    1a10:	3d 93       	st	X+, r19
    1a12:	91 30       	cpi	r25, 0x01	; 1
    1a14:	08 f0       	brcs	.+2      	; 0x1a18 <__ftoa_engine+0x40>
    1a16:	80 68       	ori	r24, 0x80	; 128
    1a18:	91 1d       	adc	r25, r1
    1a1a:	df 93       	push	r29
    1a1c:	cf 93       	push	r28
    1a1e:	1f 93       	push	r17
    1a20:	0f 93       	push	r16
    1a22:	ff 92       	push	r15
    1a24:	ef 92       	push	r14
    1a26:	19 2f       	mov	r17, r25
    1a28:	98 7f       	andi	r25, 0xF8	; 248
    1a2a:	96 95       	lsr	r25
    1a2c:	e9 2f       	mov	r30, r25
    1a2e:	96 95       	lsr	r25
    1a30:	96 95       	lsr	r25
    1a32:	e9 0f       	add	r30, r25
    1a34:	ff 27       	eor	r31, r31
    1a36:	e2 57       	subi	r30, 0x72	; 114
    1a38:	ff 4f       	sbci	r31, 0xFF	; 255
    1a3a:	99 27       	eor	r25, r25
    1a3c:	33 27       	eor	r19, r19
    1a3e:	ee 24       	eor	r14, r14
    1a40:	ff 24       	eor	r15, r15
    1a42:	a7 01       	movw	r20, r14
    1a44:	e7 01       	movw	r28, r14
    1a46:	05 90       	lpm	r0, Z+
    1a48:	08 94       	sec
    1a4a:	07 94       	ror	r0
    1a4c:	28 f4       	brcc	.+10     	; 0x1a58 <__ftoa_engine+0x80>
    1a4e:	36 0f       	add	r19, r22
    1a50:	e7 1e       	adc	r14, r23
    1a52:	f8 1e       	adc	r15, r24
    1a54:	49 1f       	adc	r20, r25
    1a56:	51 1d       	adc	r21, r1
    1a58:	66 0f       	add	r22, r22
    1a5a:	77 1f       	adc	r23, r23
    1a5c:	88 1f       	adc	r24, r24
    1a5e:	99 1f       	adc	r25, r25
    1a60:	06 94       	lsr	r0
    1a62:	a1 f7       	brne	.-24     	; 0x1a4c <__ftoa_engine+0x74>
    1a64:	05 90       	lpm	r0, Z+
    1a66:	07 94       	ror	r0
    1a68:	28 f4       	brcc	.+10     	; 0x1a74 <__ftoa_engine+0x9c>
    1a6a:	e7 0e       	add	r14, r23
    1a6c:	f8 1e       	adc	r15, r24
    1a6e:	49 1f       	adc	r20, r25
    1a70:	56 1f       	adc	r21, r22
    1a72:	c1 1d       	adc	r28, r1
    1a74:	77 0f       	add	r23, r23
    1a76:	88 1f       	adc	r24, r24
    1a78:	99 1f       	adc	r25, r25
    1a7a:	66 1f       	adc	r22, r22
    1a7c:	06 94       	lsr	r0
    1a7e:	a1 f7       	brne	.-24     	; 0x1a68 <__ftoa_engine+0x90>
    1a80:	05 90       	lpm	r0, Z+
    1a82:	07 94       	ror	r0
    1a84:	28 f4       	brcc	.+10     	; 0x1a90 <__ftoa_engine+0xb8>
    1a86:	f8 0e       	add	r15, r24
    1a88:	49 1f       	adc	r20, r25
    1a8a:	56 1f       	adc	r21, r22
    1a8c:	c7 1f       	adc	r28, r23
    1a8e:	d1 1d       	adc	r29, r1
    1a90:	88 0f       	add	r24, r24
    1a92:	99 1f       	adc	r25, r25
    1a94:	66 1f       	adc	r22, r22
    1a96:	77 1f       	adc	r23, r23
    1a98:	06 94       	lsr	r0
    1a9a:	a1 f7       	brne	.-24     	; 0x1a84 <__ftoa_engine+0xac>
    1a9c:	05 90       	lpm	r0, Z+
    1a9e:	07 94       	ror	r0
    1aa0:	20 f4       	brcc	.+8      	; 0x1aaa <__ftoa_engine+0xd2>
    1aa2:	49 0f       	add	r20, r25
    1aa4:	56 1f       	adc	r21, r22
    1aa6:	c7 1f       	adc	r28, r23
    1aa8:	d8 1f       	adc	r29, r24
    1aaa:	99 0f       	add	r25, r25
    1aac:	66 1f       	adc	r22, r22
    1aae:	77 1f       	adc	r23, r23
    1ab0:	88 1f       	adc	r24, r24
    1ab2:	06 94       	lsr	r0
    1ab4:	a9 f7       	brne	.-22     	; 0x1aa0 <__ftoa_engine+0xc8>
    1ab6:	84 91       	lpm	r24, Z
    1ab8:	10 95       	com	r17
    1aba:	17 70       	andi	r17, 0x07	; 7
    1abc:	41 f0       	breq	.+16     	; 0x1ace <__ftoa_engine+0xf6>
    1abe:	d6 95       	lsr	r29
    1ac0:	c7 95       	ror	r28
    1ac2:	57 95       	ror	r21
    1ac4:	47 95       	ror	r20
    1ac6:	f7 94       	ror	r15
    1ac8:	e7 94       	ror	r14
    1aca:	1a 95       	dec	r17
    1acc:	c1 f7       	brne	.-16     	; 0x1abe <__ftoa_engine+0xe6>
    1ace:	e4 e3       	ldi	r30, 0x34	; 52
    1ad0:	f0 e0       	ldi	r31, 0x00	; 0
    1ad2:	68 94       	set
    1ad4:	15 90       	lpm	r1, Z+
    1ad6:	15 91       	lpm	r17, Z+
    1ad8:	35 91       	lpm	r19, Z+
    1ada:	65 91       	lpm	r22, Z+
    1adc:	95 91       	lpm	r25, Z+
    1ade:	05 90       	lpm	r0, Z+
    1ae0:	7f e2       	ldi	r23, 0x2F	; 47
    1ae2:	73 95       	inc	r23
    1ae4:	e1 18       	sub	r14, r1
    1ae6:	f1 0a       	sbc	r15, r17
    1ae8:	43 0b       	sbc	r20, r19
    1aea:	56 0b       	sbc	r21, r22
    1aec:	c9 0b       	sbc	r28, r25
    1aee:	d0 09       	sbc	r29, r0
    1af0:	c0 f7       	brcc	.-16     	; 0x1ae2 <__ftoa_engine+0x10a>
    1af2:	e1 0c       	add	r14, r1
    1af4:	f1 1e       	adc	r15, r17
    1af6:	43 1f       	adc	r20, r19
    1af8:	56 1f       	adc	r21, r22
    1afa:	c9 1f       	adc	r28, r25
    1afc:	d0 1d       	adc	r29, r0
    1afe:	7e f4       	brtc	.+30     	; 0x1b1e <__ftoa_engine+0x146>
    1b00:	70 33       	cpi	r23, 0x30	; 48
    1b02:	11 f4       	brne	.+4      	; 0x1b08 <__ftoa_engine+0x130>
    1b04:	8a 95       	dec	r24
    1b06:	e6 cf       	rjmp	.-52     	; 0x1ad4 <__ftoa_engine+0xfc>
    1b08:	e8 94       	clt
    1b0a:	01 50       	subi	r16, 0x01	; 1
    1b0c:	30 f0       	brcs	.+12     	; 0x1b1a <__ftoa_engine+0x142>
    1b0e:	08 0f       	add	r16, r24
    1b10:	0a f4       	brpl	.+2      	; 0x1b14 <__ftoa_engine+0x13c>
    1b12:	00 27       	eor	r16, r16
    1b14:	02 17       	cp	r16, r18
    1b16:	08 f4       	brcc	.+2      	; 0x1b1a <__ftoa_engine+0x142>
    1b18:	20 2f       	mov	r18, r16
    1b1a:	23 95       	inc	r18
    1b1c:	02 2f       	mov	r16, r18
    1b1e:	7a 33       	cpi	r23, 0x3A	; 58
    1b20:	28 f0       	brcs	.+10     	; 0x1b2c <__ftoa_engine+0x154>
    1b22:	79 e3       	ldi	r23, 0x39	; 57
    1b24:	7d 93       	st	X+, r23
    1b26:	2a 95       	dec	r18
    1b28:	e9 f7       	brne	.-6      	; 0x1b24 <__ftoa_engine+0x14c>
    1b2a:	10 c0       	rjmp	.+32     	; 0x1b4c <__ftoa_engine+0x174>
    1b2c:	7d 93       	st	X+, r23
    1b2e:	2a 95       	dec	r18
    1b30:	89 f6       	brne	.-94     	; 0x1ad4 <__ftoa_engine+0xfc>
    1b32:	06 94       	lsr	r0
    1b34:	97 95       	ror	r25
    1b36:	67 95       	ror	r22
    1b38:	37 95       	ror	r19
    1b3a:	17 95       	ror	r17
    1b3c:	17 94       	ror	r1
    1b3e:	e1 18       	sub	r14, r1
    1b40:	f1 0a       	sbc	r15, r17
    1b42:	43 0b       	sbc	r20, r19
    1b44:	56 0b       	sbc	r21, r22
    1b46:	c9 0b       	sbc	r28, r25
    1b48:	d0 09       	sbc	r29, r0
    1b4a:	98 f0       	brcs	.+38     	; 0x1b72 <__ftoa_engine+0x19a>
    1b4c:	23 95       	inc	r18
    1b4e:	7e 91       	ld	r23, -X
    1b50:	73 95       	inc	r23
    1b52:	7a 33       	cpi	r23, 0x3A	; 58
    1b54:	08 f0       	brcs	.+2      	; 0x1b58 <__ftoa_engine+0x180>
    1b56:	70 e3       	ldi	r23, 0x30	; 48
    1b58:	7c 93       	st	X, r23
    1b5a:	20 13       	cpse	r18, r16
    1b5c:	b8 f7       	brcc	.-18     	; 0x1b4c <__ftoa_engine+0x174>
    1b5e:	7e 91       	ld	r23, -X
    1b60:	70 61       	ori	r23, 0x10	; 16
    1b62:	7d 93       	st	X+, r23
    1b64:	30 f0       	brcs	.+12     	; 0x1b72 <__ftoa_engine+0x19a>
    1b66:	83 95       	inc	r24
    1b68:	71 e3       	ldi	r23, 0x31	; 49
    1b6a:	7d 93       	st	X+, r23
    1b6c:	70 e3       	ldi	r23, 0x30	; 48
    1b6e:	2a 95       	dec	r18
    1b70:	e1 f7       	brne	.-8      	; 0x1b6a <__ftoa_engine+0x192>
    1b72:	11 24       	eor	r1, r1
    1b74:	ef 90       	pop	r14
    1b76:	ff 90       	pop	r15
    1b78:	0f 91       	pop	r16
    1b7a:	1f 91       	pop	r17
    1b7c:	cf 91       	pop	r28
    1b7e:	df 91       	pop	r29
    1b80:	99 27       	eor	r25, r25
    1b82:	87 fd       	sbrc	r24, 7
    1b84:	90 95       	com	r25
    1b86:	08 95       	ret

00001b88 <eeprom_read_byte>:
    1b88:	f9 99       	sbic	0x1f, 1	; 31
    1b8a:	fe cf       	rjmp	.-4      	; 0x1b88 <eeprom_read_byte>
    1b8c:	92 bd       	out	0x22, r25	; 34
    1b8e:	81 bd       	out	0x21, r24	; 33
    1b90:	f8 9a       	sbi	0x1f, 0	; 31
    1b92:	99 27       	eor	r25, r25
    1b94:	80 b5       	in	r24, 0x20	; 32
    1b96:	08 95       	ret

00001b98 <eeprom_read_dword>:
    1b98:	a6 e1       	ldi	r26, 0x16	; 22
    1b9a:	b0 e0       	ldi	r27, 0x00	; 0
    1b9c:	44 e0       	ldi	r20, 0x04	; 4
    1b9e:	50 e0       	ldi	r21, 0x00	; 0
    1ba0:	1c c0       	rjmp	.+56     	; 0x1bda <eeprom_read_blraw>

00001ba2 <eeprom_update_byte>:
    1ba2:	26 2f       	mov	r18, r22

00001ba4 <eeprom_update_r18>:
    1ba4:	f9 99       	sbic	0x1f, 1	; 31
    1ba6:	fe cf       	rjmp	.-4      	; 0x1ba4 <eeprom_update_r18>
    1ba8:	92 bd       	out	0x22, r25	; 34
    1baa:	81 bd       	out	0x21, r24	; 33
    1bac:	f8 9a       	sbi	0x1f, 0	; 31
    1bae:	01 97       	sbiw	r24, 0x01	; 1
    1bb0:	00 b4       	in	r0, 0x20	; 32
    1bb2:	02 16       	cp	r0, r18
    1bb4:	39 f0       	breq	.+14     	; 0x1bc4 <eeprom_update_r18+0x20>
    1bb6:	1f ba       	out	0x1f, r1	; 31
    1bb8:	20 bd       	out	0x20, r18	; 32
    1bba:	0f b6       	in	r0, 0x3f	; 63
    1bbc:	f8 94       	cli
    1bbe:	fa 9a       	sbi	0x1f, 2	; 31
    1bc0:	f9 9a       	sbi	0x1f, 1	; 31
    1bc2:	0f be       	out	0x3f, r0	; 63
    1bc4:	08 95       	ret

00001bc6 <eeprom_update_dword>:
    1bc6:	03 96       	adiw	r24, 0x03	; 3
    1bc8:	27 2f       	mov	r18, r23
    1bca:	ec df       	rcall	.-40     	; 0x1ba4 <eeprom_update_r18>
    1bcc:	ea df       	rcall	.-44     	; 0x1ba2 <eeprom_update_byte>
    1bce:	25 2f       	mov	r18, r21
    1bd0:	e9 df       	rcall	.-46     	; 0x1ba4 <eeprom_update_r18>
    1bd2:	24 2f       	mov	r18, r20
    1bd4:	e7 cf       	rjmp	.-50     	; 0x1ba4 <eeprom_update_r18>

00001bd6 <eeprom_read_block>:
    1bd6:	dc 01       	movw	r26, r24
    1bd8:	cb 01       	movw	r24, r22

00001bda <eeprom_read_blraw>:
    1bda:	fc 01       	movw	r30, r24
    1bdc:	f9 99       	sbic	0x1f, 1	; 31
    1bde:	fe cf       	rjmp	.-4      	; 0x1bdc <eeprom_read_blraw+0x2>
    1be0:	06 c0       	rjmp	.+12     	; 0x1bee <eeprom_read_blraw+0x14>
    1be2:	f2 bd       	out	0x22, r31	; 34
    1be4:	e1 bd       	out	0x21, r30	; 33
    1be6:	f8 9a       	sbi	0x1f, 0	; 31
    1be8:	31 96       	adiw	r30, 0x01	; 1
    1bea:	00 b4       	in	r0, 0x20	; 32
    1bec:	0d 92       	st	X+, r0
    1bee:	41 50       	subi	r20, 0x01	; 1
    1bf0:	50 40       	sbci	r21, 0x00	; 0
    1bf2:	b8 f7       	brcc	.-18     	; 0x1be2 <eeprom_read_blraw+0x8>
    1bf4:	08 95       	ret

00001bf6 <__prologue_saves__>:
    1bf6:	2f 92       	push	r2
    1bf8:	3f 92       	push	r3
    1bfa:	4f 92       	push	r4
    1bfc:	5f 92       	push	r5
    1bfe:	6f 92       	push	r6
    1c00:	7f 92       	push	r7
    1c02:	8f 92       	push	r8
    1c04:	9f 92       	push	r9
    1c06:	af 92       	push	r10
    1c08:	bf 92       	push	r11
    1c0a:	cf 92       	push	r12
    1c0c:	df 92       	push	r13
    1c0e:	ef 92       	push	r14
    1c10:	ff 92       	push	r15
    1c12:	0f 93       	push	r16
    1c14:	1f 93       	push	r17
    1c16:	cf 93       	push	r28
    1c18:	df 93       	push	r29
    1c1a:	cd b7       	in	r28, 0x3d	; 61
    1c1c:	de b7       	in	r29, 0x3e	; 62
    1c1e:	ca 1b       	sub	r28, r26
    1c20:	db 0b       	sbc	r29, r27
    1c22:	0f b6       	in	r0, 0x3f	; 63
    1c24:	f8 94       	cli
    1c26:	de bf       	out	0x3e, r29	; 62
    1c28:	0f be       	out	0x3f, r0	; 63
    1c2a:	cd bf       	out	0x3d, r28	; 61
    1c2c:	09 94       	ijmp

00001c2e <__epilogue_restores__>:
    1c2e:	2a 88       	ldd	r2, Y+18	; 0x12
    1c30:	39 88       	ldd	r3, Y+17	; 0x11
    1c32:	48 88       	ldd	r4, Y+16	; 0x10
    1c34:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c36:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c38:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c3a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c3c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c3e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c40:	b9 84       	ldd	r11, Y+9	; 0x09
    1c42:	c8 84       	ldd	r12, Y+8	; 0x08
    1c44:	df 80       	ldd	r13, Y+7	; 0x07
    1c46:	ee 80       	ldd	r14, Y+6	; 0x06
    1c48:	fd 80       	ldd	r15, Y+5	; 0x05
    1c4a:	0c 81       	ldd	r16, Y+4	; 0x04
    1c4c:	1b 81       	ldd	r17, Y+3	; 0x03
    1c4e:	aa 81       	ldd	r26, Y+2	; 0x02
    1c50:	b9 81       	ldd	r27, Y+1	; 0x01
    1c52:	ce 0f       	add	r28, r30
    1c54:	d1 1d       	adc	r29, r1
    1c56:	0f b6       	in	r0, 0x3f	; 63
    1c58:	f8 94       	cli
    1c5a:	de bf       	out	0x3e, r29	; 62
    1c5c:	0f be       	out	0x3f, r0	; 63
    1c5e:	cd bf       	out	0x3d, r28	; 61
    1c60:	ed 01       	movw	r28, r26
    1c62:	08 95       	ret

00001c64 <_exit>:
    1c64:	f8 94       	cli

00001c66 <__stop_program>:
    1c66:	ff cf       	rjmp	.-2      	; 0x1c66 <__stop_program>
